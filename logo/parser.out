Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement_list statement
Rule 2     statement_list -> statement
Rule 3     statement -> turtle_instruction
Rule 4     statement -> repeat_statement
Rule 5     statement -> if_statement
Rule 6     statement -> ifelse_statement
Rule 7     statement -> variable_declaration
Rule 8     statement -> print_statement
Rule 9     turtle_instruction -> SETXY LBR expression COMMA expression RBR
Rule 10    turtle_instruction -> FORWARD expression
Rule 11    turtle_instruction -> BACK expression
Rule 12    turtle_instruction -> RIGHT expression
Rule 13    turtle_instruction -> LEFT expression
Rule 14    turtle_instruction -> SETX expression
Rule 15    turtle_instruction -> SETY expression
Rule 16    turtle_instruction -> SETH expression
Rule 17    turtle_instruction -> SPEED expression
Rule 18    turtle_instruction -> SETPS expression
Rule 19    turtle_instruction -> SETPC word
Rule 20    turtle_instruction -> SETBC word
Rule 21    turtle_instruction -> PENUP
Rule 22    turtle_instruction -> PENDOWN
Rule 23    turtle_instruction -> SHOW
Rule 24    turtle_instruction -> HIDE
Rule 25    turtle_instruction -> HOME
Rule 26    turtle_instruction -> CLEAN
Rule 27    turtle_instruction -> RESET
Rule 28    repeat_statement -> REPEAT expression LBR statement_list RBR
Rule 29    if_statement -> IF condition LBR statement_list RBR
Rule 30    ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR
Rule 31    variable_declaration -> MAKE word expression
Rule 32    print_statement -> PRINT word
Rule 33    print_statement -> PRINT expression
Rule 34    expression -> INT
Rule 35    expression -> FLOAT
Rule 36    expression -> name
Rule 37    expression -> REPCOUNT
Rule 38    expression -> LPAR expression RPAR
Rule 39    expression -> MINUS expression
Rule 40    expression -> RANDOM expression
Rule 41    expression -> expression TIMES expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression PLUS expression
Rule 44    expression -> expression MINUS expression
Rule 45    expression -> expression POWER expression
Rule 46    condition -> TRUE
Rule 47    condition -> FALSE
Rule 48    condition -> expression GT expression
Rule 49    condition -> expression LT expression
Rule 50    condition -> expression GTE expression
Rule 51    condition -> expression LTE expression
Rule 52    condition -> expression EQUALS expression
Rule 53    condition -> expression NE expression
Rule 54    word -> QUOTE STRING
Rule 55    name -> COLON STRING

Terminals, with rules where they appear

BACK                 : 11
CLEAN                : 26
COLON                : 55
COMMA                : 9
DIVIDE               : 42
EQUALS               : 52
FALSE                : 47
FLOAT                : 35
FORWARD              : 10
GT                   : 48
GTE                  : 50
HIDE                 : 24
HOME                 : 25
IF                   : 29
IFELSE               : 30
INT                  : 34
LBR                  : 9 28 29 30 30
LEFT                 : 13
LPAR                 : 38
LT                   : 49
LTE                  : 51
MAKE                 : 31
MINUS                : 39 44
NE                   : 53
PENDOWN              : 22
PENUP                : 21
PLUS                 : 43
POWER                : 45
PRINT                : 32 33
QUOTE                : 54
RANDOM               : 40
RBR                  : 9 28 29 30 30
REPCOUNT             : 37
REPEAT               : 28
RESET                : 27
RIGHT                : 12
RPAR                 : 38
SETBC                : 20
SETH                 : 16
SETPC                : 19
SETPS                : 18
SETX                 : 14
SETXY                : 9
SETY                 : 15
SHOW                 : 23
SPEED                : 17
STRING               : 54 55
TIMES                : 41
TRUE                 : 46
error                : 

Nonterminals, with rules where they appear

condition            : 29 30
expression           : 9 9 10 11 12 13 14 15 16 17 18 28 31 33 38 39 40 41 41 42 42 43 43 44 44 45 45 48 48 49 49 50 50 51 51 52 52 53 53
if_statement         : 5
ifelse_statement     : 6
name                 : 36
print_statement      : 8
repeat_statement     : 4
statement            : 1 2
statement_list       : 1 28 29 30 30 0
turtle_instruction   : 3
variable_declaration : 7
word                 : 19 20 31 32

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 1

    (0) S' -> statement_list .
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement                      shift and go to state 33
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 2

    (2) statement_list -> statement .

    SETXY           reduce using rule 2 (statement_list -> statement .)
    FORWARD         reduce using rule 2 (statement_list -> statement .)
    BACK            reduce using rule 2 (statement_list -> statement .)
    RIGHT           reduce using rule 2 (statement_list -> statement .)
    LEFT            reduce using rule 2 (statement_list -> statement .)
    SETX            reduce using rule 2 (statement_list -> statement .)
    SETY            reduce using rule 2 (statement_list -> statement .)
    SETH            reduce using rule 2 (statement_list -> statement .)
    SPEED           reduce using rule 2 (statement_list -> statement .)
    SETPS           reduce using rule 2 (statement_list -> statement .)
    SETPC           reduce using rule 2 (statement_list -> statement .)
    SETBC           reduce using rule 2 (statement_list -> statement .)
    PENUP           reduce using rule 2 (statement_list -> statement .)
    PENDOWN         reduce using rule 2 (statement_list -> statement .)
    SHOW            reduce using rule 2 (statement_list -> statement .)
    HIDE            reduce using rule 2 (statement_list -> statement .)
    HOME            reduce using rule 2 (statement_list -> statement .)
    CLEAN           reduce using rule 2 (statement_list -> statement .)
    RESET           reduce using rule 2 (statement_list -> statement .)
    REPEAT          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    IFELSE          reduce using rule 2 (statement_list -> statement .)
    MAKE            reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBR             reduce using rule 2 (statement_list -> statement .)


state 3

    (3) statement -> turtle_instruction .

    SETXY           reduce using rule 3 (statement -> turtle_instruction .)
    FORWARD         reduce using rule 3 (statement -> turtle_instruction .)
    BACK            reduce using rule 3 (statement -> turtle_instruction .)
    RIGHT           reduce using rule 3 (statement -> turtle_instruction .)
    LEFT            reduce using rule 3 (statement -> turtle_instruction .)
    SETX            reduce using rule 3 (statement -> turtle_instruction .)
    SETY            reduce using rule 3 (statement -> turtle_instruction .)
    SETH            reduce using rule 3 (statement -> turtle_instruction .)
    SPEED           reduce using rule 3 (statement -> turtle_instruction .)
    SETPS           reduce using rule 3 (statement -> turtle_instruction .)
    SETPC           reduce using rule 3 (statement -> turtle_instruction .)
    SETBC           reduce using rule 3 (statement -> turtle_instruction .)
    PENUP           reduce using rule 3 (statement -> turtle_instruction .)
    PENDOWN         reduce using rule 3 (statement -> turtle_instruction .)
    SHOW            reduce using rule 3 (statement -> turtle_instruction .)
    HIDE            reduce using rule 3 (statement -> turtle_instruction .)
    HOME            reduce using rule 3 (statement -> turtle_instruction .)
    CLEAN           reduce using rule 3 (statement -> turtle_instruction .)
    RESET           reduce using rule 3 (statement -> turtle_instruction .)
    REPEAT          reduce using rule 3 (statement -> turtle_instruction .)
    IF              reduce using rule 3 (statement -> turtle_instruction .)
    IFELSE          reduce using rule 3 (statement -> turtle_instruction .)
    MAKE            reduce using rule 3 (statement -> turtle_instruction .)
    PRINT           reduce using rule 3 (statement -> turtle_instruction .)
    $end            reduce using rule 3 (statement -> turtle_instruction .)
    RBR             reduce using rule 3 (statement -> turtle_instruction .)


state 4

    (4) statement -> repeat_statement .

    SETXY           reduce using rule 4 (statement -> repeat_statement .)
    FORWARD         reduce using rule 4 (statement -> repeat_statement .)
    BACK            reduce using rule 4 (statement -> repeat_statement .)
    RIGHT           reduce using rule 4 (statement -> repeat_statement .)
    LEFT            reduce using rule 4 (statement -> repeat_statement .)
    SETX            reduce using rule 4 (statement -> repeat_statement .)
    SETY            reduce using rule 4 (statement -> repeat_statement .)
    SETH            reduce using rule 4 (statement -> repeat_statement .)
    SPEED           reduce using rule 4 (statement -> repeat_statement .)
    SETPS           reduce using rule 4 (statement -> repeat_statement .)
    SETPC           reduce using rule 4 (statement -> repeat_statement .)
    SETBC           reduce using rule 4 (statement -> repeat_statement .)
    PENUP           reduce using rule 4 (statement -> repeat_statement .)
    PENDOWN         reduce using rule 4 (statement -> repeat_statement .)
    SHOW            reduce using rule 4 (statement -> repeat_statement .)
    HIDE            reduce using rule 4 (statement -> repeat_statement .)
    HOME            reduce using rule 4 (statement -> repeat_statement .)
    CLEAN           reduce using rule 4 (statement -> repeat_statement .)
    RESET           reduce using rule 4 (statement -> repeat_statement .)
    REPEAT          reduce using rule 4 (statement -> repeat_statement .)
    IF              reduce using rule 4 (statement -> repeat_statement .)
    IFELSE          reduce using rule 4 (statement -> repeat_statement .)
    MAKE            reduce using rule 4 (statement -> repeat_statement .)
    PRINT           reduce using rule 4 (statement -> repeat_statement .)
    $end            reduce using rule 4 (statement -> repeat_statement .)
    RBR             reduce using rule 4 (statement -> repeat_statement .)


state 5

    (5) statement -> if_statement .

    SETXY           reduce using rule 5 (statement -> if_statement .)
    FORWARD         reduce using rule 5 (statement -> if_statement .)
    BACK            reduce using rule 5 (statement -> if_statement .)
    RIGHT           reduce using rule 5 (statement -> if_statement .)
    LEFT            reduce using rule 5 (statement -> if_statement .)
    SETX            reduce using rule 5 (statement -> if_statement .)
    SETY            reduce using rule 5 (statement -> if_statement .)
    SETH            reduce using rule 5 (statement -> if_statement .)
    SPEED           reduce using rule 5 (statement -> if_statement .)
    SETPS           reduce using rule 5 (statement -> if_statement .)
    SETPC           reduce using rule 5 (statement -> if_statement .)
    SETBC           reduce using rule 5 (statement -> if_statement .)
    PENUP           reduce using rule 5 (statement -> if_statement .)
    PENDOWN         reduce using rule 5 (statement -> if_statement .)
    SHOW            reduce using rule 5 (statement -> if_statement .)
    HIDE            reduce using rule 5 (statement -> if_statement .)
    HOME            reduce using rule 5 (statement -> if_statement .)
    CLEAN           reduce using rule 5 (statement -> if_statement .)
    RESET           reduce using rule 5 (statement -> if_statement .)
    REPEAT          reduce using rule 5 (statement -> if_statement .)
    IF              reduce using rule 5 (statement -> if_statement .)
    IFELSE          reduce using rule 5 (statement -> if_statement .)
    MAKE            reduce using rule 5 (statement -> if_statement .)
    PRINT           reduce using rule 5 (statement -> if_statement .)
    $end            reduce using rule 5 (statement -> if_statement .)
    RBR             reduce using rule 5 (statement -> if_statement .)


state 6

    (6) statement -> ifelse_statement .

    SETXY           reduce using rule 6 (statement -> ifelse_statement .)
    FORWARD         reduce using rule 6 (statement -> ifelse_statement .)
    BACK            reduce using rule 6 (statement -> ifelse_statement .)
    RIGHT           reduce using rule 6 (statement -> ifelse_statement .)
    LEFT            reduce using rule 6 (statement -> ifelse_statement .)
    SETX            reduce using rule 6 (statement -> ifelse_statement .)
    SETY            reduce using rule 6 (statement -> ifelse_statement .)
    SETH            reduce using rule 6 (statement -> ifelse_statement .)
    SPEED           reduce using rule 6 (statement -> ifelse_statement .)
    SETPS           reduce using rule 6 (statement -> ifelse_statement .)
    SETPC           reduce using rule 6 (statement -> ifelse_statement .)
    SETBC           reduce using rule 6 (statement -> ifelse_statement .)
    PENUP           reduce using rule 6 (statement -> ifelse_statement .)
    PENDOWN         reduce using rule 6 (statement -> ifelse_statement .)
    SHOW            reduce using rule 6 (statement -> ifelse_statement .)
    HIDE            reduce using rule 6 (statement -> ifelse_statement .)
    HOME            reduce using rule 6 (statement -> ifelse_statement .)
    CLEAN           reduce using rule 6 (statement -> ifelse_statement .)
    RESET           reduce using rule 6 (statement -> ifelse_statement .)
    REPEAT          reduce using rule 6 (statement -> ifelse_statement .)
    IF              reduce using rule 6 (statement -> ifelse_statement .)
    IFELSE          reduce using rule 6 (statement -> ifelse_statement .)
    MAKE            reduce using rule 6 (statement -> ifelse_statement .)
    PRINT           reduce using rule 6 (statement -> ifelse_statement .)
    $end            reduce using rule 6 (statement -> ifelse_statement .)
    RBR             reduce using rule 6 (statement -> ifelse_statement .)


state 7

    (7) statement -> variable_declaration .

    SETXY           reduce using rule 7 (statement -> variable_declaration .)
    FORWARD         reduce using rule 7 (statement -> variable_declaration .)
    BACK            reduce using rule 7 (statement -> variable_declaration .)
    RIGHT           reduce using rule 7 (statement -> variable_declaration .)
    LEFT            reduce using rule 7 (statement -> variable_declaration .)
    SETX            reduce using rule 7 (statement -> variable_declaration .)
    SETY            reduce using rule 7 (statement -> variable_declaration .)
    SETH            reduce using rule 7 (statement -> variable_declaration .)
    SPEED           reduce using rule 7 (statement -> variable_declaration .)
    SETPS           reduce using rule 7 (statement -> variable_declaration .)
    SETPC           reduce using rule 7 (statement -> variable_declaration .)
    SETBC           reduce using rule 7 (statement -> variable_declaration .)
    PENUP           reduce using rule 7 (statement -> variable_declaration .)
    PENDOWN         reduce using rule 7 (statement -> variable_declaration .)
    SHOW            reduce using rule 7 (statement -> variable_declaration .)
    HIDE            reduce using rule 7 (statement -> variable_declaration .)
    HOME            reduce using rule 7 (statement -> variable_declaration .)
    CLEAN           reduce using rule 7 (statement -> variable_declaration .)
    RESET           reduce using rule 7 (statement -> variable_declaration .)
    REPEAT          reduce using rule 7 (statement -> variable_declaration .)
    IF              reduce using rule 7 (statement -> variable_declaration .)
    IFELSE          reduce using rule 7 (statement -> variable_declaration .)
    MAKE            reduce using rule 7 (statement -> variable_declaration .)
    PRINT           reduce using rule 7 (statement -> variable_declaration .)
    $end            reduce using rule 7 (statement -> variable_declaration .)
    RBR             reduce using rule 7 (statement -> variable_declaration .)


state 8

    (8) statement -> print_statement .

    SETXY           reduce using rule 8 (statement -> print_statement .)
    FORWARD         reduce using rule 8 (statement -> print_statement .)
    BACK            reduce using rule 8 (statement -> print_statement .)
    RIGHT           reduce using rule 8 (statement -> print_statement .)
    LEFT            reduce using rule 8 (statement -> print_statement .)
    SETX            reduce using rule 8 (statement -> print_statement .)
    SETY            reduce using rule 8 (statement -> print_statement .)
    SETH            reduce using rule 8 (statement -> print_statement .)
    SPEED           reduce using rule 8 (statement -> print_statement .)
    SETPS           reduce using rule 8 (statement -> print_statement .)
    SETPC           reduce using rule 8 (statement -> print_statement .)
    SETBC           reduce using rule 8 (statement -> print_statement .)
    PENUP           reduce using rule 8 (statement -> print_statement .)
    PENDOWN         reduce using rule 8 (statement -> print_statement .)
    SHOW            reduce using rule 8 (statement -> print_statement .)
    HIDE            reduce using rule 8 (statement -> print_statement .)
    HOME            reduce using rule 8 (statement -> print_statement .)
    CLEAN           reduce using rule 8 (statement -> print_statement .)
    RESET           reduce using rule 8 (statement -> print_statement .)
    REPEAT          reduce using rule 8 (statement -> print_statement .)
    IF              reduce using rule 8 (statement -> print_statement .)
    IFELSE          reduce using rule 8 (statement -> print_statement .)
    MAKE            reduce using rule 8 (statement -> print_statement .)
    PRINT           reduce using rule 8 (statement -> print_statement .)
    $end            reduce using rule 8 (statement -> print_statement .)
    RBR             reduce using rule 8 (statement -> print_statement .)


state 9

    (9) turtle_instruction -> SETXY . LBR expression COMMA expression RBR

    LBR             shift and go to state 34


state 10

    (10) turtle_instruction -> FORWARD . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 35
    name                           shift and go to state 38

state 11

    (11) turtle_instruction -> BACK . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 44
    name                           shift and go to state 38

state 12

    (12) turtle_instruction -> RIGHT . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 45
    name                           shift and go to state 38

state 13

    (13) turtle_instruction -> LEFT . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 46
    name                           shift and go to state 38

state 14

    (14) turtle_instruction -> SETX . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 47
    name                           shift and go to state 38

state 15

    (15) turtle_instruction -> SETY . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 48
    name                           shift and go to state 38

state 16

    (16) turtle_instruction -> SETH . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 49
    name                           shift and go to state 38

state 17

    (17) turtle_instruction -> SPEED . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 50
    name                           shift and go to state 38

state 18

    (18) turtle_instruction -> SETPS . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 51
    name                           shift and go to state 38

state 19

    (19) turtle_instruction -> SETPC . word
    (54) word -> . QUOTE STRING

    QUOTE           shift and go to state 53

    word                           shift and go to state 52

state 20

    (20) turtle_instruction -> SETBC . word
    (54) word -> . QUOTE STRING

    QUOTE           shift and go to state 53

    word                           shift and go to state 54

state 21

    (21) turtle_instruction -> PENUP .

    SETXY           reduce using rule 21 (turtle_instruction -> PENUP .)
    FORWARD         reduce using rule 21 (turtle_instruction -> PENUP .)
    BACK            reduce using rule 21 (turtle_instruction -> PENUP .)
    RIGHT           reduce using rule 21 (turtle_instruction -> PENUP .)
    LEFT            reduce using rule 21 (turtle_instruction -> PENUP .)
    SETX            reduce using rule 21 (turtle_instruction -> PENUP .)
    SETY            reduce using rule 21 (turtle_instruction -> PENUP .)
    SETH            reduce using rule 21 (turtle_instruction -> PENUP .)
    SPEED           reduce using rule 21 (turtle_instruction -> PENUP .)
    SETPS           reduce using rule 21 (turtle_instruction -> PENUP .)
    SETPC           reduce using rule 21 (turtle_instruction -> PENUP .)
    SETBC           reduce using rule 21 (turtle_instruction -> PENUP .)
    PENUP           reduce using rule 21 (turtle_instruction -> PENUP .)
    PENDOWN         reduce using rule 21 (turtle_instruction -> PENUP .)
    SHOW            reduce using rule 21 (turtle_instruction -> PENUP .)
    HIDE            reduce using rule 21 (turtle_instruction -> PENUP .)
    HOME            reduce using rule 21 (turtle_instruction -> PENUP .)
    CLEAN           reduce using rule 21 (turtle_instruction -> PENUP .)
    RESET           reduce using rule 21 (turtle_instruction -> PENUP .)
    REPEAT          reduce using rule 21 (turtle_instruction -> PENUP .)
    IF              reduce using rule 21 (turtle_instruction -> PENUP .)
    IFELSE          reduce using rule 21 (turtle_instruction -> PENUP .)
    MAKE            reduce using rule 21 (turtle_instruction -> PENUP .)
    PRINT           reduce using rule 21 (turtle_instruction -> PENUP .)
    $end            reduce using rule 21 (turtle_instruction -> PENUP .)
    RBR             reduce using rule 21 (turtle_instruction -> PENUP .)


state 22

    (22) turtle_instruction -> PENDOWN .

    SETXY           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    FORWARD         reduce using rule 22 (turtle_instruction -> PENDOWN .)
    BACK            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    RIGHT           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    LEFT            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    SETX            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    SETY            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    SETH            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    SPEED           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    SETPS           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    SETPC           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    SETBC           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    PENUP           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    PENDOWN         reduce using rule 22 (turtle_instruction -> PENDOWN .)
    SHOW            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    HIDE            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    HOME            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    CLEAN           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    RESET           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    REPEAT          reduce using rule 22 (turtle_instruction -> PENDOWN .)
    IF              reduce using rule 22 (turtle_instruction -> PENDOWN .)
    IFELSE          reduce using rule 22 (turtle_instruction -> PENDOWN .)
    MAKE            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    PRINT           reduce using rule 22 (turtle_instruction -> PENDOWN .)
    $end            reduce using rule 22 (turtle_instruction -> PENDOWN .)
    RBR             reduce using rule 22 (turtle_instruction -> PENDOWN .)


state 23

    (23) turtle_instruction -> SHOW .

    SETXY           reduce using rule 23 (turtle_instruction -> SHOW .)
    FORWARD         reduce using rule 23 (turtle_instruction -> SHOW .)
    BACK            reduce using rule 23 (turtle_instruction -> SHOW .)
    RIGHT           reduce using rule 23 (turtle_instruction -> SHOW .)
    LEFT            reduce using rule 23 (turtle_instruction -> SHOW .)
    SETX            reduce using rule 23 (turtle_instruction -> SHOW .)
    SETY            reduce using rule 23 (turtle_instruction -> SHOW .)
    SETH            reduce using rule 23 (turtle_instruction -> SHOW .)
    SPEED           reduce using rule 23 (turtle_instruction -> SHOW .)
    SETPS           reduce using rule 23 (turtle_instruction -> SHOW .)
    SETPC           reduce using rule 23 (turtle_instruction -> SHOW .)
    SETBC           reduce using rule 23 (turtle_instruction -> SHOW .)
    PENUP           reduce using rule 23 (turtle_instruction -> SHOW .)
    PENDOWN         reduce using rule 23 (turtle_instruction -> SHOW .)
    SHOW            reduce using rule 23 (turtle_instruction -> SHOW .)
    HIDE            reduce using rule 23 (turtle_instruction -> SHOW .)
    HOME            reduce using rule 23 (turtle_instruction -> SHOW .)
    CLEAN           reduce using rule 23 (turtle_instruction -> SHOW .)
    RESET           reduce using rule 23 (turtle_instruction -> SHOW .)
    REPEAT          reduce using rule 23 (turtle_instruction -> SHOW .)
    IF              reduce using rule 23 (turtle_instruction -> SHOW .)
    IFELSE          reduce using rule 23 (turtle_instruction -> SHOW .)
    MAKE            reduce using rule 23 (turtle_instruction -> SHOW .)
    PRINT           reduce using rule 23 (turtle_instruction -> SHOW .)
    $end            reduce using rule 23 (turtle_instruction -> SHOW .)
    RBR             reduce using rule 23 (turtle_instruction -> SHOW .)


state 24

    (24) turtle_instruction -> HIDE .

    SETXY           reduce using rule 24 (turtle_instruction -> HIDE .)
    FORWARD         reduce using rule 24 (turtle_instruction -> HIDE .)
    BACK            reduce using rule 24 (turtle_instruction -> HIDE .)
    RIGHT           reduce using rule 24 (turtle_instruction -> HIDE .)
    LEFT            reduce using rule 24 (turtle_instruction -> HIDE .)
    SETX            reduce using rule 24 (turtle_instruction -> HIDE .)
    SETY            reduce using rule 24 (turtle_instruction -> HIDE .)
    SETH            reduce using rule 24 (turtle_instruction -> HIDE .)
    SPEED           reduce using rule 24 (turtle_instruction -> HIDE .)
    SETPS           reduce using rule 24 (turtle_instruction -> HIDE .)
    SETPC           reduce using rule 24 (turtle_instruction -> HIDE .)
    SETBC           reduce using rule 24 (turtle_instruction -> HIDE .)
    PENUP           reduce using rule 24 (turtle_instruction -> HIDE .)
    PENDOWN         reduce using rule 24 (turtle_instruction -> HIDE .)
    SHOW            reduce using rule 24 (turtle_instruction -> HIDE .)
    HIDE            reduce using rule 24 (turtle_instruction -> HIDE .)
    HOME            reduce using rule 24 (turtle_instruction -> HIDE .)
    CLEAN           reduce using rule 24 (turtle_instruction -> HIDE .)
    RESET           reduce using rule 24 (turtle_instruction -> HIDE .)
    REPEAT          reduce using rule 24 (turtle_instruction -> HIDE .)
    IF              reduce using rule 24 (turtle_instruction -> HIDE .)
    IFELSE          reduce using rule 24 (turtle_instruction -> HIDE .)
    MAKE            reduce using rule 24 (turtle_instruction -> HIDE .)
    PRINT           reduce using rule 24 (turtle_instruction -> HIDE .)
    $end            reduce using rule 24 (turtle_instruction -> HIDE .)
    RBR             reduce using rule 24 (turtle_instruction -> HIDE .)


state 25

    (25) turtle_instruction -> HOME .

    SETXY           reduce using rule 25 (turtle_instruction -> HOME .)
    FORWARD         reduce using rule 25 (turtle_instruction -> HOME .)
    BACK            reduce using rule 25 (turtle_instruction -> HOME .)
    RIGHT           reduce using rule 25 (turtle_instruction -> HOME .)
    LEFT            reduce using rule 25 (turtle_instruction -> HOME .)
    SETX            reduce using rule 25 (turtle_instruction -> HOME .)
    SETY            reduce using rule 25 (turtle_instruction -> HOME .)
    SETH            reduce using rule 25 (turtle_instruction -> HOME .)
    SPEED           reduce using rule 25 (turtle_instruction -> HOME .)
    SETPS           reduce using rule 25 (turtle_instruction -> HOME .)
    SETPC           reduce using rule 25 (turtle_instruction -> HOME .)
    SETBC           reduce using rule 25 (turtle_instruction -> HOME .)
    PENUP           reduce using rule 25 (turtle_instruction -> HOME .)
    PENDOWN         reduce using rule 25 (turtle_instruction -> HOME .)
    SHOW            reduce using rule 25 (turtle_instruction -> HOME .)
    HIDE            reduce using rule 25 (turtle_instruction -> HOME .)
    HOME            reduce using rule 25 (turtle_instruction -> HOME .)
    CLEAN           reduce using rule 25 (turtle_instruction -> HOME .)
    RESET           reduce using rule 25 (turtle_instruction -> HOME .)
    REPEAT          reduce using rule 25 (turtle_instruction -> HOME .)
    IF              reduce using rule 25 (turtle_instruction -> HOME .)
    IFELSE          reduce using rule 25 (turtle_instruction -> HOME .)
    MAKE            reduce using rule 25 (turtle_instruction -> HOME .)
    PRINT           reduce using rule 25 (turtle_instruction -> HOME .)
    $end            reduce using rule 25 (turtle_instruction -> HOME .)
    RBR             reduce using rule 25 (turtle_instruction -> HOME .)


state 26

    (26) turtle_instruction -> CLEAN .

    SETXY           reduce using rule 26 (turtle_instruction -> CLEAN .)
    FORWARD         reduce using rule 26 (turtle_instruction -> CLEAN .)
    BACK            reduce using rule 26 (turtle_instruction -> CLEAN .)
    RIGHT           reduce using rule 26 (turtle_instruction -> CLEAN .)
    LEFT            reduce using rule 26 (turtle_instruction -> CLEAN .)
    SETX            reduce using rule 26 (turtle_instruction -> CLEAN .)
    SETY            reduce using rule 26 (turtle_instruction -> CLEAN .)
    SETH            reduce using rule 26 (turtle_instruction -> CLEAN .)
    SPEED           reduce using rule 26 (turtle_instruction -> CLEAN .)
    SETPS           reduce using rule 26 (turtle_instruction -> CLEAN .)
    SETPC           reduce using rule 26 (turtle_instruction -> CLEAN .)
    SETBC           reduce using rule 26 (turtle_instruction -> CLEAN .)
    PENUP           reduce using rule 26 (turtle_instruction -> CLEAN .)
    PENDOWN         reduce using rule 26 (turtle_instruction -> CLEAN .)
    SHOW            reduce using rule 26 (turtle_instruction -> CLEAN .)
    HIDE            reduce using rule 26 (turtle_instruction -> CLEAN .)
    HOME            reduce using rule 26 (turtle_instruction -> CLEAN .)
    CLEAN           reduce using rule 26 (turtle_instruction -> CLEAN .)
    RESET           reduce using rule 26 (turtle_instruction -> CLEAN .)
    REPEAT          reduce using rule 26 (turtle_instruction -> CLEAN .)
    IF              reduce using rule 26 (turtle_instruction -> CLEAN .)
    IFELSE          reduce using rule 26 (turtle_instruction -> CLEAN .)
    MAKE            reduce using rule 26 (turtle_instruction -> CLEAN .)
    PRINT           reduce using rule 26 (turtle_instruction -> CLEAN .)
    $end            reduce using rule 26 (turtle_instruction -> CLEAN .)
    RBR             reduce using rule 26 (turtle_instruction -> CLEAN .)


state 27

    (27) turtle_instruction -> RESET .

    SETXY           reduce using rule 27 (turtle_instruction -> RESET .)
    FORWARD         reduce using rule 27 (turtle_instruction -> RESET .)
    BACK            reduce using rule 27 (turtle_instruction -> RESET .)
    RIGHT           reduce using rule 27 (turtle_instruction -> RESET .)
    LEFT            reduce using rule 27 (turtle_instruction -> RESET .)
    SETX            reduce using rule 27 (turtle_instruction -> RESET .)
    SETY            reduce using rule 27 (turtle_instruction -> RESET .)
    SETH            reduce using rule 27 (turtle_instruction -> RESET .)
    SPEED           reduce using rule 27 (turtle_instruction -> RESET .)
    SETPS           reduce using rule 27 (turtle_instruction -> RESET .)
    SETPC           reduce using rule 27 (turtle_instruction -> RESET .)
    SETBC           reduce using rule 27 (turtle_instruction -> RESET .)
    PENUP           reduce using rule 27 (turtle_instruction -> RESET .)
    PENDOWN         reduce using rule 27 (turtle_instruction -> RESET .)
    SHOW            reduce using rule 27 (turtle_instruction -> RESET .)
    HIDE            reduce using rule 27 (turtle_instruction -> RESET .)
    HOME            reduce using rule 27 (turtle_instruction -> RESET .)
    CLEAN           reduce using rule 27 (turtle_instruction -> RESET .)
    RESET           reduce using rule 27 (turtle_instruction -> RESET .)
    REPEAT          reduce using rule 27 (turtle_instruction -> RESET .)
    IF              reduce using rule 27 (turtle_instruction -> RESET .)
    IFELSE          reduce using rule 27 (turtle_instruction -> RESET .)
    MAKE            reduce using rule 27 (turtle_instruction -> RESET .)
    PRINT           reduce using rule 27 (turtle_instruction -> RESET .)
    $end            reduce using rule 27 (turtle_instruction -> RESET .)
    RBR             reduce using rule 27 (turtle_instruction -> RESET .)


state 28

    (28) repeat_statement -> REPEAT . expression LBR statement_list RBR
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 55
    name                           shift and go to state 38

state 29

    (29) if_statement -> IF . condition LBR statement_list RBR
    (46) condition -> . TRUE
    (47) condition -> . FALSE
    (48) condition -> . expression GT expression
    (49) condition -> . expression LT expression
    (50) condition -> . expression GTE expression
    (51) condition -> . expression LTE expression
    (52) condition -> . expression EQUALS expression
    (53) condition -> . expression NE expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    condition                      shift and go to state 56
    expression                     shift and go to state 59
    name                           shift and go to state 38

state 30

    (30) ifelse_statement -> IFELSE . condition LBR statement_list RBR LBR statement_list RBR
    (46) condition -> . TRUE
    (47) condition -> . FALSE
    (48) condition -> . expression GT expression
    (49) condition -> . expression LT expression
    (50) condition -> . expression GTE expression
    (51) condition -> . expression LTE expression
    (52) condition -> . expression EQUALS expression
    (53) condition -> . expression NE expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    condition                      shift and go to state 60
    expression                     shift and go to state 59
    name                           shift and go to state 38

state 31

    (31) variable_declaration -> MAKE . word expression
    (54) word -> . QUOTE STRING

    QUOTE           shift and go to state 53

    word                           shift and go to state 61

state 32

    (32) print_statement -> PRINT . word
    (33) print_statement -> PRINT . expression
    (54) word -> . QUOTE STRING
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    QUOTE           shift and go to state 53
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    word                           shift and go to state 62
    expression                     shift and go to state 63
    name                           shift and go to state 38

state 33

    (1) statement_list -> statement_list statement .

    SETXY           reduce using rule 1 (statement_list -> statement_list statement .)
    FORWARD         reduce using rule 1 (statement_list -> statement_list statement .)
    BACK            reduce using rule 1 (statement_list -> statement_list statement .)
    RIGHT           reduce using rule 1 (statement_list -> statement_list statement .)
    LEFT            reduce using rule 1 (statement_list -> statement_list statement .)
    SETX            reduce using rule 1 (statement_list -> statement_list statement .)
    SETY            reduce using rule 1 (statement_list -> statement_list statement .)
    SETH            reduce using rule 1 (statement_list -> statement_list statement .)
    SPEED           reduce using rule 1 (statement_list -> statement_list statement .)
    SETPS           reduce using rule 1 (statement_list -> statement_list statement .)
    SETPC           reduce using rule 1 (statement_list -> statement_list statement .)
    SETBC           reduce using rule 1 (statement_list -> statement_list statement .)
    PENUP           reduce using rule 1 (statement_list -> statement_list statement .)
    PENDOWN         reduce using rule 1 (statement_list -> statement_list statement .)
    SHOW            reduce using rule 1 (statement_list -> statement_list statement .)
    HIDE            reduce using rule 1 (statement_list -> statement_list statement .)
    HOME            reduce using rule 1 (statement_list -> statement_list statement .)
    CLEAN           reduce using rule 1 (statement_list -> statement_list statement .)
    RESET           reduce using rule 1 (statement_list -> statement_list statement .)
    REPEAT          reduce using rule 1 (statement_list -> statement_list statement .)
    IF              reduce using rule 1 (statement_list -> statement_list statement .)
    IFELSE          reduce using rule 1 (statement_list -> statement_list statement .)
    MAKE            reduce using rule 1 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 1 (statement_list -> statement_list statement .)
    $end            reduce using rule 1 (statement_list -> statement_list statement .)
    RBR             reduce using rule 1 (statement_list -> statement_list statement .)


state 34

    (9) turtle_instruction -> SETXY LBR . expression COMMA expression RBR
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 64
    name                           shift and go to state 38

state 35

    (10) turtle_instruction -> FORWARD expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    FORWARD         reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    BACK            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    RIGHT           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    LEFT            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    SETX            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    SETY            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    SETH            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    SPEED           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    SETPS           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    SETPC           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    SETBC           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    PENUP           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    PENDOWN         reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    SHOW            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    HIDE            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    HOME            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    CLEAN           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    RESET           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    REPEAT          reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    IF              reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    IFELSE          reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    MAKE            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    PRINT           reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    $end            reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    RBR             reduce using rule 10 (turtle_instruction -> FORWARD expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 36

    (34) expression -> INT .

    TIMES           reduce using rule 34 (expression -> INT .)
    DIVIDE          reduce using rule 34 (expression -> INT .)
    PLUS            reduce using rule 34 (expression -> INT .)
    MINUS           reduce using rule 34 (expression -> INT .)
    POWER           reduce using rule 34 (expression -> INT .)
    SETXY           reduce using rule 34 (expression -> INT .)
    FORWARD         reduce using rule 34 (expression -> INT .)
    BACK            reduce using rule 34 (expression -> INT .)
    RIGHT           reduce using rule 34 (expression -> INT .)
    LEFT            reduce using rule 34 (expression -> INT .)
    SETX            reduce using rule 34 (expression -> INT .)
    SETY            reduce using rule 34 (expression -> INT .)
    SETH            reduce using rule 34 (expression -> INT .)
    SPEED           reduce using rule 34 (expression -> INT .)
    SETPS           reduce using rule 34 (expression -> INT .)
    SETPC           reduce using rule 34 (expression -> INT .)
    SETBC           reduce using rule 34 (expression -> INT .)
    PENUP           reduce using rule 34 (expression -> INT .)
    PENDOWN         reduce using rule 34 (expression -> INT .)
    SHOW            reduce using rule 34 (expression -> INT .)
    HIDE            reduce using rule 34 (expression -> INT .)
    HOME            reduce using rule 34 (expression -> INT .)
    CLEAN           reduce using rule 34 (expression -> INT .)
    RESET           reduce using rule 34 (expression -> INT .)
    REPEAT          reduce using rule 34 (expression -> INT .)
    IF              reduce using rule 34 (expression -> INT .)
    IFELSE          reduce using rule 34 (expression -> INT .)
    MAKE            reduce using rule 34 (expression -> INT .)
    PRINT           reduce using rule 34 (expression -> INT .)
    $end            reduce using rule 34 (expression -> INT .)
    RBR             reduce using rule 34 (expression -> INT .)
    LBR             reduce using rule 34 (expression -> INT .)
    GT              reduce using rule 34 (expression -> INT .)
    LT              reduce using rule 34 (expression -> INT .)
    GTE             reduce using rule 34 (expression -> INT .)
    LTE             reduce using rule 34 (expression -> INT .)
    EQUALS          reduce using rule 34 (expression -> INT .)
    NE              reduce using rule 34 (expression -> INT .)
    COMMA           reduce using rule 34 (expression -> INT .)
    RPAR            reduce using rule 34 (expression -> INT .)


state 37

    (35) expression -> FLOAT .

    TIMES           reduce using rule 35 (expression -> FLOAT .)
    DIVIDE          reduce using rule 35 (expression -> FLOAT .)
    PLUS            reduce using rule 35 (expression -> FLOAT .)
    MINUS           reduce using rule 35 (expression -> FLOAT .)
    POWER           reduce using rule 35 (expression -> FLOAT .)
    SETXY           reduce using rule 35 (expression -> FLOAT .)
    FORWARD         reduce using rule 35 (expression -> FLOAT .)
    BACK            reduce using rule 35 (expression -> FLOAT .)
    RIGHT           reduce using rule 35 (expression -> FLOAT .)
    LEFT            reduce using rule 35 (expression -> FLOAT .)
    SETX            reduce using rule 35 (expression -> FLOAT .)
    SETY            reduce using rule 35 (expression -> FLOAT .)
    SETH            reduce using rule 35 (expression -> FLOAT .)
    SPEED           reduce using rule 35 (expression -> FLOAT .)
    SETPS           reduce using rule 35 (expression -> FLOAT .)
    SETPC           reduce using rule 35 (expression -> FLOAT .)
    SETBC           reduce using rule 35 (expression -> FLOAT .)
    PENUP           reduce using rule 35 (expression -> FLOAT .)
    PENDOWN         reduce using rule 35 (expression -> FLOAT .)
    SHOW            reduce using rule 35 (expression -> FLOAT .)
    HIDE            reduce using rule 35 (expression -> FLOAT .)
    HOME            reduce using rule 35 (expression -> FLOAT .)
    CLEAN           reduce using rule 35 (expression -> FLOAT .)
    RESET           reduce using rule 35 (expression -> FLOAT .)
    REPEAT          reduce using rule 35 (expression -> FLOAT .)
    IF              reduce using rule 35 (expression -> FLOAT .)
    IFELSE          reduce using rule 35 (expression -> FLOAT .)
    MAKE            reduce using rule 35 (expression -> FLOAT .)
    PRINT           reduce using rule 35 (expression -> FLOAT .)
    $end            reduce using rule 35 (expression -> FLOAT .)
    RBR             reduce using rule 35 (expression -> FLOAT .)
    LBR             reduce using rule 35 (expression -> FLOAT .)
    GT              reduce using rule 35 (expression -> FLOAT .)
    LT              reduce using rule 35 (expression -> FLOAT .)
    GTE             reduce using rule 35 (expression -> FLOAT .)
    LTE             reduce using rule 35 (expression -> FLOAT .)
    EQUALS          reduce using rule 35 (expression -> FLOAT .)
    NE              reduce using rule 35 (expression -> FLOAT .)
    COMMA           reduce using rule 35 (expression -> FLOAT .)
    RPAR            reduce using rule 35 (expression -> FLOAT .)


state 38

    (36) expression -> name .

    TIMES           reduce using rule 36 (expression -> name .)
    DIVIDE          reduce using rule 36 (expression -> name .)
    PLUS            reduce using rule 36 (expression -> name .)
    MINUS           reduce using rule 36 (expression -> name .)
    POWER           reduce using rule 36 (expression -> name .)
    SETXY           reduce using rule 36 (expression -> name .)
    FORWARD         reduce using rule 36 (expression -> name .)
    BACK            reduce using rule 36 (expression -> name .)
    RIGHT           reduce using rule 36 (expression -> name .)
    LEFT            reduce using rule 36 (expression -> name .)
    SETX            reduce using rule 36 (expression -> name .)
    SETY            reduce using rule 36 (expression -> name .)
    SETH            reduce using rule 36 (expression -> name .)
    SPEED           reduce using rule 36 (expression -> name .)
    SETPS           reduce using rule 36 (expression -> name .)
    SETPC           reduce using rule 36 (expression -> name .)
    SETBC           reduce using rule 36 (expression -> name .)
    PENUP           reduce using rule 36 (expression -> name .)
    PENDOWN         reduce using rule 36 (expression -> name .)
    SHOW            reduce using rule 36 (expression -> name .)
    HIDE            reduce using rule 36 (expression -> name .)
    HOME            reduce using rule 36 (expression -> name .)
    CLEAN           reduce using rule 36 (expression -> name .)
    RESET           reduce using rule 36 (expression -> name .)
    REPEAT          reduce using rule 36 (expression -> name .)
    IF              reduce using rule 36 (expression -> name .)
    IFELSE          reduce using rule 36 (expression -> name .)
    MAKE            reduce using rule 36 (expression -> name .)
    PRINT           reduce using rule 36 (expression -> name .)
    $end            reduce using rule 36 (expression -> name .)
    RBR             reduce using rule 36 (expression -> name .)
    LBR             reduce using rule 36 (expression -> name .)
    GT              reduce using rule 36 (expression -> name .)
    LT              reduce using rule 36 (expression -> name .)
    GTE             reduce using rule 36 (expression -> name .)
    LTE             reduce using rule 36 (expression -> name .)
    EQUALS          reduce using rule 36 (expression -> name .)
    NE              reduce using rule 36 (expression -> name .)
    COMMA           reduce using rule 36 (expression -> name .)
    RPAR            reduce using rule 36 (expression -> name .)


state 39

    (37) expression -> REPCOUNT .

    TIMES           reduce using rule 37 (expression -> REPCOUNT .)
    DIVIDE          reduce using rule 37 (expression -> REPCOUNT .)
    PLUS            reduce using rule 37 (expression -> REPCOUNT .)
    MINUS           reduce using rule 37 (expression -> REPCOUNT .)
    POWER           reduce using rule 37 (expression -> REPCOUNT .)
    SETXY           reduce using rule 37 (expression -> REPCOUNT .)
    FORWARD         reduce using rule 37 (expression -> REPCOUNT .)
    BACK            reduce using rule 37 (expression -> REPCOUNT .)
    RIGHT           reduce using rule 37 (expression -> REPCOUNT .)
    LEFT            reduce using rule 37 (expression -> REPCOUNT .)
    SETX            reduce using rule 37 (expression -> REPCOUNT .)
    SETY            reduce using rule 37 (expression -> REPCOUNT .)
    SETH            reduce using rule 37 (expression -> REPCOUNT .)
    SPEED           reduce using rule 37 (expression -> REPCOUNT .)
    SETPS           reduce using rule 37 (expression -> REPCOUNT .)
    SETPC           reduce using rule 37 (expression -> REPCOUNT .)
    SETBC           reduce using rule 37 (expression -> REPCOUNT .)
    PENUP           reduce using rule 37 (expression -> REPCOUNT .)
    PENDOWN         reduce using rule 37 (expression -> REPCOUNT .)
    SHOW            reduce using rule 37 (expression -> REPCOUNT .)
    HIDE            reduce using rule 37 (expression -> REPCOUNT .)
    HOME            reduce using rule 37 (expression -> REPCOUNT .)
    CLEAN           reduce using rule 37 (expression -> REPCOUNT .)
    RESET           reduce using rule 37 (expression -> REPCOUNT .)
    REPEAT          reduce using rule 37 (expression -> REPCOUNT .)
    IF              reduce using rule 37 (expression -> REPCOUNT .)
    IFELSE          reduce using rule 37 (expression -> REPCOUNT .)
    MAKE            reduce using rule 37 (expression -> REPCOUNT .)
    PRINT           reduce using rule 37 (expression -> REPCOUNT .)
    $end            reduce using rule 37 (expression -> REPCOUNT .)
    RBR             reduce using rule 37 (expression -> REPCOUNT .)
    LBR             reduce using rule 37 (expression -> REPCOUNT .)
    GT              reduce using rule 37 (expression -> REPCOUNT .)
    LT              reduce using rule 37 (expression -> REPCOUNT .)
    GTE             reduce using rule 37 (expression -> REPCOUNT .)
    LTE             reduce using rule 37 (expression -> REPCOUNT .)
    EQUALS          reduce using rule 37 (expression -> REPCOUNT .)
    NE              reduce using rule 37 (expression -> REPCOUNT .)
    COMMA           reduce using rule 37 (expression -> REPCOUNT .)
    RPAR            reduce using rule 37 (expression -> REPCOUNT .)


state 40

    (38) expression -> LPAR . expression RPAR
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 70
    name                           shift and go to state 38

state 41

    (39) expression -> MINUS . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 71
    name                           shift and go to state 38

state 42

    (40) expression -> RANDOM . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 72
    name                           shift and go to state 38

state 43

    (55) name -> COLON . STRING

    STRING          shift and go to state 73


state 44

    (11) turtle_instruction -> BACK expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 11 (turtle_instruction -> BACK expression .)
    FORWARD         reduce using rule 11 (turtle_instruction -> BACK expression .)
    BACK            reduce using rule 11 (turtle_instruction -> BACK expression .)
    RIGHT           reduce using rule 11 (turtle_instruction -> BACK expression .)
    LEFT            reduce using rule 11 (turtle_instruction -> BACK expression .)
    SETX            reduce using rule 11 (turtle_instruction -> BACK expression .)
    SETY            reduce using rule 11 (turtle_instruction -> BACK expression .)
    SETH            reduce using rule 11 (turtle_instruction -> BACK expression .)
    SPEED           reduce using rule 11 (turtle_instruction -> BACK expression .)
    SETPS           reduce using rule 11 (turtle_instruction -> BACK expression .)
    SETPC           reduce using rule 11 (turtle_instruction -> BACK expression .)
    SETBC           reduce using rule 11 (turtle_instruction -> BACK expression .)
    PENUP           reduce using rule 11 (turtle_instruction -> BACK expression .)
    PENDOWN         reduce using rule 11 (turtle_instruction -> BACK expression .)
    SHOW            reduce using rule 11 (turtle_instruction -> BACK expression .)
    HIDE            reduce using rule 11 (turtle_instruction -> BACK expression .)
    HOME            reduce using rule 11 (turtle_instruction -> BACK expression .)
    CLEAN           reduce using rule 11 (turtle_instruction -> BACK expression .)
    RESET           reduce using rule 11 (turtle_instruction -> BACK expression .)
    REPEAT          reduce using rule 11 (turtle_instruction -> BACK expression .)
    IF              reduce using rule 11 (turtle_instruction -> BACK expression .)
    IFELSE          reduce using rule 11 (turtle_instruction -> BACK expression .)
    MAKE            reduce using rule 11 (turtle_instruction -> BACK expression .)
    PRINT           reduce using rule 11 (turtle_instruction -> BACK expression .)
    $end            reduce using rule 11 (turtle_instruction -> BACK expression .)
    RBR             reduce using rule 11 (turtle_instruction -> BACK expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 45

    (12) turtle_instruction -> RIGHT expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    FORWARD         reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    BACK            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    RIGHT           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    LEFT            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    SETX            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    SETY            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    SETH            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    SPEED           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    SETPS           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    SETPC           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    SETBC           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    PENUP           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    PENDOWN         reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    SHOW            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    HIDE            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    HOME            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    CLEAN           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    RESET           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    REPEAT          reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    IF              reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    IFELSE          reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    MAKE            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    PRINT           reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    $end            reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    RBR             reduce using rule 12 (turtle_instruction -> RIGHT expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 46

    (13) turtle_instruction -> LEFT expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    FORWARD         reduce using rule 13 (turtle_instruction -> LEFT expression .)
    BACK            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    RIGHT           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    LEFT            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    SETX            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    SETY            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    SETH            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    SPEED           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    SETPS           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    SETPC           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    SETBC           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    PENUP           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    PENDOWN         reduce using rule 13 (turtle_instruction -> LEFT expression .)
    SHOW            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    HIDE            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    HOME            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    CLEAN           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    RESET           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    REPEAT          reduce using rule 13 (turtle_instruction -> LEFT expression .)
    IF              reduce using rule 13 (turtle_instruction -> LEFT expression .)
    IFELSE          reduce using rule 13 (turtle_instruction -> LEFT expression .)
    MAKE            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    PRINT           reduce using rule 13 (turtle_instruction -> LEFT expression .)
    $end            reduce using rule 13 (turtle_instruction -> LEFT expression .)
    RBR             reduce using rule 13 (turtle_instruction -> LEFT expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 47

    (14) turtle_instruction -> SETX expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 14 (turtle_instruction -> SETX expression .)
    FORWARD         reduce using rule 14 (turtle_instruction -> SETX expression .)
    BACK            reduce using rule 14 (turtle_instruction -> SETX expression .)
    RIGHT           reduce using rule 14 (turtle_instruction -> SETX expression .)
    LEFT            reduce using rule 14 (turtle_instruction -> SETX expression .)
    SETX            reduce using rule 14 (turtle_instruction -> SETX expression .)
    SETY            reduce using rule 14 (turtle_instruction -> SETX expression .)
    SETH            reduce using rule 14 (turtle_instruction -> SETX expression .)
    SPEED           reduce using rule 14 (turtle_instruction -> SETX expression .)
    SETPS           reduce using rule 14 (turtle_instruction -> SETX expression .)
    SETPC           reduce using rule 14 (turtle_instruction -> SETX expression .)
    SETBC           reduce using rule 14 (turtle_instruction -> SETX expression .)
    PENUP           reduce using rule 14 (turtle_instruction -> SETX expression .)
    PENDOWN         reduce using rule 14 (turtle_instruction -> SETX expression .)
    SHOW            reduce using rule 14 (turtle_instruction -> SETX expression .)
    HIDE            reduce using rule 14 (turtle_instruction -> SETX expression .)
    HOME            reduce using rule 14 (turtle_instruction -> SETX expression .)
    CLEAN           reduce using rule 14 (turtle_instruction -> SETX expression .)
    RESET           reduce using rule 14 (turtle_instruction -> SETX expression .)
    REPEAT          reduce using rule 14 (turtle_instruction -> SETX expression .)
    IF              reduce using rule 14 (turtle_instruction -> SETX expression .)
    IFELSE          reduce using rule 14 (turtle_instruction -> SETX expression .)
    MAKE            reduce using rule 14 (turtle_instruction -> SETX expression .)
    PRINT           reduce using rule 14 (turtle_instruction -> SETX expression .)
    $end            reduce using rule 14 (turtle_instruction -> SETX expression .)
    RBR             reduce using rule 14 (turtle_instruction -> SETX expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 48

    (15) turtle_instruction -> SETY expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 15 (turtle_instruction -> SETY expression .)
    FORWARD         reduce using rule 15 (turtle_instruction -> SETY expression .)
    BACK            reduce using rule 15 (turtle_instruction -> SETY expression .)
    RIGHT           reduce using rule 15 (turtle_instruction -> SETY expression .)
    LEFT            reduce using rule 15 (turtle_instruction -> SETY expression .)
    SETX            reduce using rule 15 (turtle_instruction -> SETY expression .)
    SETY            reduce using rule 15 (turtle_instruction -> SETY expression .)
    SETH            reduce using rule 15 (turtle_instruction -> SETY expression .)
    SPEED           reduce using rule 15 (turtle_instruction -> SETY expression .)
    SETPS           reduce using rule 15 (turtle_instruction -> SETY expression .)
    SETPC           reduce using rule 15 (turtle_instruction -> SETY expression .)
    SETBC           reduce using rule 15 (turtle_instruction -> SETY expression .)
    PENUP           reduce using rule 15 (turtle_instruction -> SETY expression .)
    PENDOWN         reduce using rule 15 (turtle_instruction -> SETY expression .)
    SHOW            reduce using rule 15 (turtle_instruction -> SETY expression .)
    HIDE            reduce using rule 15 (turtle_instruction -> SETY expression .)
    HOME            reduce using rule 15 (turtle_instruction -> SETY expression .)
    CLEAN           reduce using rule 15 (turtle_instruction -> SETY expression .)
    RESET           reduce using rule 15 (turtle_instruction -> SETY expression .)
    REPEAT          reduce using rule 15 (turtle_instruction -> SETY expression .)
    IF              reduce using rule 15 (turtle_instruction -> SETY expression .)
    IFELSE          reduce using rule 15 (turtle_instruction -> SETY expression .)
    MAKE            reduce using rule 15 (turtle_instruction -> SETY expression .)
    PRINT           reduce using rule 15 (turtle_instruction -> SETY expression .)
    $end            reduce using rule 15 (turtle_instruction -> SETY expression .)
    RBR             reduce using rule 15 (turtle_instruction -> SETY expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 49

    (16) turtle_instruction -> SETH expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 16 (turtle_instruction -> SETH expression .)
    FORWARD         reduce using rule 16 (turtle_instruction -> SETH expression .)
    BACK            reduce using rule 16 (turtle_instruction -> SETH expression .)
    RIGHT           reduce using rule 16 (turtle_instruction -> SETH expression .)
    LEFT            reduce using rule 16 (turtle_instruction -> SETH expression .)
    SETX            reduce using rule 16 (turtle_instruction -> SETH expression .)
    SETY            reduce using rule 16 (turtle_instruction -> SETH expression .)
    SETH            reduce using rule 16 (turtle_instruction -> SETH expression .)
    SPEED           reduce using rule 16 (turtle_instruction -> SETH expression .)
    SETPS           reduce using rule 16 (turtle_instruction -> SETH expression .)
    SETPC           reduce using rule 16 (turtle_instruction -> SETH expression .)
    SETBC           reduce using rule 16 (turtle_instruction -> SETH expression .)
    PENUP           reduce using rule 16 (turtle_instruction -> SETH expression .)
    PENDOWN         reduce using rule 16 (turtle_instruction -> SETH expression .)
    SHOW            reduce using rule 16 (turtle_instruction -> SETH expression .)
    HIDE            reduce using rule 16 (turtle_instruction -> SETH expression .)
    HOME            reduce using rule 16 (turtle_instruction -> SETH expression .)
    CLEAN           reduce using rule 16 (turtle_instruction -> SETH expression .)
    RESET           reduce using rule 16 (turtle_instruction -> SETH expression .)
    REPEAT          reduce using rule 16 (turtle_instruction -> SETH expression .)
    IF              reduce using rule 16 (turtle_instruction -> SETH expression .)
    IFELSE          reduce using rule 16 (turtle_instruction -> SETH expression .)
    MAKE            reduce using rule 16 (turtle_instruction -> SETH expression .)
    PRINT           reduce using rule 16 (turtle_instruction -> SETH expression .)
    $end            reduce using rule 16 (turtle_instruction -> SETH expression .)
    RBR             reduce using rule 16 (turtle_instruction -> SETH expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 50

    (17) turtle_instruction -> SPEED expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    FORWARD         reduce using rule 17 (turtle_instruction -> SPEED expression .)
    BACK            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    RIGHT           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    LEFT            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    SETX            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    SETY            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    SETH            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    SPEED           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    SETPS           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    SETPC           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    SETBC           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    PENUP           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    PENDOWN         reduce using rule 17 (turtle_instruction -> SPEED expression .)
    SHOW            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    HIDE            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    HOME            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    CLEAN           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    RESET           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    REPEAT          reduce using rule 17 (turtle_instruction -> SPEED expression .)
    IF              reduce using rule 17 (turtle_instruction -> SPEED expression .)
    IFELSE          reduce using rule 17 (turtle_instruction -> SPEED expression .)
    MAKE            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    PRINT           reduce using rule 17 (turtle_instruction -> SPEED expression .)
    $end            reduce using rule 17 (turtle_instruction -> SPEED expression .)
    RBR             reduce using rule 17 (turtle_instruction -> SPEED expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 51

    (18) turtle_instruction -> SETPS expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    FORWARD         reduce using rule 18 (turtle_instruction -> SETPS expression .)
    BACK            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    RIGHT           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    LEFT            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    SETX            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    SETY            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    SETH            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    SPEED           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    SETPS           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    SETPC           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    SETBC           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    PENUP           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    PENDOWN         reduce using rule 18 (turtle_instruction -> SETPS expression .)
    SHOW            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    HIDE            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    HOME            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    CLEAN           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    RESET           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    REPEAT          reduce using rule 18 (turtle_instruction -> SETPS expression .)
    IF              reduce using rule 18 (turtle_instruction -> SETPS expression .)
    IFELSE          reduce using rule 18 (turtle_instruction -> SETPS expression .)
    MAKE            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    PRINT           reduce using rule 18 (turtle_instruction -> SETPS expression .)
    $end            reduce using rule 18 (turtle_instruction -> SETPS expression .)
    RBR             reduce using rule 18 (turtle_instruction -> SETPS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 52

    (19) turtle_instruction -> SETPC word .

    SETXY           reduce using rule 19 (turtle_instruction -> SETPC word .)
    FORWARD         reduce using rule 19 (turtle_instruction -> SETPC word .)
    BACK            reduce using rule 19 (turtle_instruction -> SETPC word .)
    RIGHT           reduce using rule 19 (turtle_instruction -> SETPC word .)
    LEFT            reduce using rule 19 (turtle_instruction -> SETPC word .)
    SETX            reduce using rule 19 (turtle_instruction -> SETPC word .)
    SETY            reduce using rule 19 (turtle_instruction -> SETPC word .)
    SETH            reduce using rule 19 (turtle_instruction -> SETPC word .)
    SPEED           reduce using rule 19 (turtle_instruction -> SETPC word .)
    SETPS           reduce using rule 19 (turtle_instruction -> SETPC word .)
    SETPC           reduce using rule 19 (turtle_instruction -> SETPC word .)
    SETBC           reduce using rule 19 (turtle_instruction -> SETPC word .)
    PENUP           reduce using rule 19 (turtle_instruction -> SETPC word .)
    PENDOWN         reduce using rule 19 (turtle_instruction -> SETPC word .)
    SHOW            reduce using rule 19 (turtle_instruction -> SETPC word .)
    HIDE            reduce using rule 19 (turtle_instruction -> SETPC word .)
    HOME            reduce using rule 19 (turtle_instruction -> SETPC word .)
    CLEAN           reduce using rule 19 (turtle_instruction -> SETPC word .)
    RESET           reduce using rule 19 (turtle_instruction -> SETPC word .)
    REPEAT          reduce using rule 19 (turtle_instruction -> SETPC word .)
    IF              reduce using rule 19 (turtle_instruction -> SETPC word .)
    IFELSE          reduce using rule 19 (turtle_instruction -> SETPC word .)
    MAKE            reduce using rule 19 (turtle_instruction -> SETPC word .)
    PRINT           reduce using rule 19 (turtle_instruction -> SETPC word .)
    $end            reduce using rule 19 (turtle_instruction -> SETPC word .)
    RBR             reduce using rule 19 (turtle_instruction -> SETPC word .)


state 53

    (54) word -> QUOTE . STRING

    STRING          shift and go to state 74


state 54

    (20) turtle_instruction -> SETBC word .

    SETXY           reduce using rule 20 (turtle_instruction -> SETBC word .)
    FORWARD         reduce using rule 20 (turtle_instruction -> SETBC word .)
    BACK            reduce using rule 20 (turtle_instruction -> SETBC word .)
    RIGHT           reduce using rule 20 (turtle_instruction -> SETBC word .)
    LEFT            reduce using rule 20 (turtle_instruction -> SETBC word .)
    SETX            reduce using rule 20 (turtle_instruction -> SETBC word .)
    SETY            reduce using rule 20 (turtle_instruction -> SETBC word .)
    SETH            reduce using rule 20 (turtle_instruction -> SETBC word .)
    SPEED           reduce using rule 20 (turtle_instruction -> SETBC word .)
    SETPS           reduce using rule 20 (turtle_instruction -> SETBC word .)
    SETPC           reduce using rule 20 (turtle_instruction -> SETBC word .)
    SETBC           reduce using rule 20 (turtle_instruction -> SETBC word .)
    PENUP           reduce using rule 20 (turtle_instruction -> SETBC word .)
    PENDOWN         reduce using rule 20 (turtle_instruction -> SETBC word .)
    SHOW            reduce using rule 20 (turtle_instruction -> SETBC word .)
    HIDE            reduce using rule 20 (turtle_instruction -> SETBC word .)
    HOME            reduce using rule 20 (turtle_instruction -> SETBC word .)
    CLEAN           reduce using rule 20 (turtle_instruction -> SETBC word .)
    RESET           reduce using rule 20 (turtle_instruction -> SETBC word .)
    REPEAT          reduce using rule 20 (turtle_instruction -> SETBC word .)
    IF              reduce using rule 20 (turtle_instruction -> SETBC word .)
    IFELSE          reduce using rule 20 (turtle_instruction -> SETBC word .)
    MAKE            reduce using rule 20 (turtle_instruction -> SETBC word .)
    PRINT           reduce using rule 20 (turtle_instruction -> SETBC word .)
    $end            reduce using rule 20 (turtle_instruction -> SETBC word .)
    RBR             reduce using rule 20 (turtle_instruction -> SETBC word .)


state 55

    (28) repeat_statement -> REPEAT expression . LBR statement_list RBR
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    LBR             shift and go to state 75
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 56

    (29) if_statement -> IF condition . LBR statement_list RBR

    LBR             shift and go to state 76


state 57

    (46) condition -> TRUE .

    LBR             reduce using rule 46 (condition -> TRUE .)


state 58

    (47) condition -> FALSE .

    LBR             reduce using rule 47 (condition -> FALSE .)


state 59

    (48) condition -> expression . GT expression
    (49) condition -> expression . LT expression
    (50) condition -> expression . GTE expression
    (51) condition -> expression . LTE expression
    (52) condition -> expression . EQUALS expression
    (53) condition -> expression . NE expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    GT              shift and go to state 77
    LT              shift and go to state 78
    GTE             shift and go to state 79
    LTE             shift and go to state 80
    EQUALS          shift and go to state 81
    NE              shift and go to state 82
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 60

    (30) ifelse_statement -> IFELSE condition . LBR statement_list RBR LBR statement_list RBR

    LBR             shift and go to state 83


state 61

    (31) variable_declaration -> MAKE word . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 84
    name                           shift and go to state 38

state 62

    (32) print_statement -> PRINT word .

    SETXY           reduce using rule 32 (print_statement -> PRINT word .)
    FORWARD         reduce using rule 32 (print_statement -> PRINT word .)
    BACK            reduce using rule 32 (print_statement -> PRINT word .)
    RIGHT           reduce using rule 32 (print_statement -> PRINT word .)
    LEFT            reduce using rule 32 (print_statement -> PRINT word .)
    SETX            reduce using rule 32 (print_statement -> PRINT word .)
    SETY            reduce using rule 32 (print_statement -> PRINT word .)
    SETH            reduce using rule 32 (print_statement -> PRINT word .)
    SPEED           reduce using rule 32 (print_statement -> PRINT word .)
    SETPS           reduce using rule 32 (print_statement -> PRINT word .)
    SETPC           reduce using rule 32 (print_statement -> PRINT word .)
    SETBC           reduce using rule 32 (print_statement -> PRINT word .)
    PENUP           reduce using rule 32 (print_statement -> PRINT word .)
    PENDOWN         reduce using rule 32 (print_statement -> PRINT word .)
    SHOW            reduce using rule 32 (print_statement -> PRINT word .)
    HIDE            reduce using rule 32 (print_statement -> PRINT word .)
    HOME            reduce using rule 32 (print_statement -> PRINT word .)
    CLEAN           reduce using rule 32 (print_statement -> PRINT word .)
    RESET           reduce using rule 32 (print_statement -> PRINT word .)
    REPEAT          reduce using rule 32 (print_statement -> PRINT word .)
    IF              reduce using rule 32 (print_statement -> PRINT word .)
    IFELSE          reduce using rule 32 (print_statement -> PRINT word .)
    MAKE            reduce using rule 32 (print_statement -> PRINT word .)
    PRINT           reduce using rule 32 (print_statement -> PRINT word .)
    $end            reduce using rule 32 (print_statement -> PRINT word .)
    RBR             reduce using rule 32 (print_statement -> PRINT word .)


state 63

    (33) print_statement -> PRINT expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 33 (print_statement -> PRINT expression .)
    FORWARD         reduce using rule 33 (print_statement -> PRINT expression .)
    BACK            reduce using rule 33 (print_statement -> PRINT expression .)
    RIGHT           reduce using rule 33 (print_statement -> PRINT expression .)
    LEFT            reduce using rule 33 (print_statement -> PRINT expression .)
    SETX            reduce using rule 33 (print_statement -> PRINT expression .)
    SETY            reduce using rule 33 (print_statement -> PRINT expression .)
    SETH            reduce using rule 33 (print_statement -> PRINT expression .)
    SPEED           reduce using rule 33 (print_statement -> PRINT expression .)
    SETPS           reduce using rule 33 (print_statement -> PRINT expression .)
    SETPC           reduce using rule 33 (print_statement -> PRINT expression .)
    SETBC           reduce using rule 33 (print_statement -> PRINT expression .)
    PENUP           reduce using rule 33 (print_statement -> PRINT expression .)
    PENDOWN         reduce using rule 33 (print_statement -> PRINT expression .)
    SHOW            reduce using rule 33 (print_statement -> PRINT expression .)
    HIDE            reduce using rule 33 (print_statement -> PRINT expression .)
    HOME            reduce using rule 33 (print_statement -> PRINT expression .)
    CLEAN           reduce using rule 33 (print_statement -> PRINT expression .)
    RESET           reduce using rule 33 (print_statement -> PRINT expression .)
    REPEAT          reduce using rule 33 (print_statement -> PRINT expression .)
    IF              reduce using rule 33 (print_statement -> PRINT expression .)
    IFELSE          reduce using rule 33 (print_statement -> PRINT expression .)
    MAKE            reduce using rule 33 (print_statement -> PRINT expression .)
    PRINT           reduce using rule 33 (print_statement -> PRINT expression .)
    $end            reduce using rule 33 (print_statement -> PRINT expression .)
    RBR             reduce using rule 33 (print_statement -> PRINT expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 64

    (9) turtle_instruction -> SETXY LBR expression . COMMA expression RBR
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    COMMA           shift and go to state 85
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 65

    (41) expression -> expression TIMES . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 86
    name                           shift and go to state 38

state 66

    (42) expression -> expression DIVIDE . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 87
    name                           shift and go to state 38

state 67

    (43) expression -> expression PLUS . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 88
    name                           shift and go to state 38

state 68

    (44) expression -> expression MINUS . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 89
    name                           shift and go to state 38

state 69

    (45) expression -> expression POWER . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 90
    name                           shift and go to state 38

state 70

    (38) expression -> LPAR expression . RPAR
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    RPAR            shift and go to state 91
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 71

    (39) expression -> MINUS expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    TIMES           reduce using rule 39 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 39 (expression -> MINUS expression .)
    PLUS            reduce using rule 39 (expression -> MINUS expression .)
    MINUS           reduce using rule 39 (expression -> MINUS expression .)
    POWER           reduce using rule 39 (expression -> MINUS expression .)
    SETXY           reduce using rule 39 (expression -> MINUS expression .)
    FORWARD         reduce using rule 39 (expression -> MINUS expression .)
    BACK            reduce using rule 39 (expression -> MINUS expression .)
    RIGHT           reduce using rule 39 (expression -> MINUS expression .)
    LEFT            reduce using rule 39 (expression -> MINUS expression .)
    SETX            reduce using rule 39 (expression -> MINUS expression .)
    SETY            reduce using rule 39 (expression -> MINUS expression .)
    SETH            reduce using rule 39 (expression -> MINUS expression .)
    SPEED           reduce using rule 39 (expression -> MINUS expression .)
    SETPS           reduce using rule 39 (expression -> MINUS expression .)
    SETPC           reduce using rule 39 (expression -> MINUS expression .)
    SETBC           reduce using rule 39 (expression -> MINUS expression .)
    PENUP           reduce using rule 39 (expression -> MINUS expression .)
    PENDOWN         reduce using rule 39 (expression -> MINUS expression .)
    SHOW            reduce using rule 39 (expression -> MINUS expression .)
    HIDE            reduce using rule 39 (expression -> MINUS expression .)
    HOME            reduce using rule 39 (expression -> MINUS expression .)
    CLEAN           reduce using rule 39 (expression -> MINUS expression .)
    RESET           reduce using rule 39 (expression -> MINUS expression .)
    REPEAT          reduce using rule 39 (expression -> MINUS expression .)
    IF              reduce using rule 39 (expression -> MINUS expression .)
    IFELSE          reduce using rule 39 (expression -> MINUS expression .)
    MAKE            reduce using rule 39 (expression -> MINUS expression .)
    PRINT           reduce using rule 39 (expression -> MINUS expression .)
    $end            reduce using rule 39 (expression -> MINUS expression .)
    RBR             reduce using rule 39 (expression -> MINUS expression .)
    LBR             reduce using rule 39 (expression -> MINUS expression .)
    GT              reduce using rule 39 (expression -> MINUS expression .)
    LT              reduce using rule 39 (expression -> MINUS expression .)
    GTE             reduce using rule 39 (expression -> MINUS expression .)
    LTE             reduce using rule 39 (expression -> MINUS expression .)
    EQUALS          reduce using rule 39 (expression -> MINUS expression .)
    NE              reduce using rule 39 (expression -> MINUS expression .)
    COMMA           reduce using rule 39 (expression -> MINUS expression .)
    RPAR            reduce using rule 39 (expression -> MINUS expression .)

  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! POWER           [ shift and go to state 69 ]


state 72

    (40) expression -> RANDOM expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 40 (expression -> RANDOM expression .)
    FORWARD         reduce using rule 40 (expression -> RANDOM expression .)
    BACK            reduce using rule 40 (expression -> RANDOM expression .)
    RIGHT           reduce using rule 40 (expression -> RANDOM expression .)
    LEFT            reduce using rule 40 (expression -> RANDOM expression .)
    SETX            reduce using rule 40 (expression -> RANDOM expression .)
    SETY            reduce using rule 40 (expression -> RANDOM expression .)
    SETH            reduce using rule 40 (expression -> RANDOM expression .)
    SPEED           reduce using rule 40 (expression -> RANDOM expression .)
    SETPS           reduce using rule 40 (expression -> RANDOM expression .)
    SETPC           reduce using rule 40 (expression -> RANDOM expression .)
    SETBC           reduce using rule 40 (expression -> RANDOM expression .)
    PENUP           reduce using rule 40 (expression -> RANDOM expression .)
    PENDOWN         reduce using rule 40 (expression -> RANDOM expression .)
    SHOW            reduce using rule 40 (expression -> RANDOM expression .)
    HIDE            reduce using rule 40 (expression -> RANDOM expression .)
    HOME            reduce using rule 40 (expression -> RANDOM expression .)
    CLEAN           reduce using rule 40 (expression -> RANDOM expression .)
    RESET           reduce using rule 40 (expression -> RANDOM expression .)
    REPEAT          reduce using rule 40 (expression -> RANDOM expression .)
    IF              reduce using rule 40 (expression -> RANDOM expression .)
    IFELSE          reduce using rule 40 (expression -> RANDOM expression .)
    MAKE            reduce using rule 40 (expression -> RANDOM expression .)
    PRINT           reduce using rule 40 (expression -> RANDOM expression .)
    $end            reduce using rule 40 (expression -> RANDOM expression .)
    RBR             reduce using rule 40 (expression -> RANDOM expression .)
    LBR             reduce using rule 40 (expression -> RANDOM expression .)
    GT              reduce using rule 40 (expression -> RANDOM expression .)
    LT              reduce using rule 40 (expression -> RANDOM expression .)
    GTE             reduce using rule 40 (expression -> RANDOM expression .)
    LTE             reduce using rule 40 (expression -> RANDOM expression .)
    EQUALS          reduce using rule 40 (expression -> RANDOM expression .)
    NE              reduce using rule 40 (expression -> RANDOM expression .)
    COMMA           reduce using rule 40 (expression -> RANDOM expression .)
    RPAR            reduce using rule 40 (expression -> RANDOM expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69

  ! TIMES           [ reduce using rule 40 (expression -> RANDOM expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> RANDOM expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> RANDOM expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> RANDOM expression .) ]
  ! POWER           [ reduce using rule 40 (expression -> RANDOM expression .) ]


state 73

    (55) name -> COLON STRING .

    TIMES           reduce using rule 55 (name -> COLON STRING .)
    DIVIDE          reduce using rule 55 (name -> COLON STRING .)
    PLUS            reduce using rule 55 (name -> COLON STRING .)
    MINUS           reduce using rule 55 (name -> COLON STRING .)
    POWER           reduce using rule 55 (name -> COLON STRING .)
    SETXY           reduce using rule 55 (name -> COLON STRING .)
    FORWARD         reduce using rule 55 (name -> COLON STRING .)
    BACK            reduce using rule 55 (name -> COLON STRING .)
    RIGHT           reduce using rule 55 (name -> COLON STRING .)
    LEFT            reduce using rule 55 (name -> COLON STRING .)
    SETX            reduce using rule 55 (name -> COLON STRING .)
    SETY            reduce using rule 55 (name -> COLON STRING .)
    SETH            reduce using rule 55 (name -> COLON STRING .)
    SPEED           reduce using rule 55 (name -> COLON STRING .)
    SETPS           reduce using rule 55 (name -> COLON STRING .)
    SETPC           reduce using rule 55 (name -> COLON STRING .)
    SETBC           reduce using rule 55 (name -> COLON STRING .)
    PENUP           reduce using rule 55 (name -> COLON STRING .)
    PENDOWN         reduce using rule 55 (name -> COLON STRING .)
    SHOW            reduce using rule 55 (name -> COLON STRING .)
    HIDE            reduce using rule 55 (name -> COLON STRING .)
    HOME            reduce using rule 55 (name -> COLON STRING .)
    CLEAN           reduce using rule 55 (name -> COLON STRING .)
    RESET           reduce using rule 55 (name -> COLON STRING .)
    REPEAT          reduce using rule 55 (name -> COLON STRING .)
    IF              reduce using rule 55 (name -> COLON STRING .)
    IFELSE          reduce using rule 55 (name -> COLON STRING .)
    MAKE            reduce using rule 55 (name -> COLON STRING .)
    PRINT           reduce using rule 55 (name -> COLON STRING .)
    $end            reduce using rule 55 (name -> COLON STRING .)
    RBR             reduce using rule 55 (name -> COLON STRING .)
    LBR             reduce using rule 55 (name -> COLON STRING .)
    GT              reduce using rule 55 (name -> COLON STRING .)
    LT              reduce using rule 55 (name -> COLON STRING .)
    GTE             reduce using rule 55 (name -> COLON STRING .)
    LTE             reduce using rule 55 (name -> COLON STRING .)
    EQUALS          reduce using rule 55 (name -> COLON STRING .)
    NE              reduce using rule 55 (name -> COLON STRING .)
    COMMA           reduce using rule 55 (name -> COLON STRING .)
    RPAR            reduce using rule 55 (name -> COLON STRING .)


state 74

    (54) word -> QUOTE STRING .

    SETXY           reduce using rule 54 (word -> QUOTE STRING .)
    FORWARD         reduce using rule 54 (word -> QUOTE STRING .)
    BACK            reduce using rule 54 (word -> QUOTE STRING .)
    RIGHT           reduce using rule 54 (word -> QUOTE STRING .)
    LEFT            reduce using rule 54 (word -> QUOTE STRING .)
    SETX            reduce using rule 54 (word -> QUOTE STRING .)
    SETY            reduce using rule 54 (word -> QUOTE STRING .)
    SETH            reduce using rule 54 (word -> QUOTE STRING .)
    SPEED           reduce using rule 54 (word -> QUOTE STRING .)
    SETPS           reduce using rule 54 (word -> QUOTE STRING .)
    SETPC           reduce using rule 54 (word -> QUOTE STRING .)
    SETBC           reduce using rule 54 (word -> QUOTE STRING .)
    PENUP           reduce using rule 54 (word -> QUOTE STRING .)
    PENDOWN         reduce using rule 54 (word -> QUOTE STRING .)
    SHOW            reduce using rule 54 (word -> QUOTE STRING .)
    HIDE            reduce using rule 54 (word -> QUOTE STRING .)
    HOME            reduce using rule 54 (word -> QUOTE STRING .)
    CLEAN           reduce using rule 54 (word -> QUOTE STRING .)
    RESET           reduce using rule 54 (word -> QUOTE STRING .)
    REPEAT          reduce using rule 54 (word -> QUOTE STRING .)
    IF              reduce using rule 54 (word -> QUOTE STRING .)
    IFELSE          reduce using rule 54 (word -> QUOTE STRING .)
    MAKE            reduce using rule 54 (word -> QUOTE STRING .)
    PRINT           reduce using rule 54 (word -> QUOTE STRING .)
    $end            reduce using rule 54 (word -> QUOTE STRING .)
    RBR             reduce using rule 54 (word -> QUOTE STRING .)
    INT             reduce using rule 54 (word -> QUOTE STRING .)
    FLOAT           reduce using rule 54 (word -> QUOTE STRING .)
    REPCOUNT        reduce using rule 54 (word -> QUOTE STRING .)
    LPAR            reduce using rule 54 (word -> QUOTE STRING .)
    MINUS           reduce using rule 54 (word -> QUOTE STRING .)
    RANDOM          reduce using rule 54 (word -> QUOTE STRING .)
    COLON           reduce using rule 54 (word -> QUOTE STRING .)


state 75

    (28) repeat_statement -> REPEAT expression LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement_list                 shift and go to state 92
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 76

    (29) if_statement -> IF condition LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement_list                 shift and go to state 93
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 77

    (48) condition -> expression GT . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 94
    name                           shift and go to state 38

state 78

    (49) condition -> expression LT . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 95
    name                           shift and go to state 38

state 79

    (50) condition -> expression GTE . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 96
    name                           shift and go to state 38

state 80

    (51) condition -> expression LTE . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 97
    name                           shift and go to state 38

state 81

    (52) condition -> expression EQUALS . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 98
    name                           shift and go to state 38

state 82

    (53) condition -> expression NE . expression
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 99
    name                           shift and go to state 38

state 83

    (30) ifelse_statement -> IFELSE condition LBR . statement_list RBR LBR statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement_list                 shift and go to state 100
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 84

    (31) variable_declaration -> MAKE word expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    SETXY           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    FORWARD         reduce using rule 31 (variable_declaration -> MAKE word expression .)
    BACK            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    RIGHT           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    LEFT            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    SETX            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    SETY            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    SETH            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    SPEED           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    SETPS           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    SETPC           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    SETBC           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    PENUP           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    PENDOWN         reduce using rule 31 (variable_declaration -> MAKE word expression .)
    SHOW            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    HIDE            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    HOME            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    CLEAN           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    RESET           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    REPEAT          reduce using rule 31 (variable_declaration -> MAKE word expression .)
    IF              reduce using rule 31 (variable_declaration -> MAKE word expression .)
    IFELSE          reduce using rule 31 (variable_declaration -> MAKE word expression .)
    MAKE            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    PRINT           reduce using rule 31 (variable_declaration -> MAKE word expression .)
    $end            reduce using rule 31 (variable_declaration -> MAKE word expression .)
    RBR             reduce using rule 31 (variable_declaration -> MAKE word expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 85

    (9) turtle_instruction -> SETXY LBR expression COMMA . expression RBR
    (34) expression -> . INT
    (35) expression -> . FLOAT
    (36) expression -> . name
    (37) expression -> . REPCOUNT
    (38) expression -> . LPAR expression RPAR
    (39) expression -> . MINUS expression
    (40) expression -> . RANDOM expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression POWER expression
    (55) name -> . COLON STRING

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    REPCOUNT        shift and go to state 39
    LPAR            shift and go to state 40
    MINUS           shift and go to state 41
    RANDOM          shift and go to state 42
    COLON           shift and go to state 43

    expression                     shift and go to state 101
    name                           shift and go to state 38

state 86

    (41) expression -> expression TIMES expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    TIMES           reduce using rule 41 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 41 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 41 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 41 (expression -> expression TIMES expression .)
    SETXY           reduce using rule 41 (expression -> expression TIMES expression .)
    FORWARD         reduce using rule 41 (expression -> expression TIMES expression .)
    BACK            reduce using rule 41 (expression -> expression TIMES expression .)
    RIGHT           reduce using rule 41 (expression -> expression TIMES expression .)
    LEFT            reduce using rule 41 (expression -> expression TIMES expression .)
    SETX            reduce using rule 41 (expression -> expression TIMES expression .)
    SETY            reduce using rule 41 (expression -> expression TIMES expression .)
    SETH            reduce using rule 41 (expression -> expression TIMES expression .)
    SPEED           reduce using rule 41 (expression -> expression TIMES expression .)
    SETPS           reduce using rule 41 (expression -> expression TIMES expression .)
    SETPC           reduce using rule 41 (expression -> expression TIMES expression .)
    SETBC           reduce using rule 41 (expression -> expression TIMES expression .)
    PENUP           reduce using rule 41 (expression -> expression TIMES expression .)
    PENDOWN         reduce using rule 41 (expression -> expression TIMES expression .)
    SHOW            reduce using rule 41 (expression -> expression TIMES expression .)
    HIDE            reduce using rule 41 (expression -> expression TIMES expression .)
    HOME            reduce using rule 41 (expression -> expression TIMES expression .)
    CLEAN           reduce using rule 41 (expression -> expression TIMES expression .)
    RESET           reduce using rule 41 (expression -> expression TIMES expression .)
    REPEAT          reduce using rule 41 (expression -> expression TIMES expression .)
    IF              reduce using rule 41 (expression -> expression TIMES expression .)
    IFELSE          reduce using rule 41 (expression -> expression TIMES expression .)
    MAKE            reduce using rule 41 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 41 (expression -> expression TIMES expression .)
    $end            reduce using rule 41 (expression -> expression TIMES expression .)
    RBR             reduce using rule 41 (expression -> expression TIMES expression .)
    LBR             reduce using rule 41 (expression -> expression TIMES expression .)
    GT              reduce using rule 41 (expression -> expression TIMES expression .)
    LT              reduce using rule 41 (expression -> expression TIMES expression .)
    GTE             reduce using rule 41 (expression -> expression TIMES expression .)
    LTE             reduce using rule 41 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 41 (expression -> expression TIMES expression .)
    NE              reduce using rule 41 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 41 (expression -> expression TIMES expression .)
    RPAR            reduce using rule 41 (expression -> expression TIMES expression .)
    POWER           shift and go to state 69

  ! POWER           [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]


state 87

    (42) expression -> expression DIVIDE expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    TIMES           reduce using rule 42 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 42 (expression -> expression DIVIDE expression .)
    SETXY           reduce using rule 42 (expression -> expression DIVIDE expression .)
    FORWARD         reduce using rule 42 (expression -> expression DIVIDE expression .)
    BACK            reduce using rule 42 (expression -> expression DIVIDE expression .)
    RIGHT           reduce using rule 42 (expression -> expression DIVIDE expression .)
    LEFT            reduce using rule 42 (expression -> expression DIVIDE expression .)
    SETX            reduce using rule 42 (expression -> expression DIVIDE expression .)
    SETY            reduce using rule 42 (expression -> expression DIVIDE expression .)
    SETH            reduce using rule 42 (expression -> expression DIVIDE expression .)
    SPEED           reduce using rule 42 (expression -> expression DIVIDE expression .)
    SETPS           reduce using rule 42 (expression -> expression DIVIDE expression .)
    SETPC           reduce using rule 42 (expression -> expression DIVIDE expression .)
    SETBC           reduce using rule 42 (expression -> expression DIVIDE expression .)
    PENUP           reduce using rule 42 (expression -> expression DIVIDE expression .)
    PENDOWN         reduce using rule 42 (expression -> expression DIVIDE expression .)
    SHOW            reduce using rule 42 (expression -> expression DIVIDE expression .)
    HIDE            reduce using rule 42 (expression -> expression DIVIDE expression .)
    HOME            reduce using rule 42 (expression -> expression DIVIDE expression .)
    CLEAN           reduce using rule 42 (expression -> expression DIVIDE expression .)
    RESET           reduce using rule 42 (expression -> expression DIVIDE expression .)
    REPEAT          reduce using rule 42 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 42 (expression -> expression DIVIDE expression .)
    IFELSE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    MAKE            reduce using rule 42 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 42 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 42 (expression -> expression DIVIDE expression .)
    RBR             reduce using rule 42 (expression -> expression DIVIDE expression .)
    LBR             reduce using rule 42 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 42 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 42 (expression -> expression DIVIDE expression .)
    GTE             reduce using rule 42 (expression -> expression DIVIDE expression .)
    LTE             reduce using rule 42 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 42 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 42 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 42 (expression -> expression DIVIDE expression .)
    RPAR            reduce using rule 42 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 69

  ! POWER           [ reduce using rule 42 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]


state 88

    (43) expression -> expression PLUS expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    PLUS            reduce using rule 43 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 43 (expression -> expression PLUS expression .)
    SETXY           reduce using rule 43 (expression -> expression PLUS expression .)
    FORWARD         reduce using rule 43 (expression -> expression PLUS expression .)
    BACK            reduce using rule 43 (expression -> expression PLUS expression .)
    RIGHT           reduce using rule 43 (expression -> expression PLUS expression .)
    LEFT            reduce using rule 43 (expression -> expression PLUS expression .)
    SETX            reduce using rule 43 (expression -> expression PLUS expression .)
    SETY            reduce using rule 43 (expression -> expression PLUS expression .)
    SETH            reduce using rule 43 (expression -> expression PLUS expression .)
    SPEED           reduce using rule 43 (expression -> expression PLUS expression .)
    SETPS           reduce using rule 43 (expression -> expression PLUS expression .)
    SETPC           reduce using rule 43 (expression -> expression PLUS expression .)
    SETBC           reduce using rule 43 (expression -> expression PLUS expression .)
    PENUP           reduce using rule 43 (expression -> expression PLUS expression .)
    PENDOWN         reduce using rule 43 (expression -> expression PLUS expression .)
    SHOW            reduce using rule 43 (expression -> expression PLUS expression .)
    HIDE            reduce using rule 43 (expression -> expression PLUS expression .)
    HOME            reduce using rule 43 (expression -> expression PLUS expression .)
    CLEAN           reduce using rule 43 (expression -> expression PLUS expression .)
    RESET           reduce using rule 43 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 43 (expression -> expression PLUS expression .)
    IF              reduce using rule 43 (expression -> expression PLUS expression .)
    IFELSE          reduce using rule 43 (expression -> expression PLUS expression .)
    MAKE            reduce using rule 43 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 43 (expression -> expression PLUS expression .)
    $end            reduce using rule 43 (expression -> expression PLUS expression .)
    RBR             reduce using rule 43 (expression -> expression PLUS expression .)
    LBR             reduce using rule 43 (expression -> expression PLUS expression .)
    GT              reduce using rule 43 (expression -> expression PLUS expression .)
    LT              reduce using rule 43 (expression -> expression PLUS expression .)
    GTE             reduce using rule 43 (expression -> expression PLUS expression .)
    LTE             reduce using rule 43 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 43 (expression -> expression PLUS expression .)
    NE              reduce using rule 43 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 43 (expression -> expression PLUS expression .)
    RPAR            reduce using rule 43 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    POWER           shift and go to state 69

  ! TIMES           [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]


state 89

    (44) expression -> expression MINUS expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    PLUS            reduce using rule 44 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 44 (expression -> expression MINUS expression .)
    SETXY           reduce using rule 44 (expression -> expression MINUS expression .)
    FORWARD         reduce using rule 44 (expression -> expression MINUS expression .)
    BACK            reduce using rule 44 (expression -> expression MINUS expression .)
    RIGHT           reduce using rule 44 (expression -> expression MINUS expression .)
    LEFT            reduce using rule 44 (expression -> expression MINUS expression .)
    SETX            reduce using rule 44 (expression -> expression MINUS expression .)
    SETY            reduce using rule 44 (expression -> expression MINUS expression .)
    SETH            reduce using rule 44 (expression -> expression MINUS expression .)
    SPEED           reduce using rule 44 (expression -> expression MINUS expression .)
    SETPS           reduce using rule 44 (expression -> expression MINUS expression .)
    SETPC           reduce using rule 44 (expression -> expression MINUS expression .)
    SETBC           reduce using rule 44 (expression -> expression MINUS expression .)
    PENUP           reduce using rule 44 (expression -> expression MINUS expression .)
    PENDOWN         reduce using rule 44 (expression -> expression MINUS expression .)
    SHOW            reduce using rule 44 (expression -> expression MINUS expression .)
    HIDE            reduce using rule 44 (expression -> expression MINUS expression .)
    HOME            reduce using rule 44 (expression -> expression MINUS expression .)
    CLEAN           reduce using rule 44 (expression -> expression MINUS expression .)
    RESET           reduce using rule 44 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 44 (expression -> expression MINUS expression .)
    IF              reduce using rule 44 (expression -> expression MINUS expression .)
    IFELSE          reduce using rule 44 (expression -> expression MINUS expression .)
    MAKE            reduce using rule 44 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 44 (expression -> expression MINUS expression .)
    $end            reduce using rule 44 (expression -> expression MINUS expression .)
    RBR             reduce using rule 44 (expression -> expression MINUS expression .)
    LBR             reduce using rule 44 (expression -> expression MINUS expression .)
    GT              reduce using rule 44 (expression -> expression MINUS expression .)
    LT              reduce using rule 44 (expression -> expression MINUS expression .)
    GTE             reduce using rule 44 (expression -> expression MINUS expression .)
    LTE             reduce using rule 44 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 44 (expression -> expression MINUS expression .)
    NE              reduce using rule 44 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 44 (expression -> expression MINUS expression .)
    RPAR            reduce using rule 44 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    POWER           shift and go to state 69

  ! TIMES           [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]


state 90

    (45) expression -> expression POWER expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    TIMES           reduce using rule 45 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 45 (expression -> expression POWER expression .)
    PLUS            reduce using rule 45 (expression -> expression POWER expression .)
    MINUS           reduce using rule 45 (expression -> expression POWER expression .)
    POWER           reduce using rule 45 (expression -> expression POWER expression .)
    SETXY           reduce using rule 45 (expression -> expression POWER expression .)
    FORWARD         reduce using rule 45 (expression -> expression POWER expression .)
    BACK            reduce using rule 45 (expression -> expression POWER expression .)
    RIGHT           reduce using rule 45 (expression -> expression POWER expression .)
    LEFT            reduce using rule 45 (expression -> expression POWER expression .)
    SETX            reduce using rule 45 (expression -> expression POWER expression .)
    SETY            reduce using rule 45 (expression -> expression POWER expression .)
    SETH            reduce using rule 45 (expression -> expression POWER expression .)
    SPEED           reduce using rule 45 (expression -> expression POWER expression .)
    SETPS           reduce using rule 45 (expression -> expression POWER expression .)
    SETPC           reduce using rule 45 (expression -> expression POWER expression .)
    SETBC           reduce using rule 45 (expression -> expression POWER expression .)
    PENUP           reduce using rule 45 (expression -> expression POWER expression .)
    PENDOWN         reduce using rule 45 (expression -> expression POWER expression .)
    SHOW            reduce using rule 45 (expression -> expression POWER expression .)
    HIDE            reduce using rule 45 (expression -> expression POWER expression .)
    HOME            reduce using rule 45 (expression -> expression POWER expression .)
    CLEAN           reduce using rule 45 (expression -> expression POWER expression .)
    RESET           reduce using rule 45 (expression -> expression POWER expression .)
    REPEAT          reduce using rule 45 (expression -> expression POWER expression .)
    IF              reduce using rule 45 (expression -> expression POWER expression .)
    IFELSE          reduce using rule 45 (expression -> expression POWER expression .)
    MAKE            reduce using rule 45 (expression -> expression POWER expression .)
    PRINT           reduce using rule 45 (expression -> expression POWER expression .)
    $end            reduce using rule 45 (expression -> expression POWER expression .)
    RBR             reduce using rule 45 (expression -> expression POWER expression .)
    LBR             reduce using rule 45 (expression -> expression POWER expression .)
    GT              reduce using rule 45 (expression -> expression POWER expression .)
    LT              reduce using rule 45 (expression -> expression POWER expression .)
    GTE             reduce using rule 45 (expression -> expression POWER expression .)
    LTE             reduce using rule 45 (expression -> expression POWER expression .)
    EQUALS          reduce using rule 45 (expression -> expression POWER expression .)
    NE              reduce using rule 45 (expression -> expression POWER expression .)
    COMMA           reduce using rule 45 (expression -> expression POWER expression .)
    RPAR            reduce using rule 45 (expression -> expression POWER expression .)

  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! POWER           [ shift and go to state 69 ]


state 91

    (38) expression -> LPAR expression RPAR .

    TIMES           reduce using rule 38 (expression -> LPAR expression RPAR .)
    DIVIDE          reduce using rule 38 (expression -> LPAR expression RPAR .)
    PLUS            reduce using rule 38 (expression -> LPAR expression RPAR .)
    MINUS           reduce using rule 38 (expression -> LPAR expression RPAR .)
    POWER           reduce using rule 38 (expression -> LPAR expression RPAR .)
    SETXY           reduce using rule 38 (expression -> LPAR expression RPAR .)
    FORWARD         reduce using rule 38 (expression -> LPAR expression RPAR .)
    BACK            reduce using rule 38 (expression -> LPAR expression RPAR .)
    RIGHT           reduce using rule 38 (expression -> LPAR expression RPAR .)
    LEFT            reduce using rule 38 (expression -> LPAR expression RPAR .)
    SETX            reduce using rule 38 (expression -> LPAR expression RPAR .)
    SETY            reduce using rule 38 (expression -> LPAR expression RPAR .)
    SETH            reduce using rule 38 (expression -> LPAR expression RPAR .)
    SPEED           reduce using rule 38 (expression -> LPAR expression RPAR .)
    SETPS           reduce using rule 38 (expression -> LPAR expression RPAR .)
    SETPC           reduce using rule 38 (expression -> LPAR expression RPAR .)
    SETBC           reduce using rule 38 (expression -> LPAR expression RPAR .)
    PENUP           reduce using rule 38 (expression -> LPAR expression RPAR .)
    PENDOWN         reduce using rule 38 (expression -> LPAR expression RPAR .)
    SHOW            reduce using rule 38 (expression -> LPAR expression RPAR .)
    HIDE            reduce using rule 38 (expression -> LPAR expression RPAR .)
    HOME            reduce using rule 38 (expression -> LPAR expression RPAR .)
    CLEAN           reduce using rule 38 (expression -> LPAR expression RPAR .)
    RESET           reduce using rule 38 (expression -> LPAR expression RPAR .)
    REPEAT          reduce using rule 38 (expression -> LPAR expression RPAR .)
    IF              reduce using rule 38 (expression -> LPAR expression RPAR .)
    IFELSE          reduce using rule 38 (expression -> LPAR expression RPAR .)
    MAKE            reduce using rule 38 (expression -> LPAR expression RPAR .)
    PRINT           reduce using rule 38 (expression -> LPAR expression RPAR .)
    $end            reduce using rule 38 (expression -> LPAR expression RPAR .)
    RBR             reduce using rule 38 (expression -> LPAR expression RPAR .)
    LBR             reduce using rule 38 (expression -> LPAR expression RPAR .)
    GT              reduce using rule 38 (expression -> LPAR expression RPAR .)
    LT              reduce using rule 38 (expression -> LPAR expression RPAR .)
    GTE             reduce using rule 38 (expression -> LPAR expression RPAR .)
    LTE             reduce using rule 38 (expression -> LPAR expression RPAR .)
    EQUALS          reduce using rule 38 (expression -> LPAR expression RPAR .)
    NE              reduce using rule 38 (expression -> LPAR expression RPAR .)
    COMMA           reduce using rule 38 (expression -> LPAR expression RPAR .)
    RPAR            reduce using rule 38 (expression -> LPAR expression RPAR .)


state 92

    (28) repeat_statement -> REPEAT expression LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    RBR             shift and go to state 102
    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement                      shift and go to state 33
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 93

    (29) if_statement -> IF condition LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    RBR             shift and go to state 103
    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement                      shift and go to state 33
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 94

    (48) condition -> expression GT expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    LBR             reduce using rule 48 (condition -> expression GT expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 95

    (49) condition -> expression LT expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    LBR             reduce using rule 49 (condition -> expression LT expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 96

    (50) condition -> expression GTE expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    LBR             reduce using rule 50 (condition -> expression GTE expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 97

    (51) condition -> expression LTE expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    LBR             reduce using rule 51 (condition -> expression LTE expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 98

    (52) condition -> expression EQUALS expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    LBR             reduce using rule 52 (condition -> expression EQUALS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 99

    (53) condition -> expression NE expression .
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    LBR             reduce using rule 53 (condition -> expression NE expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 100

    (30) ifelse_statement -> IFELSE condition LBR statement_list . RBR LBR statement_list RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    RBR             shift and go to state 104
    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement                      shift and go to state 33
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 101

    (9) turtle_instruction -> SETXY LBR expression COMMA expression . RBR
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . POWER expression

    RBR             shift and go to state 105
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    POWER           shift and go to state 69


state 102

    (28) repeat_statement -> REPEAT expression LBR statement_list RBR .

    SETXY           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    FORWARD         reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    BACK            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RIGHT           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    LEFT            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETX            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETY            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETH            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SPEED           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETPS           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETPC           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETBC           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PENUP           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PENDOWN         reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SHOW            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    HIDE            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    HOME            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    CLEAN           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RESET           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    REPEAT          reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    IF              reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    IFELSE          reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    MAKE            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PRINT           reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    $end            reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RBR             reduce using rule 28 (repeat_statement -> REPEAT expression LBR statement_list RBR .)


state 103

    (29) if_statement -> IF condition LBR statement_list RBR .

    SETXY           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    FORWARD         reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    BACK            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    RIGHT           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    LEFT            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    SETX            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    SETY            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    SETH            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    SPEED           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    SETPS           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    SETPC           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    SETBC           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    PENUP           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    PENDOWN         reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    SHOW            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    HIDE            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    HOME            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    CLEAN           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    RESET           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    REPEAT          reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    IF              reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    IFELSE          reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    MAKE            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    PRINT           reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    $end            reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)
    RBR             reduce using rule 29 (if_statement -> IF condition LBR statement_list RBR .)


state 104

    (30) ifelse_statement -> IFELSE condition LBR statement_list RBR . LBR statement_list RBR

    LBR             shift and go to state 106


state 105

    (9) turtle_instruction -> SETXY LBR expression COMMA expression RBR .

    SETXY           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    FORWARD         reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    BACK            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    RIGHT           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    LEFT            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETX            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETY            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETH            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SPEED           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETPS           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETPC           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETBC           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    PENUP           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    PENDOWN         reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SHOW            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    HIDE            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    HOME            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    CLEAN           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    RESET           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    REPEAT          reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    IF              reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    IFELSE          reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    MAKE            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    PRINT           reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    $end            reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    RBR             reduce using rule 9 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)


state 106

    (30) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement_list                 shift and go to state 107
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 107

    (30) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . print_statement
    (9) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (10) turtle_instruction -> . FORWARD expression
    (11) turtle_instruction -> . BACK expression
    (12) turtle_instruction -> . RIGHT expression
    (13) turtle_instruction -> . LEFT expression
    (14) turtle_instruction -> . SETX expression
    (15) turtle_instruction -> . SETY expression
    (16) turtle_instruction -> . SETH expression
    (17) turtle_instruction -> . SPEED expression
    (18) turtle_instruction -> . SETPS expression
    (19) turtle_instruction -> . SETPC word
    (20) turtle_instruction -> . SETBC word
    (21) turtle_instruction -> . PENUP
    (22) turtle_instruction -> . PENDOWN
    (23) turtle_instruction -> . SHOW
    (24) turtle_instruction -> . HIDE
    (25) turtle_instruction -> . HOME
    (26) turtle_instruction -> . CLEAN
    (27) turtle_instruction -> . RESET
    (28) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (29) if_statement -> . IF condition LBR statement_list RBR
    (30) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (31) variable_declaration -> . MAKE word expression
    (32) print_statement -> . PRINT word
    (33) print_statement -> . PRINT expression

    RBR             shift and go to state 108
    SETXY           shift and go to state 9
    FORWARD         shift and go to state 10
    BACK            shift and go to state 11
    RIGHT           shift and go to state 12
    LEFT            shift and go to state 13
    SETX            shift and go to state 14
    SETY            shift and go to state 15
    SETH            shift and go to state 16
    SPEED           shift and go to state 17
    SETPS           shift and go to state 18
    SETPC           shift and go to state 19
    SETBC           shift and go to state 20
    PENUP           shift and go to state 21
    PENDOWN         shift and go to state 22
    SHOW            shift and go to state 23
    HIDE            shift and go to state 24
    HOME            shift and go to state 25
    CLEAN           shift and go to state 26
    RESET           shift and go to state 27
    REPEAT          shift and go to state 28
    IF              shift and go to state 29
    IFELSE          shift and go to state 30
    MAKE            shift and go to state 31
    PRINT           shift and go to state 32

    statement                      shift and go to state 33
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    print_statement                shift and go to state 8

state 108

    (30) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .

    SETXY           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    FORWARD         reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    BACK            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RIGHT           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    LEFT            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETX            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETY            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETH            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SPEED           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETPS           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETPC           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETBC           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PENUP           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PENDOWN         reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SHOW            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    HIDE            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    HOME            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    CLEAN           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RESET           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    REPEAT          reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    IF              reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    IFELSE          reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    MAKE            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PRINT           reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    $end            reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RBR             reduce using rule 30 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)

