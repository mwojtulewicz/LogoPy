Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement_list statement
Rule 2     statement_list -> statement
Rule 3     statement -> turtle_instruction
Rule 4     statement -> repeat_statement
Rule 5     statement -> if_statement
Rule 6     statement -> ifelse_statement
Rule 7     statement -> variable_declaration
Rule 8     statement -> procedure_definition
Rule 9     statement -> procedure_call
Rule 10    statement -> print_statement
Rule 11    turtle_instruction -> SETXY LBR expression COMMA expression RBR
Rule 12    turtle_instruction -> FORWARD expression
Rule 13    turtle_instruction -> BACK expression
Rule 14    turtle_instruction -> RIGHT expression
Rule 15    turtle_instruction -> LEFT expression
Rule 16    turtle_instruction -> SETX expression
Rule 17    turtle_instruction -> SETY expression
Rule 18    turtle_instruction -> SETH expression
Rule 19    turtle_instruction -> SPEED expression
Rule 20    turtle_instruction -> SETPS expression
Rule 21    turtle_instruction -> SETPC word
Rule 22    turtle_instruction -> SETBC word
Rule 23    turtle_instruction -> PENUP
Rule 24    turtle_instruction -> PENDOWN
Rule 25    turtle_instruction -> SHOW
Rule 26    turtle_instruction -> HIDE
Rule 27    turtle_instruction -> HOME
Rule 28    turtle_instruction -> CLEAN
Rule 29    turtle_instruction -> RESET
Rule 30    repeat_statement -> REPEAT expression LBR statement_list RBR
Rule 31    if_statement -> IF condition LBR statement_list RBR
Rule 32    ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR
Rule 33    variable_declaration -> MAKE word expression
Rule 34    procedure_definition -> TO STRING parameter_list statement_list END
Rule 35    parameter_list -> parameter_list parameter
Rule 36    parameter_list -> parameter
Rule 37    parameter -> name
Rule 38    parameter -> empty
Rule 39    procedure_call -> STRING LBR expression_list RBR
Rule 40    expression_list -> expression_list COMMA expression_elem
Rule 41    expression_list -> expression_elem
Rule 42    expression_elem -> expression
Rule 43    expression_elem -> empty
Rule 44    print_statement -> PRINT word
Rule 45    print_statement -> PRINT expression
Rule 46    expression -> INT
Rule 47    expression -> FLOAT
Rule 48    expression -> name
Rule 49    expression -> REPCOUNT
Rule 50    expression -> LPAR expression RPAR
Rule 51    expression -> MINUS expression
Rule 52    expression -> RANDOM expression
Rule 53    expression -> expression TIMES expression
Rule 54    expression -> expression DIVIDE expression
Rule 55    expression -> expression PLUS expression
Rule 56    expression -> expression MINUS expression
Rule 57    expression -> expression POWER expression
Rule 58    condition -> TRUE
Rule 59    condition -> FALSE
Rule 60    condition -> expression GT expression
Rule 61    condition -> expression LT expression
Rule 62    condition -> expression GTE expression
Rule 63    condition -> expression LTE expression
Rule 64    condition -> expression EQUALS expression
Rule 65    condition -> expression NE expression
Rule 66    word -> QUOTE STRING
Rule 67    name -> COLON STRING
Rule 68    empty -> <empty>

Terminals, with rules where they appear

BACK                 : 13
CLEAN                : 28
COLON                : 67
COMMA                : 11 40
DIVIDE               : 54
END                  : 34
EQUALS               : 64
FALSE                : 59
FLOAT                : 47
FORWARD              : 12
GT                   : 60
GTE                  : 62
HIDE                 : 26
HOME                 : 27
IF                   : 31
IFELSE               : 32
INT                  : 46
LBR                  : 11 30 31 32 32 39
LEFT                 : 15
LPAR                 : 50
LT                   : 61
LTE                  : 63
MAKE                 : 33
MINUS                : 51 56
NE                   : 65
PENDOWN              : 24
PENUP                : 23
PLUS                 : 55
POWER                : 57
PRINT                : 44 45
QUOTE                : 66
RANDOM               : 52
RBR                  : 11 30 31 32 32 39
REPCOUNT             : 49
REPEAT               : 30
RESET                : 29
RIGHT                : 14
RPAR                 : 50
SETBC                : 22
SETH                 : 18
SETPC                : 21
SETPS                : 20
SETX                 : 16
SETXY                : 11
SETY                 : 17
SHOW                 : 25
SPEED                : 19
STRING               : 34 39 66 67
TIMES                : 53
TO                   : 34
TRUE                 : 58
error                : 

Nonterminals, with rules where they appear

condition            : 31 32
empty                : 38 43
expression           : 11 11 12 13 14 15 16 17 18 19 20 30 33 42 45 50 51 52 53 53 54 54 55 55 56 56 57 57 60 60 61 61 62 62 63 63 64 64 65 65
expression_elem      : 40 41
expression_list      : 39 40
if_statement         : 5
ifelse_statement     : 6
name                 : 37 48
parameter            : 35 36
parameter_list       : 34 35
print_statement      : 10
procedure_call       : 9
procedure_definition : 8
repeat_statement     : 4
statement            : 1 2
statement_list       : 1 30 31 32 32 34 0
turtle_instruction   : 3
variable_declaration : 7
word                 : 21 22 33 44

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 1

    (0) S' -> statement_list .
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement                      shift and go to state 37
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 2

    (2) statement_list -> statement .

    SETXY           reduce using rule 2 (statement_list -> statement .)
    FORWARD         reduce using rule 2 (statement_list -> statement .)
    BACK            reduce using rule 2 (statement_list -> statement .)
    RIGHT           reduce using rule 2 (statement_list -> statement .)
    LEFT            reduce using rule 2 (statement_list -> statement .)
    SETX            reduce using rule 2 (statement_list -> statement .)
    SETY            reduce using rule 2 (statement_list -> statement .)
    SETH            reduce using rule 2 (statement_list -> statement .)
    SPEED           reduce using rule 2 (statement_list -> statement .)
    SETPS           reduce using rule 2 (statement_list -> statement .)
    SETPC           reduce using rule 2 (statement_list -> statement .)
    SETBC           reduce using rule 2 (statement_list -> statement .)
    PENUP           reduce using rule 2 (statement_list -> statement .)
    PENDOWN         reduce using rule 2 (statement_list -> statement .)
    SHOW            reduce using rule 2 (statement_list -> statement .)
    HIDE            reduce using rule 2 (statement_list -> statement .)
    HOME            reduce using rule 2 (statement_list -> statement .)
    CLEAN           reduce using rule 2 (statement_list -> statement .)
    RESET           reduce using rule 2 (statement_list -> statement .)
    REPEAT          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    IFELSE          reduce using rule 2 (statement_list -> statement .)
    MAKE            reduce using rule 2 (statement_list -> statement .)
    TO              reduce using rule 2 (statement_list -> statement .)
    STRING          reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBR             reduce using rule 2 (statement_list -> statement .)
    END             reduce using rule 2 (statement_list -> statement .)


state 3

    (3) statement -> turtle_instruction .

    SETXY           reduce using rule 3 (statement -> turtle_instruction .)
    FORWARD         reduce using rule 3 (statement -> turtle_instruction .)
    BACK            reduce using rule 3 (statement -> turtle_instruction .)
    RIGHT           reduce using rule 3 (statement -> turtle_instruction .)
    LEFT            reduce using rule 3 (statement -> turtle_instruction .)
    SETX            reduce using rule 3 (statement -> turtle_instruction .)
    SETY            reduce using rule 3 (statement -> turtle_instruction .)
    SETH            reduce using rule 3 (statement -> turtle_instruction .)
    SPEED           reduce using rule 3 (statement -> turtle_instruction .)
    SETPS           reduce using rule 3 (statement -> turtle_instruction .)
    SETPC           reduce using rule 3 (statement -> turtle_instruction .)
    SETBC           reduce using rule 3 (statement -> turtle_instruction .)
    PENUP           reduce using rule 3 (statement -> turtle_instruction .)
    PENDOWN         reduce using rule 3 (statement -> turtle_instruction .)
    SHOW            reduce using rule 3 (statement -> turtle_instruction .)
    HIDE            reduce using rule 3 (statement -> turtle_instruction .)
    HOME            reduce using rule 3 (statement -> turtle_instruction .)
    CLEAN           reduce using rule 3 (statement -> turtle_instruction .)
    RESET           reduce using rule 3 (statement -> turtle_instruction .)
    REPEAT          reduce using rule 3 (statement -> turtle_instruction .)
    IF              reduce using rule 3 (statement -> turtle_instruction .)
    IFELSE          reduce using rule 3 (statement -> turtle_instruction .)
    MAKE            reduce using rule 3 (statement -> turtle_instruction .)
    TO              reduce using rule 3 (statement -> turtle_instruction .)
    STRING          reduce using rule 3 (statement -> turtle_instruction .)
    PRINT           reduce using rule 3 (statement -> turtle_instruction .)
    $end            reduce using rule 3 (statement -> turtle_instruction .)
    RBR             reduce using rule 3 (statement -> turtle_instruction .)
    END             reduce using rule 3 (statement -> turtle_instruction .)


state 4

    (4) statement -> repeat_statement .

    SETXY           reduce using rule 4 (statement -> repeat_statement .)
    FORWARD         reduce using rule 4 (statement -> repeat_statement .)
    BACK            reduce using rule 4 (statement -> repeat_statement .)
    RIGHT           reduce using rule 4 (statement -> repeat_statement .)
    LEFT            reduce using rule 4 (statement -> repeat_statement .)
    SETX            reduce using rule 4 (statement -> repeat_statement .)
    SETY            reduce using rule 4 (statement -> repeat_statement .)
    SETH            reduce using rule 4 (statement -> repeat_statement .)
    SPEED           reduce using rule 4 (statement -> repeat_statement .)
    SETPS           reduce using rule 4 (statement -> repeat_statement .)
    SETPC           reduce using rule 4 (statement -> repeat_statement .)
    SETBC           reduce using rule 4 (statement -> repeat_statement .)
    PENUP           reduce using rule 4 (statement -> repeat_statement .)
    PENDOWN         reduce using rule 4 (statement -> repeat_statement .)
    SHOW            reduce using rule 4 (statement -> repeat_statement .)
    HIDE            reduce using rule 4 (statement -> repeat_statement .)
    HOME            reduce using rule 4 (statement -> repeat_statement .)
    CLEAN           reduce using rule 4 (statement -> repeat_statement .)
    RESET           reduce using rule 4 (statement -> repeat_statement .)
    REPEAT          reduce using rule 4 (statement -> repeat_statement .)
    IF              reduce using rule 4 (statement -> repeat_statement .)
    IFELSE          reduce using rule 4 (statement -> repeat_statement .)
    MAKE            reduce using rule 4 (statement -> repeat_statement .)
    TO              reduce using rule 4 (statement -> repeat_statement .)
    STRING          reduce using rule 4 (statement -> repeat_statement .)
    PRINT           reduce using rule 4 (statement -> repeat_statement .)
    $end            reduce using rule 4 (statement -> repeat_statement .)
    RBR             reduce using rule 4 (statement -> repeat_statement .)
    END             reduce using rule 4 (statement -> repeat_statement .)


state 5

    (5) statement -> if_statement .

    SETXY           reduce using rule 5 (statement -> if_statement .)
    FORWARD         reduce using rule 5 (statement -> if_statement .)
    BACK            reduce using rule 5 (statement -> if_statement .)
    RIGHT           reduce using rule 5 (statement -> if_statement .)
    LEFT            reduce using rule 5 (statement -> if_statement .)
    SETX            reduce using rule 5 (statement -> if_statement .)
    SETY            reduce using rule 5 (statement -> if_statement .)
    SETH            reduce using rule 5 (statement -> if_statement .)
    SPEED           reduce using rule 5 (statement -> if_statement .)
    SETPS           reduce using rule 5 (statement -> if_statement .)
    SETPC           reduce using rule 5 (statement -> if_statement .)
    SETBC           reduce using rule 5 (statement -> if_statement .)
    PENUP           reduce using rule 5 (statement -> if_statement .)
    PENDOWN         reduce using rule 5 (statement -> if_statement .)
    SHOW            reduce using rule 5 (statement -> if_statement .)
    HIDE            reduce using rule 5 (statement -> if_statement .)
    HOME            reduce using rule 5 (statement -> if_statement .)
    CLEAN           reduce using rule 5 (statement -> if_statement .)
    RESET           reduce using rule 5 (statement -> if_statement .)
    REPEAT          reduce using rule 5 (statement -> if_statement .)
    IF              reduce using rule 5 (statement -> if_statement .)
    IFELSE          reduce using rule 5 (statement -> if_statement .)
    MAKE            reduce using rule 5 (statement -> if_statement .)
    TO              reduce using rule 5 (statement -> if_statement .)
    STRING          reduce using rule 5 (statement -> if_statement .)
    PRINT           reduce using rule 5 (statement -> if_statement .)
    $end            reduce using rule 5 (statement -> if_statement .)
    RBR             reduce using rule 5 (statement -> if_statement .)
    END             reduce using rule 5 (statement -> if_statement .)


state 6

    (6) statement -> ifelse_statement .

    SETXY           reduce using rule 6 (statement -> ifelse_statement .)
    FORWARD         reduce using rule 6 (statement -> ifelse_statement .)
    BACK            reduce using rule 6 (statement -> ifelse_statement .)
    RIGHT           reduce using rule 6 (statement -> ifelse_statement .)
    LEFT            reduce using rule 6 (statement -> ifelse_statement .)
    SETX            reduce using rule 6 (statement -> ifelse_statement .)
    SETY            reduce using rule 6 (statement -> ifelse_statement .)
    SETH            reduce using rule 6 (statement -> ifelse_statement .)
    SPEED           reduce using rule 6 (statement -> ifelse_statement .)
    SETPS           reduce using rule 6 (statement -> ifelse_statement .)
    SETPC           reduce using rule 6 (statement -> ifelse_statement .)
    SETBC           reduce using rule 6 (statement -> ifelse_statement .)
    PENUP           reduce using rule 6 (statement -> ifelse_statement .)
    PENDOWN         reduce using rule 6 (statement -> ifelse_statement .)
    SHOW            reduce using rule 6 (statement -> ifelse_statement .)
    HIDE            reduce using rule 6 (statement -> ifelse_statement .)
    HOME            reduce using rule 6 (statement -> ifelse_statement .)
    CLEAN           reduce using rule 6 (statement -> ifelse_statement .)
    RESET           reduce using rule 6 (statement -> ifelse_statement .)
    REPEAT          reduce using rule 6 (statement -> ifelse_statement .)
    IF              reduce using rule 6 (statement -> ifelse_statement .)
    IFELSE          reduce using rule 6 (statement -> ifelse_statement .)
    MAKE            reduce using rule 6 (statement -> ifelse_statement .)
    TO              reduce using rule 6 (statement -> ifelse_statement .)
    STRING          reduce using rule 6 (statement -> ifelse_statement .)
    PRINT           reduce using rule 6 (statement -> ifelse_statement .)
    $end            reduce using rule 6 (statement -> ifelse_statement .)
    RBR             reduce using rule 6 (statement -> ifelse_statement .)
    END             reduce using rule 6 (statement -> ifelse_statement .)


state 7

    (7) statement -> variable_declaration .

    SETXY           reduce using rule 7 (statement -> variable_declaration .)
    FORWARD         reduce using rule 7 (statement -> variable_declaration .)
    BACK            reduce using rule 7 (statement -> variable_declaration .)
    RIGHT           reduce using rule 7 (statement -> variable_declaration .)
    LEFT            reduce using rule 7 (statement -> variable_declaration .)
    SETX            reduce using rule 7 (statement -> variable_declaration .)
    SETY            reduce using rule 7 (statement -> variable_declaration .)
    SETH            reduce using rule 7 (statement -> variable_declaration .)
    SPEED           reduce using rule 7 (statement -> variable_declaration .)
    SETPS           reduce using rule 7 (statement -> variable_declaration .)
    SETPC           reduce using rule 7 (statement -> variable_declaration .)
    SETBC           reduce using rule 7 (statement -> variable_declaration .)
    PENUP           reduce using rule 7 (statement -> variable_declaration .)
    PENDOWN         reduce using rule 7 (statement -> variable_declaration .)
    SHOW            reduce using rule 7 (statement -> variable_declaration .)
    HIDE            reduce using rule 7 (statement -> variable_declaration .)
    HOME            reduce using rule 7 (statement -> variable_declaration .)
    CLEAN           reduce using rule 7 (statement -> variable_declaration .)
    RESET           reduce using rule 7 (statement -> variable_declaration .)
    REPEAT          reduce using rule 7 (statement -> variable_declaration .)
    IF              reduce using rule 7 (statement -> variable_declaration .)
    IFELSE          reduce using rule 7 (statement -> variable_declaration .)
    MAKE            reduce using rule 7 (statement -> variable_declaration .)
    TO              reduce using rule 7 (statement -> variable_declaration .)
    STRING          reduce using rule 7 (statement -> variable_declaration .)
    PRINT           reduce using rule 7 (statement -> variable_declaration .)
    $end            reduce using rule 7 (statement -> variable_declaration .)
    RBR             reduce using rule 7 (statement -> variable_declaration .)
    END             reduce using rule 7 (statement -> variable_declaration .)


state 8

    (8) statement -> procedure_definition .

    SETXY           reduce using rule 8 (statement -> procedure_definition .)
    FORWARD         reduce using rule 8 (statement -> procedure_definition .)
    BACK            reduce using rule 8 (statement -> procedure_definition .)
    RIGHT           reduce using rule 8 (statement -> procedure_definition .)
    LEFT            reduce using rule 8 (statement -> procedure_definition .)
    SETX            reduce using rule 8 (statement -> procedure_definition .)
    SETY            reduce using rule 8 (statement -> procedure_definition .)
    SETH            reduce using rule 8 (statement -> procedure_definition .)
    SPEED           reduce using rule 8 (statement -> procedure_definition .)
    SETPS           reduce using rule 8 (statement -> procedure_definition .)
    SETPC           reduce using rule 8 (statement -> procedure_definition .)
    SETBC           reduce using rule 8 (statement -> procedure_definition .)
    PENUP           reduce using rule 8 (statement -> procedure_definition .)
    PENDOWN         reduce using rule 8 (statement -> procedure_definition .)
    SHOW            reduce using rule 8 (statement -> procedure_definition .)
    HIDE            reduce using rule 8 (statement -> procedure_definition .)
    HOME            reduce using rule 8 (statement -> procedure_definition .)
    CLEAN           reduce using rule 8 (statement -> procedure_definition .)
    RESET           reduce using rule 8 (statement -> procedure_definition .)
    REPEAT          reduce using rule 8 (statement -> procedure_definition .)
    IF              reduce using rule 8 (statement -> procedure_definition .)
    IFELSE          reduce using rule 8 (statement -> procedure_definition .)
    MAKE            reduce using rule 8 (statement -> procedure_definition .)
    TO              reduce using rule 8 (statement -> procedure_definition .)
    STRING          reduce using rule 8 (statement -> procedure_definition .)
    PRINT           reduce using rule 8 (statement -> procedure_definition .)
    $end            reduce using rule 8 (statement -> procedure_definition .)
    RBR             reduce using rule 8 (statement -> procedure_definition .)
    END             reduce using rule 8 (statement -> procedure_definition .)


state 9

    (9) statement -> procedure_call .

    SETXY           reduce using rule 9 (statement -> procedure_call .)
    FORWARD         reduce using rule 9 (statement -> procedure_call .)
    BACK            reduce using rule 9 (statement -> procedure_call .)
    RIGHT           reduce using rule 9 (statement -> procedure_call .)
    LEFT            reduce using rule 9 (statement -> procedure_call .)
    SETX            reduce using rule 9 (statement -> procedure_call .)
    SETY            reduce using rule 9 (statement -> procedure_call .)
    SETH            reduce using rule 9 (statement -> procedure_call .)
    SPEED           reduce using rule 9 (statement -> procedure_call .)
    SETPS           reduce using rule 9 (statement -> procedure_call .)
    SETPC           reduce using rule 9 (statement -> procedure_call .)
    SETBC           reduce using rule 9 (statement -> procedure_call .)
    PENUP           reduce using rule 9 (statement -> procedure_call .)
    PENDOWN         reduce using rule 9 (statement -> procedure_call .)
    SHOW            reduce using rule 9 (statement -> procedure_call .)
    HIDE            reduce using rule 9 (statement -> procedure_call .)
    HOME            reduce using rule 9 (statement -> procedure_call .)
    CLEAN           reduce using rule 9 (statement -> procedure_call .)
    RESET           reduce using rule 9 (statement -> procedure_call .)
    REPEAT          reduce using rule 9 (statement -> procedure_call .)
    IF              reduce using rule 9 (statement -> procedure_call .)
    IFELSE          reduce using rule 9 (statement -> procedure_call .)
    MAKE            reduce using rule 9 (statement -> procedure_call .)
    TO              reduce using rule 9 (statement -> procedure_call .)
    STRING          reduce using rule 9 (statement -> procedure_call .)
    PRINT           reduce using rule 9 (statement -> procedure_call .)
    $end            reduce using rule 9 (statement -> procedure_call .)
    RBR             reduce using rule 9 (statement -> procedure_call .)
    END             reduce using rule 9 (statement -> procedure_call .)


state 10

    (10) statement -> print_statement .

    SETXY           reduce using rule 10 (statement -> print_statement .)
    FORWARD         reduce using rule 10 (statement -> print_statement .)
    BACK            reduce using rule 10 (statement -> print_statement .)
    RIGHT           reduce using rule 10 (statement -> print_statement .)
    LEFT            reduce using rule 10 (statement -> print_statement .)
    SETX            reduce using rule 10 (statement -> print_statement .)
    SETY            reduce using rule 10 (statement -> print_statement .)
    SETH            reduce using rule 10 (statement -> print_statement .)
    SPEED           reduce using rule 10 (statement -> print_statement .)
    SETPS           reduce using rule 10 (statement -> print_statement .)
    SETPC           reduce using rule 10 (statement -> print_statement .)
    SETBC           reduce using rule 10 (statement -> print_statement .)
    PENUP           reduce using rule 10 (statement -> print_statement .)
    PENDOWN         reduce using rule 10 (statement -> print_statement .)
    SHOW            reduce using rule 10 (statement -> print_statement .)
    HIDE            reduce using rule 10 (statement -> print_statement .)
    HOME            reduce using rule 10 (statement -> print_statement .)
    CLEAN           reduce using rule 10 (statement -> print_statement .)
    RESET           reduce using rule 10 (statement -> print_statement .)
    REPEAT          reduce using rule 10 (statement -> print_statement .)
    IF              reduce using rule 10 (statement -> print_statement .)
    IFELSE          reduce using rule 10 (statement -> print_statement .)
    MAKE            reduce using rule 10 (statement -> print_statement .)
    TO              reduce using rule 10 (statement -> print_statement .)
    STRING          reduce using rule 10 (statement -> print_statement .)
    PRINT           reduce using rule 10 (statement -> print_statement .)
    $end            reduce using rule 10 (statement -> print_statement .)
    RBR             reduce using rule 10 (statement -> print_statement .)
    END             reduce using rule 10 (statement -> print_statement .)


state 11

    (11) turtle_instruction -> SETXY . LBR expression COMMA expression RBR

    LBR             shift and go to state 38


state 12

    (12) turtle_instruction -> FORWARD . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 39
    name                           shift and go to state 42

state 13

    (13) turtle_instruction -> BACK . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 48
    name                           shift and go to state 42

state 14

    (14) turtle_instruction -> RIGHT . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 49
    name                           shift and go to state 42

state 15

    (15) turtle_instruction -> LEFT . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 50
    name                           shift and go to state 42

state 16

    (16) turtle_instruction -> SETX . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 51
    name                           shift and go to state 42

state 17

    (17) turtle_instruction -> SETY . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 52
    name                           shift and go to state 42

state 18

    (18) turtle_instruction -> SETH . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 53
    name                           shift and go to state 42

state 19

    (19) turtle_instruction -> SPEED . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 54
    name                           shift and go to state 42

state 20

    (20) turtle_instruction -> SETPS . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 55
    name                           shift and go to state 42

state 21

    (21) turtle_instruction -> SETPC . word
    (66) word -> . QUOTE STRING

    QUOTE           shift and go to state 57

    word                           shift and go to state 56

state 22

    (22) turtle_instruction -> SETBC . word
    (66) word -> . QUOTE STRING

    QUOTE           shift and go to state 57

    word                           shift and go to state 58

state 23

    (23) turtle_instruction -> PENUP .

    SETXY           reduce using rule 23 (turtle_instruction -> PENUP .)
    FORWARD         reduce using rule 23 (turtle_instruction -> PENUP .)
    BACK            reduce using rule 23 (turtle_instruction -> PENUP .)
    RIGHT           reduce using rule 23 (turtle_instruction -> PENUP .)
    LEFT            reduce using rule 23 (turtle_instruction -> PENUP .)
    SETX            reduce using rule 23 (turtle_instruction -> PENUP .)
    SETY            reduce using rule 23 (turtle_instruction -> PENUP .)
    SETH            reduce using rule 23 (turtle_instruction -> PENUP .)
    SPEED           reduce using rule 23 (turtle_instruction -> PENUP .)
    SETPS           reduce using rule 23 (turtle_instruction -> PENUP .)
    SETPC           reduce using rule 23 (turtle_instruction -> PENUP .)
    SETBC           reduce using rule 23 (turtle_instruction -> PENUP .)
    PENUP           reduce using rule 23 (turtle_instruction -> PENUP .)
    PENDOWN         reduce using rule 23 (turtle_instruction -> PENUP .)
    SHOW            reduce using rule 23 (turtle_instruction -> PENUP .)
    HIDE            reduce using rule 23 (turtle_instruction -> PENUP .)
    HOME            reduce using rule 23 (turtle_instruction -> PENUP .)
    CLEAN           reduce using rule 23 (turtle_instruction -> PENUP .)
    RESET           reduce using rule 23 (turtle_instruction -> PENUP .)
    REPEAT          reduce using rule 23 (turtle_instruction -> PENUP .)
    IF              reduce using rule 23 (turtle_instruction -> PENUP .)
    IFELSE          reduce using rule 23 (turtle_instruction -> PENUP .)
    MAKE            reduce using rule 23 (turtle_instruction -> PENUP .)
    TO              reduce using rule 23 (turtle_instruction -> PENUP .)
    STRING          reduce using rule 23 (turtle_instruction -> PENUP .)
    PRINT           reduce using rule 23 (turtle_instruction -> PENUP .)
    $end            reduce using rule 23 (turtle_instruction -> PENUP .)
    RBR             reduce using rule 23 (turtle_instruction -> PENUP .)
    END             reduce using rule 23 (turtle_instruction -> PENUP .)


state 24

    (24) turtle_instruction -> PENDOWN .

    SETXY           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    FORWARD         reduce using rule 24 (turtle_instruction -> PENDOWN .)
    BACK            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    RIGHT           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    LEFT            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    SETX            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    SETY            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    SETH            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    SPEED           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    SETPS           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    SETPC           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    SETBC           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    PENUP           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    PENDOWN         reduce using rule 24 (turtle_instruction -> PENDOWN .)
    SHOW            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    HIDE            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    HOME            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    CLEAN           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    RESET           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    REPEAT          reduce using rule 24 (turtle_instruction -> PENDOWN .)
    IF              reduce using rule 24 (turtle_instruction -> PENDOWN .)
    IFELSE          reduce using rule 24 (turtle_instruction -> PENDOWN .)
    MAKE            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    TO              reduce using rule 24 (turtle_instruction -> PENDOWN .)
    STRING          reduce using rule 24 (turtle_instruction -> PENDOWN .)
    PRINT           reduce using rule 24 (turtle_instruction -> PENDOWN .)
    $end            reduce using rule 24 (turtle_instruction -> PENDOWN .)
    RBR             reduce using rule 24 (turtle_instruction -> PENDOWN .)
    END             reduce using rule 24 (turtle_instruction -> PENDOWN .)


state 25

    (25) turtle_instruction -> SHOW .

    SETXY           reduce using rule 25 (turtle_instruction -> SHOW .)
    FORWARD         reduce using rule 25 (turtle_instruction -> SHOW .)
    BACK            reduce using rule 25 (turtle_instruction -> SHOW .)
    RIGHT           reduce using rule 25 (turtle_instruction -> SHOW .)
    LEFT            reduce using rule 25 (turtle_instruction -> SHOW .)
    SETX            reduce using rule 25 (turtle_instruction -> SHOW .)
    SETY            reduce using rule 25 (turtle_instruction -> SHOW .)
    SETH            reduce using rule 25 (turtle_instruction -> SHOW .)
    SPEED           reduce using rule 25 (turtle_instruction -> SHOW .)
    SETPS           reduce using rule 25 (turtle_instruction -> SHOW .)
    SETPC           reduce using rule 25 (turtle_instruction -> SHOW .)
    SETBC           reduce using rule 25 (turtle_instruction -> SHOW .)
    PENUP           reduce using rule 25 (turtle_instruction -> SHOW .)
    PENDOWN         reduce using rule 25 (turtle_instruction -> SHOW .)
    SHOW            reduce using rule 25 (turtle_instruction -> SHOW .)
    HIDE            reduce using rule 25 (turtle_instruction -> SHOW .)
    HOME            reduce using rule 25 (turtle_instruction -> SHOW .)
    CLEAN           reduce using rule 25 (turtle_instruction -> SHOW .)
    RESET           reduce using rule 25 (turtle_instruction -> SHOW .)
    REPEAT          reduce using rule 25 (turtle_instruction -> SHOW .)
    IF              reduce using rule 25 (turtle_instruction -> SHOW .)
    IFELSE          reduce using rule 25 (turtle_instruction -> SHOW .)
    MAKE            reduce using rule 25 (turtle_instruction -> SHOW .)
    TO              reduce using rule 25 (turtle_instruction -> SHOW .)
    STRING          reduce using rule 25 (turtle_instruction -> SHOW .)
    PRINT           reduce using rule 25 (turtle_instruction -> SHOW .)
    $end            reduce using rule 25 (turtle_instruction -> SHOW .)
    RBR             reduce using rule 25 (turtle_instruction -> SHOW .)
    END             reduce using rule 25 (turtle_instruction -> SHOW .)


state 26

    (26) turtle_instruction -> HIDE .

    SETXY           reduce using rule 26 (turtle_instruction -> HIDE .)
    FORWARD         reduce using rule 26 (turtle_instruction -> HIDE .)
    BACK            reduce using rule 26 (turtle_instruction -> HIDE .)
    RIGHT           reduce using rule 26 (turtle_instruction -> HIDE .)
    LEFT            reduce using rule 26 (turtle_instruction -> HIDE .)
    SETX            reduce using rule 26 (turtle_instruction -> HIDE .)
    SETY            reduce using rule 26 (turtle_instruction -> HIDE .)
    SETH            reduce using rule 26 (turtle_instruction -> HIDE .)
    SPEED           reduce using rule 26 (turtle_instruction -> HIDE .)
    SETPS           reduce using rule 26 (turtle_instruction -> HIDE .)
    SETPC           reduce using rule 26 (turtle_instruction -> HIDE .)
    SETBC           reduce using rule 26 (turtle_instruction -> HIDE .)
    PENUP           reduce using rule 26 (turtle_instruction -> HIDE .)
    PENDOWN         reduce using rule 26 (turtle_instruction -> HIDE .)
    SHOW            reduce using rule 26 (turtle_instruction -> HIDE .)
    HIDE            reduce using rule 26 (turtle_instruction -> HIDE .)
    HOME            reduce using rule 26 (turtle_instruction -> HIDE .)
    CLEAN           reduce using rule 26 (turtle_instruction -> HIDE .)
    RESET           reduce using rule 26 (turtle_instruction -> HIDE .)
    REPEAT          reduce using rule 26 (turtle_instruction -> HIDE .)
    IF              reduce using rule 26 (turtle_instruction -> HIDE .)
    IFELSE          reduce using rule 26 (turtle_instruction -> HIDE .)
    MAKE            reduce using rule 26 (turtle_instruction -> HIDE .)
    TO              reduce using rule 26 (turtle_instruction -> HIDE .)
    STRING          reduce using rule 26 (turtle_instruction -> HIDE .)
    PRINT           reduce using rule 26 (turtle_instruction -> HIDE .)
    $end            reduce using rule 26 (turtle_instruction -> HIDE .)
    RBR             reduce using rule 26 (turtle_instruction -> HIDE .)
    END             reduce using rule 26 (turtle_instruction -> HIDE .)


state 27

    (27) turtle_instruction -> HOME .

    SETXY           reduce using rule 27 (turtle_instruction -> HOME .)
    FORWARD         reduce using rule 27 (turtle_instruction -> HOME .)
    BACK            reduce using rule 27 (turtle_instruction -> HOME .)
    RIGHT           reduce using rule 27 (turtle_instruction -> HOME .)
    LEFT            reduce using rule 27 (turtle_instruction -> HOME .)
    SETX            reduce using rule 27 (turtle_instruction -> HOME .)
    SETY            reduce using rule 27 (turtle_instruction -> HOME .)
    SETH            reduce using rule 27 (turtle_instruction -> HOME .)
    SPEED           reduce using rule 27 (turtle_instruction -> HOME .)
    SETPS           reduce using rule 27 (turtle_instruction -> HOME .)
    SETPC           reduce using rule 27 (turtle_instruction -> HOME .)
    SETBC           reduce using rule 27 (turtle_instruction -> HOME .)
    PENUP           reduce using rule 27 (turtle_instruction -> HOME .)
    PENDOWN         reduce using rule 27 (turtle_instruction -> HOME .)
    SHOW            reduce using rule 27 (turtle_instruction -> HOME .)
    HIDE            reduce using rule 27 (turtle_instruction -> HOME .)
    HOME            reduce using rule 27 (turtle_instruction -> HOME .)
    CLEAN           reduce using rule 27 (turtle_instruction -> HOME .)
    RESET           reduce using rule 27 (turtle_instruction -> HOME .)
    REPEAT          reduce using rule 27 (turtle_instruction -> HOME .)
    IF              reduce using rule 27 (turtle_instruction -> HOME .)
    IFELSE          reduce using rule 27 (turtle_instruction -> HOME .)
    MAKE            reduce using rule 27 (turtle_instruction -> HOME .)
    TO              reduce using rule 27 (turtle_instruction -> HOME .)
    STRING          reduce using rule 27 (turtle_instruction -> HOME .)
    PRINT           reduce using rule 27 (turtle_instruction -> HOME .)
    $end            reduce using rule 27 (turtle_instruction -> HOME .)
    RBR             reduce using rule 27 (turtle_instruction -> HOME .)
    END             reduce using rule 27 (turtle_instruction -> HOME .)


state 28

    (28) turtle_instruction -> CLEAN .

    SETXY           reduce using rule 28 (turtle_instruction -> CLEAN .)
    FORWARD         reduce using rule 28 (turtle_instruction -> CLEAN .)
    BACK            reduce using rule 28 (turtle_instruction -> CLEAN .)
    RIGHT           reduce using rule 28 (turtle_instruction -> CLEAN .)
    LEFT            reduce using rule 28 (turtle_instruction -> CLEAN .)
    SETX            reduce using rule 28 (turtle_instruction -> CLEAN .)
    SETY            reduce using rule 28 (turtle_instruction -> CLEAN .)
    SETH            reduce using rule 28 (turtle_instruction -> CLEAN .)
    SPEED           reduce using rule 28 (turtle_instruction -> CLEAN .)
    SETPS           reduce using rule 28 (turtle_instruction -> CLEAN .)
    SETPC           reduce using rule 28 (turtle_instruction -> CLEAN .)
    SETBC           reduce using rule 28 (turtle_instruction -> CLEAN .)
    PENUP           reduce using rule 28 (turtle_instruction -> CLEAN .)
    PENDOWN         reduce using rule 28 (turtle_instruction -> CLEAN .)
    SHOW            reduce using rule 28 (turtle_instruction -> CLEAN .)
    HIDE            reduce using rule 28 (turtle_instruction -> CLEAN .)
    HOME            reduce using rule 28 (turtle_instruction -> CLEAN .)
    CLEAN           reduce using rule 28 (turtle_instruction -> CLEAN .)
    RESET           reduce using rule 28 (turtle_instruction -> CLEAN .)
    REPEAT          reduce using rule 28 (turtle_instruction -> CLEAN .)
    IF              reduce using rule 28 (turtle_instruction -> CLEAN .)
    IFELSE          reduce using rule 28 (turtle_instruction -> CLEAN .)
    MAKE            reduce using rule 28 (turtle_instruction -> CLEAN .)
    TO              reduce using rule 28 (turtle_instruction -> CLEAN .)
    STRING          reduce using rule 28 (turtle_instruction -> CLEAN .)
    PRINT           reduce using rule 28 (turtle_instruction -> CLEAN .)
    $end            reduce using rule 28 (turtle_instruction -> CLEAN .)
    RBR             reduce using rule 28 (turtle_instruction -> CLEAN .)
    END             reduce using rule 28 (turtle_instruction -> CLEAN .)


state 29

    (29) turtle_instruction -> RESET .

    SETXY           reduce using rule 29 (turtle_instruction -> RESET .)
    FORWARD         reduce using rule 29 (turtle_instruction -> RESET .)
    BACK            reduce using rule 29 (turtle_instruction -> RESET .)
    RIGHT           reduce using rule 29 (turtle_instruction -> RESET .)
    LEFT            reduce using rule 29 (turtle_instruction -> RESET .)
    SETX            reduce using rule 29 (turtle_instruction -> RESET .)
    SETY            reduce using rule 29 (turtle_instruction -> RESET .)
    SETH            reduce using rule 29 (turtle_instruction -> RESET .)
    SPEED           reduce using rule 29 (turtle_instruction -> RESET .)
    SETPS           reduce using rule 29 (turtle_instruction -> RESET .)
    SETPC           reduce using rule 29 (turtle_instruction -> RESET .)
    SETBC           reduce using rule 29 (turtle_instruction -> RESET .)
    PENUP           reduce using rule 29 (turtle_instruction -> RESET .)
    PENDOWN         reduce using rule 29 (turtle_instruction -> RESET .)
    SHOW            reduce using rule 29 (turtle_instruction -> RESET .)
    HIDE            reduce using rule 29 (turtle_instruction -> RESET .)
    HOME            reduce using rule 29 (turtle_instruction -> RESET .)
    CLEAN           reduce using rule 29 (turtle_instruction -> RESET .)
    RESET           reduce using rule 29 (turtle_instruction -> RESET .)
    REPEAT          reduce using rule 29 (turtle_instruction -> RESET .)
    IF              reduce using rule 29 (turtle_instruction -> RESET .)
    IFELSE          reduce using rule 29 (turtle_instruction -> RESET .)
    MAKE            reduce using rule 29 (turtle_instruction -> RESET .)
    TO              reduce using rule 29 (turtle_instruction -> RESET .)
    STRING          reduce using rule 29 (turtle_instruction -> RESET .)
    PRINT           reduce using rule 29 (turtle_instruction -> RESET .)
    $end            reduce using rule 29 (turtle_instruction -> RESET .)
    RBR             reduce using rule 29 (turtle_instruction -> RESET .)
    END             reduce using rule 29 (turtle_instruction -> RESET .)


state 30

    (30) repeat_statement -> REPEAT . expression LBR statement_list RBR
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 59
    name                           shift and go to state 42

state 31

    (31) if_statement -> IF . condition LBR statement_list RBR
    (58) condition -> . TRUE
    (59) condition -> . FALSE
    (60) condition -> . expression GT expression
    (61) condition -> . expression LT expression
    (62) condition -> . expression GTE expression
    (63) condition -> . expression LTE expression
    (64) condition -> . expression EQUALS expression
    (65) condition -> . expression NE expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    TRUE            shift and go to state 61
    FALSE           shift and go to state 62
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    condition                      shift and go to state 60
    expression                     shift and go to state 63
    name                           shift and go to state 42

state 32

    (32) ifelse_statement -> IFELSE . condition LBR statement_list RBR LBR statement_list RBR
    (58) condition -> . TRUE
    (59) condition -> . FALSE
    (60) condition -> . expression GT expression
    (61) condition -> . expression LT expression
    (62) condition -> . expression GTE expression
    (63) condition -> . expression LTE expression
    (64) condition -> . expression EQUALS expression
    (65) condition -> . expression NE expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    TRUE            shift and go to state 61
    FALSE           shift and go to state 62
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    condition                      shift and go to state 64
    expression                     shift and go to state 63
    name                           shift and go to state 42

state 33

    (33) variable_declaration -> MAKE . word expression
    (66) word -> . QUOTE STRING

    QUOTE           shift and go to state 57

    word                           shift and go to state 65

state 34

    (34) procedure_definition -> TO . STRING parameter_list statement_list END

    STRING          shift and go to state 66


state 35

    (39) procedure_call -> STRING . LBR expression_list RBR

    LBR             shift and go to state 67


state 36

    (44) print_statement -> PRINT . word
    (45) print_statement -> PRINT . expression
    (66) word -> . QUOTE STRING
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    QUOTE           shift and go to state 57
    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    word                           shift and go to state 68
    expression                     shift and go to state 69
    name                           shift and go to state 42

state 37

    (1) statement_list -> statement_list statement .

    SETXY           reduce using rule 1 (statement_list -> statement_list statement .)
    FORWARD         reduce using rule 1 (statement_list -> statement_list statement .)
    BACK            reduce using rule 1 (statement_list -> statement_list statement .)
    RIGHT           reduce using rule 1 (statement_list -> statement_list statement .)
    LEFT            reduce using rule 1 (statement_list -> statement_list statement .)
    SETX            reduce using rule 1 (statement_list -> statement_list statement .)
    SETY            reduce using rule 1 (statement_list -> statement_list statement .)
    SETH            reduce using rule 1 (statement_list -> statement_list statement .)
    SPEED           reduce using rule 1 (statement_list -> statement_list statement .)
    SETPS           reduce using rule 1 (statement_list -> statement_list statement .)
    SETPC           reduce using rule 1 (statement_list -> statement_list statement .)
    SETBC           reduce using rule 1 (statement_list -> statement_list statement .)
    PENUP           reduce using rule 1 (statement_list -> statement_list statement .)
    PENDOWN         reduce using rule 1 (statement_list -> statement_list statement .)
    SHOW            reduce using rule 1 (statement_list -> statement_list statement .)
    HIDE            reduce using rule 1 (statement_list -> statement_list statement .)
    HOME            reduce using rule 1 (statement_list -> statement_list statement .)
    CLEAN           reduce using rule 1 (statement_list -> statement_list statement .)
    RESET           reduce using rule 1 (statement_list -> statement_list statement .)
    REPEAT          reduce using rule 1 (statement_list -> statement_list statement .)
    IF              reduce using rule 1 (statement_list -> statement_list statement .)
    IFELSE          reduce using rule 1 (statement_list -> statement_list statement .)
    MAKE            reduce using rule 1 (statement_list -> statement_list statement .)
    TO              reduce using rule 1 (statement_list -> statement_list statement .)
    STRING          reduce using rule 1 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 1 (statement_list -> statement_list statement .)
    $end            reduce using rule 1 (statement_list -> statement_list statement .)
    RBR             reduce using rule 1 (statement_list -> statement_list statement .)
    END             reduce using rule 1 (statement_list -> statement_list statement .)


state 38

    (11) turtle_instruction -> SETXY LBR . expression COMMA expression RBR
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 70
    name                           shift and go to state 42

state 39

    (12) turtle_instruction -> FORWARD expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    FORWARD         reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    BACK            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    RIGHT           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    LEFT            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    SETX            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    SETY            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    SETH            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    SPEED           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    SETPS           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    SETPC           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    SETBC           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    PENUP           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    PENDOWN         reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    SHOW            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    HIDE            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    HOME            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    CLEAN           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    RESET           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    REPEAT          reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    IF              reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    IFELSE          reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    MAKE            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    TO              reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    STRING          reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    PRINT           reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    $end            reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    RBR             reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    END             reduce using rule 12 (turtle_instruction -> FORWARD expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 40

    (46) expression -> INT .

    TIMES           reduce using rule 46 (expression -> INT .)
    DIVIDE          reduce using rule 46 (expression -> INT .)
    PLUS            reduce using rule 46 (expression -> INT .)
    MINUS           reduce using rule 46 (expression -> INT .)
    POWER           reduce using rule 46 (expression -> INT .)
    SETXY           reduce using rule 46 (expression -> INT .)
    FORWARD         reduce using rule 46 (expression -> INT .)
    BACK            reduce using rule 46 (expression -> INT .)
    RIGHT           reduce using rule 46 (expression -> INT .)
    LEFT            reduce using rule 46 (expression -> INT .)
    SETX            reduce using rule 46 (expression -> INT .)
    SETY            reduce using rule 46 (expression -> INT .)
    SETH            reduce using rule 46 (expression -> INT .)
    SPEED           reduce using rule 46 (expression -> INT .)
    SETPS           reduce using rule 46 (expression -> INT .)
    SETPC           reduce using rule 46 (expression -> INT .)
    SETBC           reduce using rule 46 (expression -> INT .)
    PENUP           reduce using rule 46 (expression -> INT .)
    PENDOWN         reduce using rule 46 (expression -> INT .)
    SHOW            reduce using rule 46 (expression -> INT .)
    HIDE            reduce using rule 46 (expression -> INT .)
    HOME            reduce using rule 46 (expression -> INT .)
    CLEAN           reduce using rule 46 (expression -> INT .)
    RESET           reduce using rule 46 (expression -> INT .)
    REPEAT          reduce using rule 46 (expression -> INT .)
    IF              reduce using rule 46 (expression -> INT .)
    IFELSE          reduce using rule 46 (expression -> INT .)
    MAKE            reduce using rule 46 (expression -> INT .)
    TO              reduce using rule 46 (expression -> INT .)
    STRING          reduce using rule 46 (expression -> INT .)
    PRINT           reduce using rule 46 (expression -> INT .)
    $end            reduce using rule 46 (expression -> INT .)
    RBR             reduce using rule 46 (expression -> INT .)
    END             reduce using rule 46 (expression -> INT .)
    LBR             reduce using rule 46 (expression -> INT .)
    GT              reduce using rule 46 (expression -> INT .)
    LT              reduce using rule 46 (expression -> INT .)
    GTE             reduce using rule 46 (expression -> INT .)
    LTE             reduce using rule 46 (expression -> INT .)
    EQUALS          reduce using rule 46 (expression -> INT .)
    NE              reduce using rule 46 (expression -> INT .)
    COMMA           reduce using rule 46 (expression -> INT .)
    RPAR            reduce using rule 46 (expression -> INT .)


state 41

    (47) expression -> FLOAT .

    TIMES           reduce using rule 47 (expression -> FLOAT .)
    DIVIDE          reduce using rule 47 (expression -> FLOAT .)
    PLUS            reduce using rule 47 (expression -> FLOAT .)
    MINUS           reduce using rule 47 (expression -> FLOAT .)
    POWER           reduce using rule 47 (expression -> FLOAT .)
    SETXY           reduce using rule 47 (expression -> FLOAT .)
    FORWARD         reduce using rule 47 (expression -> FLOAT .)
    BACK            reduce using rule 47 (expression -> FLOAT .)
    RIGHT           reduce using rule 47 (expression -> FLOAT .)
    LEFT            reduce using rule 47 (expression -> FLOAT .)
    SETX            reduce using rule 47 (expression -> FLOAT .)
    SETY            reduce using rule 47 (expression -> FLOAT .)
    SETH            reduce using rule 47 (expression -> FLOAT .)
    SPEED           reduce using rule 47 (expression -> FLOAT .)
    SETPS           reduce using rule 47 (expression -> FLOAT .)
    SETPC           reduce using rule 47 (expression -> FLOAT .)
    SETBC           reduce using rule 47 (expression -> FLOAT .)
    PENUP           reduce using rule 47 (expression -> FLOAT .)
    PENDOWN         reduce using rule 47 (expression -> FLOAT .)
    SHOW            reduce using rule 47 (expression -> FLOAT .)
    HIDE            reduce using rule 47 (expression -> FLOAT .)
    HOME            reduce using rule 47 (expression -> FLOAT .)
    CLEAN           reduce using rule 47 (expression -> FLOAT .)
    RESET           reduce using rule 47 (expression -> FLOAT .)
    REPEAT          reduce using rule 47 (expression -> FLOAT .)
    IF              reduce using rule 47 (expression -> FLOAT .)
    IFELSE          reduce using rule 47 (expression -> FLOAT .)
    MAKE            reduce using rule 47 (expression -> FLOAT .)
    TO              reduce using rule 47 (expression -> FLOAT .)
    STRING          reduce using rule 47 (expression -> FLOAT .)
    PRINT           reduce using rule 47 (expression -> FLOAT .)
    $end            reduce using rule 47 (expression -> FLOAT .)
    RBR             reduce using rule 47 (expression -> FLOAT .)
    END             reduce using rule 47 (expression -> FLOAT .)
    LBR             reduce using rule 47 (expression -> FLOAT .)
    GT              reduce using rule 47 (expression -> FLOAT .)
    LT              reduce using rule 47 (expression -> FLOAT .)
    GTE             reduce using rule 47 (expression -> FLOAT .)
    LTE             reduce using rule 47 (expression -> FLOAT .)
    EQUALS          reduce using rule 47 (expression -> FLOAT .)
    NE              reduce using rule 47 (expression -> FLOAT .)
    COMMA           reduce using rule 47 (expression -> FLOAT .)
    RPAR            reduce using rule 47 (expression -> FLOAT .)


state 42

    (48) expression -> name .

    TIMES           reduce using rule 48 (expression -> name .)
    DIVIDE          reduce using rule 48 (expression -> name .)
    PLUS            reduce using rule 48 (expression -> name .)
    MINUS           reduce using rule 48 (expression -> name .)
    POWER           reduce using rule 48 (expression -> name .)
    SETXY           reduce using rule 48 (expression -> name .)
    FORWARD         reduce using rule 48 (expression -> name .)
    BACK            reduce using rule 48 (expression -> name .)
    RIGHT           reduce using rule 48 (expression -> name .)
    LEFT            reduce using rule 48 (expression -> name .)
    SETX            reduce using rule 48 (expression -> name .)
    SETY            reduce using rule 48 (expression -> name .)
    SETH            reduce using rule 48 (expression -> name .)
    SPEED           reduce using rule 48 (expression -> name .)
    SETPS           reduce using rule 48 (expression -> name .)
    SETPC           reduce using rule 48 (expression -> name .)
    SETBC           reduce using rule 48 (expression -> name .)
    PENUP           reduce using rule 48 (expression -> name .)
    PENDOWN         reduce using rule 48 (expression -> name .)
    SHOW            reduce using rule 48 (expression -> name .)
    HIDE            reduce using rule 48 (expression -> name .)
    HOME            reduce using rule 48 (expression -> name .)
    CLEAN           reduce using rule 48 (expression -> name .)
    RESET           reduce using rule 48 (expression -> name .)
    REPEAT          reduce using rule 48 (expression -> name .)
    IF              reduce using rule 48 (expression -> name .)
    IFELSE          reduce using rule 48 (expression -> name .)
    MAKE            reduce using rule 48 (expression -> name .)
    TO              reduce using rule 48 (expression -> name .)
    STRING          reduce using rule 48 (expression -> name .)
    PRINT           reduce using rule 48 (expression -> name .)
    $end            reduce using rule 48 (expression -> name .)
    RBR             reduce using rule 48 (expression -> name .)
    END             reduce using rule 48 (expression -> name .)
    LBR             reduce using rule 48 (expression -> name .)
    GT              reduce using rule 48 (expression -> name .)
    LT              reduce using rule 48 (expression -> name .)
    GTE             reduce using rule 48 (expression -> name .)
    LTE             reduce using rule 48 (expression -> name .)
    EQUALS          reduce using rule 48 (expression -> name .)
    NE              reduce using rule 48 (expression -> name .)
    COMMA           reduce using rule 48 (expression -> name .)
    RPAR            reduce using rule 48 (expression -> name .)


state 43

    (49) expression -> REPCOUNT .

    TIMES           reduce using rule 49 (expression -> REPCOUNT .)
    DIVIDE          reduce using rule 49 (expression -> REPCOUNT .)
    PLUS            reduce using rule 49 (expression -> REPCOUNT .)
    MINUS           reduce using rule 49 (expression -> REPCOUNT .)
    POWER           reduce using rule 49 (expression -> REPCOUNT .)
    SETXY           reduce using rule 49 (expression -> REPCOUNT .)
    FORWARD         reduce using rule 49 (expression -> REPCOUNT .)
    BACK            reduce using rule 49 (expression -> REPCOUNT .)
    RIGHT           reduce using rule 49 (expression -> REPCOUNT .)
    LEFT            reduce using rule 49 (expression -> REPCOUNT .)
    SETX            reduce using rule 49 (expression -> REPCOUNT .)
    SETY            reduce using rule 49 (expression -> REPCOUNT .)
    SETH            reduce using rule 49 (expression -> REPCOUNT .)
    SPEED           reduce using rule 49 (expression -> REPCOUNT .)
    SETPS           reduce using rule 49 (expression -> REPCOUNT .)
    SETPC           reduce using rule 49 (expression -> REPCOUNT .)
    SETBC           reduce using rule 49 (expression -> REPCOUNT .)
    PENUP           reduce using rule 49 (expression -> REPCOUNT .)
    PENDOWN         reduce using rule 49 (expression -> REPCOUNT .)
    SHOW            reduce using rule 49 (expression -> REPCOUNT .)
    HIDE            reduce using rule 49 (expression -> REPCOUNT .)
    HOME            reduce using rule 49 (expression -> REPCOUNT .)
    CLEAN           reduce using rule 49 (expression -> REPCOUNT .)
    RESET           reduce using rule 49 (expression -> REPCOUNT .)
    REPEAT          reduce using rule 49 (expression -> REPCOUNT .)
    IF              reduce using rule 49 (expression -> REPCOUNT .)
    IFELSE          reduce using rule 49 (expression -> REPCOUNT .)
    MAKE            reduce using rule 49 (expression -> REPCOUNT .)
    TO              reduce using rule 49 (expression -> REPCOUNT .)
    STRING          reduce using rule 49 (expression -> REPCOUNT .)
    PRINT           reduce using rule 49 (expression -> REPCOUNT .)
    $end            reduce using rule 49 (expression -> REPCOUNT .)
    RBR             reduce using rule 49 (expression -> REPCOUNT .)
    END             reduce using rule 49 (expression -> REPCOUNT .)
    LBR             reduce using rule 49 (expression -> REPCOUNT .)
    GT              reduce using rule 49 (expression -> REPCOUNT .)
    LT              reduce using rule 49 (expression -> REPCOUNT .)
    GTE             reduce using rule 49 (expression -> REPCOUNT .)
    LTE             reduce using rule 49 (expression -> REPCOUNT .)
    EQUALS          reduce using rule 49 (expression -> REPCOUNT .)
    NE              reduce using rule 49 (expression -> REPCOUNT .)
    COMMA           reduce using rule 49 (expression -> REPCOUNT .)
    RPAR            reduce using rule 49 (expression -> REPCOUNT .)


state 44

    (50) expression -> LPAR . expression RPAR
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 76
    name                           shift and go to state 42

state 45

    (51) expression -> MINUS . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 77
    name                           shift and go to state 42

state 46

    (52) expression -> RANDOM . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 78
    name                           shift and go to state 42

state 47

    (67) name -> COLON . STRING

    STRING          shift and go to state 79


state 48

    (13) turtle_instruction -> BACK expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 13 (turtle_instruction -> BACK expression .)
    FORWARD         reduce using rule 13 (turtle_instruction -> BACK expression .)
    BACK            reduce using rule 13 (turtle_instruction -> BACK expression .)
    RIGHT           reduce using rule 13 (turtle_instruction -> BACK expression .)
    LEFT            reduce using rule 13 (turtle_instruction -> BACK expression .)
    SETX            reduce using rule 13 (turtle_instruction -> BACK expression .)
    SETY            reduce using rule 13 (turtle_instruction -> BACK expression .)
    SETH            reduce using rule 13 (turtle_instruction -> BACK expression .)
    SPEED           reduce using rule 13 (turtle_instruction -> BACK expression .)
    SETPS           reduce using rule 13 (turtle_instruction -> BACK expression .)
    SETPC           reduce using rule 13 (turtle_instruction -> BACK expression .)
    SETBC           reduce using rule 13 (turtle_instruction -> BACK expression .)
    PENUP           reduce using rule 13 (turtle_instruction -> BACK expression .)
    PENDOWN         reduce using rule 13 (turtle_instruction -> BACK expression .)
    SHOW            reduce using rule 13 (turtle_instruction -> BACK expression .)
    HIDE            reduce using rule 13 (turtle_instruction -> BACK expression .)
    HOME            reduce using rule 13 (turtle_instruction -> BACK expression .)
    CLEAN           reduce using rule 13 (turtle_instruction -> BACK expression .)
    RESET           reduce using rule 13 (turtle_instruction -> BACK expression .)
    REPEAT          reduce using rule 13 (turtle_instruction -> BACK expression .)
    IF              reduce using rule 13 (turtle_instruction -> BACK expression .)
    IFELSE          reduce using rule 13 (turtle_instruction -> BACK expression .)
    MAKE            reduce using rule 13 (turtle_instruction -> BACK expression .)
    TO              reduce using rule 13 (turtle_instruction -> BACK expression .)
    STRING          reduce using rule 13 (turtle_instruction -> BACK expression .)
    PRINT           reduce using rule 13 (turtle_instruction -> BACK expression .)
    $end            reduce using rule 13 (turtle_instruction -> BACK expression .)
    RBR             reduce using rule 13 (turtle_instruction -> BACK expression .)
    END             reduce using rule 13 (turtle_instruction -> BACK expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 49

    (14) turtle_instruction -> RIGHT expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    FORWARD         reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    BACK            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    RIGHT           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    LEFT            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    SETX            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    SETY            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    SETH            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    SPEED           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    SETPS           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    SETPC           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    SETBC           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    PENUP           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    PENDOWN         reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    SHOW            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    HIDE            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    HOME            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    CLEAN           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    RESET           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    REPEAT          reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    IF              reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    IFELSE          reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    MAKE            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    TO              reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    STRING          reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    PRINT           reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    $end            reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    RBR             reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    END             reduce using rule 14 (turtle_instruction -> RIGHT expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 50

    (15) turtle_instruction -> LEFT expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    FORWARD         reduce using rule 15 (turtle_instruction -> LEFT expression .)
    BACK            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    RIGHT           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    LEFT            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    SETX            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    SETY            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    SETH            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    SPEED           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    SETPS           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    SETPC           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    SETBC           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    PENUP           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    PENDOWN         reduce using rule 15 (turtle_instruction -> LEFT expression .)
    SHOW            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    HIDE            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    HOME            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    CLEAN           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    RESET           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    REPEAT          reduce using rule 15 (turtle_instruction -> LEFT expression .)
    IF              reduce using rule 15 (turtle_instruction -> LEFT expression .)
    IFELSE          reduce using rule 15 (turtle_instruction -> LEFT expression .)
    MAKE            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    TO              reduce using rule 15 (turtle_instruction -> LEFT expression .)
    STRING          reduce using rule 15 (turtle_instruction -> LEFT expression .)
    PRINT           reduce using rule 15 (turtle_instruction -> LEFT expression .)
    $end            reduce using rule 15 (turtle_instruction -> LEFT expression .)
    RBR             reduce using rule 15 (turtle_instruction -> LEFT expression .)
    END             reduce using rule 15 (turtle_instruction -> LEFT expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 51

    (16) turtle_instruction -> SETX expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 16 (turtle_instruction -> SETX expression .)
    FORWARD         reduce using rule 16 (turtle_instruction -> SETX expression .)
    BACK            reduce using rule 16 (turtle_instruction -> SETX expression .)
    RIGHT           reduce using rule 16 (turtle_instruction -> SETX expression .)
    LEFT            reduce using rule 16 (turtle_instruction -> SETX expression .)
    SETX            reduce using rule 16 (turtle_instruction -> SETX expression .)
    SETY            reduce using rule 16 (turtle_instruction -> SETX expression .)
    SETH            reduce using rule 16 (turtle_instruction -> SETX expression .)
    SPEED           reduce using rule 16 (turtle_instruction -> SETX expression .)
    SETPS           reduce using rule 16 (turtle_instruction -> SETX expression .)
    SETPC           reduce using rule 16 (turtle_instruction -> SETX expression .)
    SETBC           reduce using rule 16 (turtle_instruction -> SETX expression .)
    PENUP           reduce using rule 16 (turtle_instruction -> SETX expression .)
    PENDOWN         reduce using rule 16 (turtle_instruction -> SETX expression .)
    SHOW            reduce using rule 16 (turtle_instruction -> SETX expression .)
    HIDE            reduce using rule 16 (turtle_instruction -> SETX expression .)
    HOME            reduce using rule 16 (turtle_instruction -> SETX expression .)
    CLEAN           reduce using rule 16 (turtle_instruction -> SETX expression .)
    RESET           reduce using rule 16 (turtle_instruction -> SETX expression .)
    REPEAT          reduce using rule 16 (turtle_instruction -> SETX expression .)
    IF              reduce using rule 16 (turtle_instruction -> SETX expression .)
    IFELSE          reduce using rule 16 (turtle_instruction -> SETX expression .)
    MAKE            reduce using rule 16 (turtle_instruction -> SETX expression .)
    TO              reduce using rule 16 (turtle_instruction -> SETX expression .)
    STRING          reduce using rule 16 (turtle_instruction -> SETX expression .)
    PRINT           reduce using rule 16 (turtle_instruction -> SETX expression .)
    $end            reduce using rule 16 (turtle_instruction -> SETX expression .)
    RBR             reduce using rule 16 (turtle_instruction -> SETX expression .)
    END             reduce using rule 16 (turtle_instruction -> SETX expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 52

    (17) turtle_instruction -> SETY expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 17 (turtle_instruction -> SETY expression .)
    FORWARD         reduce using rule 17 (turtle_instruction -> SETY expression .)
    BACK            reduce using rule 17 (turtle_instruction -> SETY expression .)
    RIGHT           reduce using rule 17 (turtle_instruction -> SETY expression .)
    LEFT            reduce using rule 17 (turtle_instruction -> SETY expression .)
    SETX            reduce using rule 17 (turtle_instruction -> SETY expression .)
    SETY            reduce using rule 17 (turtle_instruction -> SETY expression .)
    SETH            reduce using rule 17 (turtle_instruction -> SETY expression .)
    SPEED           reduce using rule 17 (turtle_instruction -> SETY expression .)
    SETPS           reduce using rule 17 (turtle_instruction -> SETY expression .)
    SETPC           reduce using rule 17 (turtle_instruction -> SETY expression .)
    SETBC           reduce using rule 17 (turtle_instruction -> SETY expression .)
    PENUP           reduce using rule 17 (turtle_instruction -> SETY expression .)
    PENDOWN         reduce using rule 17 (turtle_instruction -> SETY expression .)
    SHOW            reduce using rule 17 (turtle_instruction -> SETY expression .)
    HIDE            reduce using rule 17 (turtle_instruction -> SETY expression .)
    HOME            reduce using rule 17 (turtle_instruction -> SETY expression .)
    CLEAN           reduce using rule 17 (turtle_instruction -> SETY expression .)
    RESET           reduce using rule 17 (turtle_instruction -> SETY expression .)
    REPEAT          reduce using rule 17 (turtle_instruction -> SETY expression .)
    IF              reduce using rule 17 (turtle_instruction -> SETY expression .)
    IFELSE          reduce using rule 17 (turtle_instruction -> SETY expression .)
    MAKE            reduce using rule 17 (turtle_instruction -> SETY expression .)
    TO              reduce using rule 17 (turtle_instruction -> SETY expression .)
    STRING          reduce using rule 17 (turtle_instruction -> SETY expression .)
    PRINT           reduce using rule 17 (turtle_instruction -> SETY expression .)
    $end            reduce using rule 17 (turtle_instruction -> SETY expression .)
    RBR             reduce using rule 17 (turtle_instruction -> SETY expression .)
    END             reduce using rule 17 (turtle_instruction -> SETY expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 53

    (18) turtle_instruction -> SETH expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 18 (turtle_instruction -> SETH expression .)
    FORWARD         reduce using rule 18 (turtle_instruction -> SETH expression .)
    BACK            reduce using rule 18 (turtle_instruction -> SETH expression .)
    RIGHT           reduce using rule 18 (turtle_instruction -> SETH expression .)
    LEFT            reduce using rule 18 (turtle_instruction -> SETH expression .)
    SETX            reduce using rule 18 (turtle_instruction -> SETH expression .)
    SETY            reduce using rule 18 (turtle_instruction -> SETH expression .)
    SETH            reduce using rule 18 (turtle_instruction -> SETH expression .)
    SPEED           reduce using rule 18 (turtle_instruction -> SETH expression .)
    SETPS           reduce using rule 18 (turtle_instruction -> SETH expression .)
    SETPC           reduce using rule 18 (turtle_instruction -> SETH expression .)
    SETBC           reduce using rule 18 (turtle_instruction -> SETH expression .)
    PENUP           reduce using rule 18 (turtle_instruction -> SETH expression .)
    PENDOWN         reduce using rule 18 (turtle_instruction -> SETH expression .)
    SHOW            reduce using rule 18 (turtle_instruction -> SETH expression .)
    HIDE            reduce using rule 18 (turtle_instruction -> SETH expression .)
    HOME            reduce using rule 18 (turtle_instruction -> SETH expression .)
    CLEAN           reduce using rule 18 (turtle_instruction -> SETH expression .)
    RESET           reduce using rule 18 (turtle_instruction -> SETH expression .)
    REPEAT          reduce using rule 18 (turtle_instruction -> SETH expression .)
    IF              reduce using rule 18 (turtle_instruction -> SETH expression .)
    IFELSE          reduce using rule 18 (turtle_instruction -> SETH expression .)
    MAKE            reduce using rule 18 (turtle_instruction -> SETH expression .)
    TO              reduce using rule 18 (turtle_instruction -> SETH expression .)
    STRING          reduce using rule 18 (turtle_instruction -> SETH expression .)
    PRINT           reduce using rule 18 (turtle_instruction -> SETH expression .)
    $end            reduce using rule 18 (turtle_instruction -> SETH expression .)
    RBR             reduce using rule 18 (turtle_instruction -> SETH expression .)
    END             reduce using rule 18 (turtle_instruction -> SETH expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 54

    (19) turtle_instruction -> SPEED expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    FORWARD         reduce using rule 19 (turtle_instruction -> SPEED expression .)
    BACK            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    RIGHT           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    LEFT            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    SETX            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    SETY            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    SETH            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    SPEED           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    SETPS           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    SETPC           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    SETBC           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    PENUP           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    PENDOWN         reduce using rule 19 (turtle_instruction -> SPEED expression .)
    SHOW            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    HIDE            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    HOME            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    CLEAN           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    RESET           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    REPEAT          reduce using rule 19 (turtle_instruction -> SPEED expression .)
    IF              reduce using rule 19 (turtle_instruction -> SPEED expression .)
    IFELSE          reduce using rule 19 (turtle_instruction -> SPEED expression .)
    MAKE            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    TO              reduce using rule 19 (turtle_instruction -> SPEED expression .)
    STRING          reduce using rule 19 (turtle_instruction -> SPEED expression .)
    PRINT           reduce using rule 19 (turtle_instruction -> SPEED expression .)
    $end            reduce using rule 19 (turtle_instruction -> SPEED expression .)
    RBR             reduce using rule 19 (turtle_instruction -> SPEED expression .)
    END             reduce using rule 19 (turtle_instruction -> SPEED expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 55

    (20) turtle_instruction -> SETPS expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    FORWARD         reduce using rule 20 (turtle_instruction -> SETPS expression .)
    BACK            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    RIGHT           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    LEFT            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    SETX            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    SETY            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    SETH            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    SPEED           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    SETPS           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    SETPC           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    SETBC           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    PENUP           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    PENDOWN         reduce using rule 20 (turtle_instruction -> SETPS expression .)
    SHOW            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    HIDE            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    HOME            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    CLEAN           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    RESET           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    REPEAT          reduce using rule 20 (turtle_instruction -> SETPS expression .)
    IF              reduce using rule 20 (turtle_instruction -> SETPS expression .)
    IFELSE          reduce using rule 20 (turtle_instruction -> SETPS expression .)
    MAKE            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    TO              reduce using rule 20 (turtle_instruction -> SETPS expression .)
    STRING          reduce using rule 20 (turtle_instruction -> SETPS expression .)
    PRINT           reduce using rule 20 (turtle_instruction -> SETPS expression .)
    $end            reduce using rule 20 (turtle_instruction -> SETPS expression .)
    RBR             reduce using rule 20 (turtle_instruction -> SETPS expression .)
    END             reduce using rule 20 (turtle_instruction -> SETPS expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 56

    (21) turtle_instruction -> SETPC word .

    SETXY           reduce using rule 21 (turtle_instruction -> SETPC word .)
    FORWARD         reduce using rule 21 (turtle_instruction -> SETPC word .)
    BACK            reduce using rule 21 (turtle_instruction -> SETPC word .)
    RIGHT           reduce using rule 21 (turtle_instruction -> SETPC word .)
    LEFT            reduce using rule 21 (turtle_instruction -> SETPC word .)
    SETX            reduce using rule 21 (turtle_instruction -> SETPC word .)
    SETY            reduce using rule 21 (turtle_instruction -> SETPC word .)
    SETH            reduce using rule 21 (turtle_instruction -> SETPC word .)
    SPEED           reduce using rule 21 (turtle_instruction -> SETPC word .)
    SETPS           reduce using rule 21 (turtle_instruction -> SETPC word .)
    SETPC           reduce using rule 21 (turtle_instruction -> SETPC word .)
    SETBC           reduce using rule 21 (turtle_instruction -> SETPC word .)
    PENUP           reduce using rule 21 (turtle_instruction -> SETPC word .)
    PENDOWN         reduce using rule 21 (turtle_instruction -> SETPC word .)
    SHOW            reduce using rule 21 (turtle_instruction -> SETPC word .)
    HIDE            reduce using rule 21 (turtle_instruction -> SETPC word .)
    HOME            reduce using rule 21 (turtle_instruction -> SETPC word .)
    CLEAN           reduce using rule 21 (turtle_instruction -> SETPC word .)
    RESET           reduce using rule 21 (turtle_instruction -> SETPC word .)
    REPEAT          reduce using rule 21 (turtle_instruction -> SETPC word .)
    IF              reduce using rule 21 (turtle_instruction -> SETPC word .)
    IFELSE          reduce using rule 21 (turtle_instruction -> SETPC word .)
    MAKE            reduce using rule 21 (turtle_instruction -> SETPC word .)
    TO              reduce using rule 21 (turtle_instruction -> SETPC word .)
    STRING          reduce using rule 21 (turtle_instruction -> SETPC word .)
    PRINT           reduce using rule 21 (turtle_instruction -> SETPC word .)
    $end            reduce using rule 21 (turtle_instruction -> SETPC word .)
    RBR             reduce using rule 21 (turtle_instruction -> SETPC word .)
    END             reduce using rule 21 (turtle_instruction -> SETPC word .)


state 57

    (66) word -> QUOTE . STRING

    STRING          shift and go to state 80


state 58

    (22) turtle_instruction -> SETBC word .

    SETXY           reduce using rule 22 (turtle_instruction -> SETBC word .)
    FORWARD         reduce using rule 22 (turtle_instruction -> SETBC word .)
    BACK            reduce using rule 22 (turtle_instruction -> SETBC word .)
    RIGHT           reduce using rule 22 (turtle_instruction -> SETBC word .)
    LEFT            reduce using rule 22 (turtle_instruction -> SETBC word .)
    SETX            reduce using rule 22 (turtle_instruction -> SETBC word .)
    SETY            reduce using rule 22 (turtle_instruction -> SETBC word .)
    SETH            reduce using rule 22 (turtle_instruction -> SETBC word .)
    SPEED           reduce using rule 22 (turtle_instruction -> SETBC word .)
    SETPS           reduce using rule 22 (turtle_instruction -> SETBC word .)
    SETPC           reduce using rule 22 (turtle_instruction -> SETBC word .)
    SETBC           reduce using rule 22 (turtle_instruction -> SETBC word .)
    PENUP           reduce using rule 22 (turtle_instruction -> SETBC word .)
    PENDOWN         reduce using rule 22 (turtle_instruction -> SETBC word .)
    SHOW            reduce using rule 22 (turtle_instruction -> SETBC word .)
    HIDE            reduce using rule 22 (turtle_instruction -> SETBC word .)
    HOME            reduce using rule 22 (turtle_instruction -> SETBC word .)
    CLEAN           reduce using rule 22 (turtle_instruction -> SETBC word .)
    RESET           reduce using rule 22 (turtle_instruction -> SETBC word .)
    REPEAT          reduce using rule 22 (turtle_instruction -> SETBC word .)
    IF              reduce using rule 22 (turtle_instruction -> SETBC word .)
    IFELSE          reduce using rule 22 (turtle_instruction -> SETBC word .)
    MAKE            reduce using rule 22 (turtle_instruction -> SETBC word .)
    TO              reduce using rule 22 (turtle_instruction -> SETBC word .)
    STRING          reduce using rule 22 (turtle_instruction -> SETBC word .)
    PRINT           reduce using rule 22 (turtle_instruction -> SETBC word .)
    $end            reduce using rule 22 (turtle_instruction -> SETBC word .)
    RBR             reduce using rule 22 (turtle_instruction -> SETBC word .)
    END             reduce using rule 22 (turtle_instruction -> SETBC word .)


state 59

    (30) repeat_statement -> REPEAT expression . LBR statement_list RBR
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    LBR             shift and go to state 81
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 60

    (31) if_statement -> IF condition . LBR statement_list RBR

    LBR             shift and go to state 82


state 61

    (58) condition -> TRUE .

    LBR             reduce using rule 58 (condition -> TRUE .)


state 62

    (59) condition -> FALSE .

    LBR             reduce using rule 59 (condition -> FALSE .)


state 63

    (60) condition -> expression . GT expression
    (61) condition -> expression . LT expression
    (62) condition -> expression . GTE expression
    (63) condition -> expression . LTE expression
    (64) condition -> expression . EQUALS expression
    (65) condition -> expression . NE expression
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    GT              shift and go to state 83
    LT              shift and go to state 84
    GTE             shift and go to state 85
    LTE             shift and go to state 86
    EQUALS          shift and go to state 87
    NE              shift and go to state 88
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 64

    (32) ifelse_statement -> IFELSE condition . LBR statement_list RBR LBR statement_list RBR

    LBR             shift and go to state 89


state 65

    (33) variable_declaration -> MAKE word . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 90
    name                           shift and go to state 42

state 66

    (34) procedure_definition -> TO STRING . parameter_list statement_list END
    (35) parameter_list -> . parameter_list parameter
    (36) parameter_list -> . parameter
    (37) parameter -> . name
    (38) parameter -> . empty
    (67) name -> . COLON STRING
    (68) empty -> .

  ! shift/reduce conflict for COLON resolved as shift
    COLON           shift and go to state 47
    SETXY           reduce using rule 68 (empty -> .)
    FORWARD         reduce using rule 68 (empty -> .)
    BACK            reduce using rule 68 (empty -> .)
    RIGHT           reduce using rule 68 (empty -> .)
    LEFT            reduce using rule 68 (empty -> .)
    SETX            reduce using rule 68 (empty -> .)
    SETY            reduce using rule 68 (empty -> .)
    SETH            reduce using rule 68 (empty -> .)
    SPEED           reduce using rule 68 (empty -> .)
    SETPS           reduce using rule 68 (empty -> .)
    SETPC           reduce using rule 68 (empty -> .)
    SETBC           reduce using rule 68 (empty -> .)
    PENUP           reduce using rule 68 (empty -> .)
    PENDOWN         reduce using rule 68 (empty -> .)
    SHOW            reduce using rule 68 (empty -> .)
    HIDE            reduce using rule 68 (empty -> .)
    HOME            reduce using rule 68 (empty -> .)
    CLEAN           reduce using rule 68 (empty -> .)
    RESET           reduce using rule 68 (empty -> .)
    REPEAT          reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    IFELSE          reduce using rule 68 (empty -> .)
    MAKE            reduce using rule 68 (empty -> .)
    TO              reduce using rule 68 (empty -> .)
    STRING          reduce using rule 68 (empty -> .)
    PRINT           reduce using rule 68 (empty -> .)

  ! COLON           [ reduce using rule 68 (empty -> .) ]

    parameter_list                 shift and go to state 91
    parameter                      shift and go to state 92
    name                           shift and go to state 93
    empty                          shift and go to state 94

state 67

    (39) procedure_call -> STRING LBR . expression_list RBR
    (40) expression_list -> . expression_list COMMA expression_elem
    (41) expression_list -> . expression_elem
    (42) expression_elem -> . expression
    (43) expression_elem -> . empty
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (68) empty -> .
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    RBR             reduce using rule 68 (empty -> .)
    COMMA           reduce using rule 68 (empty -> .)
    COLON           shift and go to state 47

    expression_list                shift and go to state 95
    expression_elem                shift and go to state 96
    expression                     shift and go to state 97
    empty                          shift and go to state 98
    name                           shift and go to state 42

state 68

    (44) print_statement -> PRINT word .

    SETXY           reduce using rule 44 (print_statement -> PRINT word .)
    FORWARD         reduce using rule 44 (print_statement -> PRINT word .)
    BACK            reduce using rule 44 (print_statement -> PRINT word .)
    RIGHT           reduce using rule 44 (print_statement -> PRINT word .)
    LEFT            reduce using rule 44 (print_statement -> PRINT word .)
    SETX            reduce using rule 44 (print_statement -> PRINT word .)
    SETY            reduce using rule 44 (print_statement -> PRINT word .)
    SETH            reduce using rule 44 (print_statement -> PRINT word .)
    SPEED           reduce using rule 44 (print_statement -> PRINT word .)
    SETPS           reduce using rule 44 (print_statement -> PRINT word .)
    SETPC           reduce using rule 44 (print_statement -> PRINT word .)
    SETBC           reduce using rule 44 (print_statement -> PRINT word .)
    PENUP           reduce using rule 44 (print_statement -> PRINT word .)
    PENDOWN         reduce using rule 44 (print_statement -> PRINT word .)
    SHOW            reduce using rule 44 (print_statement -> PRINT word .)
    HIDE            reduce using rule 44 (print_statement -> PRINT word .)
    HOME            reduce using rule 44 (print_statement -> PRINT word .)
    CLEAN           reduce using rule 44 (print_statement -> PRINT word .)
    RESET           reduce using rule 44 (print_statement -> PRINT word .)
    REPEAT          reduce using rule 44 (print_statement -> PRINT word .)
    IF              reduce using rule 44 (print_statement -> PRINT word .)
    IFELSE          reduce using rule 44 (print_statement -> PRINT word .)
    MAKE            reduce using rule 44 (print_statement -> PRINT word .)
    TO              reduce using rule 44 (print_statement -> PRINT word .)
    STRING          reduce using rule 44 (print_statement -> PRINT word .)
    PRINT           reduce using rule 44 (print_statement -> PRINT word .)
    $end            reduce using rule 44 (print_statement -> PRINT word .)
    RBR             reduce using rule 44 (print_statement -> PRINT word .)
    END             reduce using rule 44 (print_statement -> PRINT word .)


state 69

    (45) print_statement -> PRINT expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 45 (print_statement -> PRINT expression .)
    FORWARD         reduce using rule 45 (print_statement -> PRINT expression .)
    BACK            reduce using rule 45 (print_statement -> PRINT expression .)
    RIGHT           reduce using rule 45 (print_statement -> PRINT expression .)
    LEFT            reduce using rule 45 (print_statement -> PRINT expression .)
    SETX            reduce using rule 45 (print_statement -> PRINT expression .)
    SETY            reduce using rule 45 (print_statement -> PRINT expression .)
    SETH            reduce using rule 45 (print_statement -> PRINT expression .)
    SPEED           reduce using rule 45 (print_statement -> PRINT expression .)
    SETPS           reduce using rule 45 (print_statement -> PRINT expression .)
    SETPC           reduce using rule 45 (print_statement -> PRINT expression .)
    SETBC           reduce using rule 45 (print_statement -> PRINT expression .)
    PENUP           reduce using rule 45 (print_statement -> PRINT expression .)
    PENDOWN         reduce using rule 45 (print_statement -> PRINT expression .)
    SHOW            reduce using rule 45 (print_statement -> PRINT expression .)
    HIDE            reduce using rule 45 (print_statement -> PRINT expression .)
    HOME            reduce using rule 45 (print_statement -> PRINT expression .)
    CLEAN           reduce using rule 45 (print_statement -> PRINT expression .)
    RESET           reduce using rule 45 (print_statement -> PRINT expression .)
    REPEAT          reduce using rule 45 (print_statement -> PRINT expression .)
    IF              reduce using rule 45 (print_statement -> PRINT expression .)
    IFELSE          reduce using rule 45 (print_statement -> PRINT expression .)
    MAKE            reduce using rule 45 (print_statement -> PRINT expression .)
    TO              reduce using rule 45 (print_statement -> PRINT expression .)
    STRING          reduce using rule 45 (print_statement -> PRINT expression .)
    PRINT           reduce using rule 45 (print_statement -> PRINT expression .)
    $end            reduce using rule 45 (print_statement -> PRINT expression .)
    RBR             reduce using rule 45 (print_statement -> PRINT expression .)
    END             reduce using rule 45 (print_statement -> PRINT expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 70

    (11) turtle_instruction -> SETXY LBR expression . COMMA expression RBR
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    COMMA           shift and go to state 99
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 71

    (53) expression -> expression TIMES . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 100
    name                           shift and go to state 42

state 72

    (54) expression -> expression DIVIDE . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 101
    name                           shift and go to state 42

state 73

    (55) expression -> expression PLUS . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 102
    name                           shift and go to state 42

state 74

    (56) expression -> expression MINUS . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 103
    name                           shift and go to state 42

state 75

    (57) expression -> expression POWER . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 104
    name                           shift and go to state 42

state 76

    (50) expression -> LPAR expression . RPAR
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    RPAR            shift and go to state 105
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 77

    (51) expression -> MINUS expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    TIMES           reduce using rule 51 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 51 (expression -> MINUS expression .)
    PLUS            reduce using rule 51 (expression -> MINUS expression .)
    MINUS           reduce using rule 51 (expression -> MINUS expression .)
    SETXY           reduce using rule 51 (expression -> MINUS expression .)
    FORWARD         reduce using rule 51 (expression -> MINUS expression .)
    BACK            reduce using rule 51 (expression -> MINUS expression .)
    RIGHT           reduce using rule 51 (expression -> MINUS expression .)
    LEFT            reduce using rule 51 (expression -> MINUS expression .)
    SETX            reduce using rule 51 (expression -> MINUS expression .)
    SETY            reduce using rule 51 (expression -> MINUS expression .)
    SETH            reduce using rule 51 (expression -> MINUS expression .)
    SPEED           reduce using rule 51 (expression -> MINUS expression .)
    SETPS           reduce using rule 51 (expression -> MINUS expression .)
    SETPC           reduce using rule 51 (expression -> MINUS expression .)
    SETBC           reduce using rule 51 (expression -> MINUS expression .)
    PENUP           reduce using rule 51 (expression -> MINUS expression .)
    PENDOWN         reduce using rule 51 (expression -> MINUS expression .)
    SHOW            reduce using rule 51 (expression -> MINUS expression .)
    HIDE            reduce using rule 51 (expression -> MINUS expression .)
    HOME            reduce using rule 51 (expression -> MINUS expression .)
    CLEAN           reduce using rule 51 (expression -> MINUS expression .)
    RESET           reduce using rule 51 (expression -> MINUS expression .)
    REPEAT          reduce using rule 51 (expression -> MINUS expression .)
    IF              reduce using rule 51 (expression -> MINUS expression .)
    IFELSE          reduce using rule 51 (expression -> MINUS expression .)
    MAKE            reduce using rule 51 (expression -> MINUS expression .)
    TO              reduce using rule 51 (expression -> MINUS expression .)
    STRING          reduce using rule 51 (expression -> MINUS expression .)
    PRINT           reduce using rule 51 (expression -> MINUS expression .)
    $end            reduce using rule 51 (expression -> MINUS expression .)
    RBR             reduce using rule 51 (expression -> MINUS expression .)
    END             reduce using rule 51 (expression -> MINUS expression .)
    LBR             reduce using rule 51 (expression -> MINUS expression .)
    GT              reduce using rule 51 (expression -> MINUS expression .)
    LT              reduce using rule 51 (expression -> MINUS expression .)
    GTE             reduce using rule 51 (expression -> MINUS expression .)
    LTE             reduce using rule 51 (expression -> MINUS expression .)
    EQUALS          reduce using rule 51 (expression -> MINUS expression .)
    NE              reduce using rule 51 (expression -> MINUS expression .)
    COMMA           reduce using rule 51 (expression -> MINUS expression .)
    RPAR            reduce using rule 51 (expression -> MINUS expression .)
    POWER           shift and go to state 75

  ! POWER           [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 72 ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 78

    (52) expression -> RANDOM expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 52 (expression -> RANDOM expression .)
    FORWARD         reduce using rule 52 (expression -> RANDOM expression .)
    BACK            reduce using rule 52 (expression -> RANDOM expression .)
    RIGHT           reduce using rule 52 (expression -> RANDOM expression .)
    LEFT            reduce using rule 52 (expression -> RANDOM expression .)
    SETX            reduce using rule 52 (expression -> RANDOM expression .)
    SETY            reduce using rule 52 (expression -> RANDOM expression .)
    SETH            reduce using rule 52 (expression -> RANDOM expression .)
    SPEED           reduce using rule 52 (expression -> RANDOM expression .)
    SETPS           reduce using rule 52 (expression -> RANDOM expression .)
    SETPC           reduce using rule 52 (expression -> RANDOM expression .)
    SETBC           reduce using rule 52 (expression -> RANDOM expression .)
    PENUP           reduce using rule 52 (expression -> RANDOM expression .)
    PENDOWN         reduce using rule 52 (expression -> RANDOM expression .)
    SHOW            reduce using rule 52 (expression -> RANDOM expression .)
    HIDE            reduce using rule 52 (expression -> RANDOM expression .)
    HOME            reduce using rule 52 (expression -> RANDOM expression .)
    CLEAN           reduce using rule 52 (expression -> RANDOM expression .)
    RESET           reduce using rule 52 (expression -> RANDOM expression .)
    REPEAT          reduce using rule 52 (expression -> RANDOM expression .)
    IF              reduce using rule 52 (expression -> RANDOM expression .)
    IFELSE          reduce using rule 52 (expression -> RANDOM expression .)
    MAKE            reduce using rule 52 (expression -> RANDOM expression .)
    TO              reduce using rule 52 (expression -> RANDOM expression .)
    STRING          reduce using rule 52 (expression -> RANDOM expression .)
    PRINT           reduce using rule 52 (expression -> RANDOM expression .)
    $end            reduce using rule 52 (expression -> RANDOM expression .)
    RBR             reduce using rule 52 (expression -> RANDOM expression .)
    END             reduce using rule 52 (expression -> RANDOM expression .)
    LBR             reduce using rule 52 (expression -> RANDOM expression .)
    GT              reduce using rule 52 (expression -> RANDOM expression .)
    LT              reduce using rule 52 (expression -> RANDOM expression .)
    GTE             reduce using rule 52 (expression -> RANDOM expression .)
    LTE             reduce using rule 52 (expression -> RANDOM expression .)
    EQUALS          reduce using rule 52 (expression -> RANDOM expression .)
    NE              reduce using rule 52 (expression -> RANDOM expression .)
    COMMA           reduce using rule 52 (expression -> RANDOM expression .)
    RPAR            reduce using rule 52 (expression -> RANDOM expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75

  ! TIMES           [ reduce using rule 52 (expression -> RANDOM expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> RANDOM expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> RANDOM expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> RANDOM expression .) ]
  ! POWER           [ reduce using rule 52 (expression -> RANDOM expression .) ]


state 79

    (67) name -> COLON STRING .

    TIMES           reduce using rule 67 (name -> COLON STRING .)
    DIVIDE          reduce using rule 67 (name -> COLON STRING .)
    PLUS            reduce using rule 67 (name -> COLON STRING .)
    MINUS           reduce using rule 67 (name -> COLON STRING .)
    POWER           reduce using rule 67 (name -> COLON STRING .)
    SETXY           reduce using rule 67 (name -> COLON STRING .)
    FORWARD         reduce using rule 67 (name -> COLON STRING .)
    BACK            reduce using rule 67 (name -> COLON STRING .)
    RIGHT           reduce using rule 67 (name -> COLON STRING .)
    LEFT            reduce using rule 67 (name -> COLON STRING .)
    SETX            reduce using rule 67 (name -> COLON STRING .)
    SETY            reduce using rule 67 (name -> COLON STRING .)
    SETH            reduce using rule 67 (name -> COLON STRING .)
    SPEED           reduce using rule 67 (name -> COLON STRING .)
    SETPS           reduce using rule 67 (name -> COLON STRING .)
    SETPC           reduce using rule 67 (name -> COLON STRING .)
    SETBC           reduce using rule 67 (name -> COLON STRING .)
    PENUP           reduce using rule 67 (name -> COLON STRING .)
    PENDOWN         reduce using rule 67 (name -> COLON STRING .)
    SHOW            reduce using rule 67 (name -> COLON STRING .)
    HIDE            reduce using rule 67 (name -> COLON STRING .)
    HOME            reduce using rule 67 (name -> COLON STRING .)
    CLEAN           reduce using rule 67 (name -> COLON STRING .)
    RESET           reduce using rule 67 (name -> COLON STRING .)
    REPEAT          reduce using rule 67 (name -> COLON STRING .)
    IF              reduce using rule 67 (name -> COLON STRING .)
    IFELSE          reduce using rule 67 (name -> COLON STRING .)
    MAKE            reduce using rule 67 (name -> COLON STRING .)
    TO              reduce using rule 67 (name -> COLON STRING .)
    STRING          reduce using rule 67 (name -> COLON STRING .)
    PRINT           reduce using rule 67 (name -> COLON STRING .)
    $end            reduce using rule 67 (name -> COLON STRING .)
    RBR             reduce using rule 67 (name -> COLON STRING .)
    END             reduce using rule 67 (name -> COLON STRING .)
    LBR             reduce using rule 67 (name -> COLON STRING .)
    GT              reduce using rule 67 (name -> COLON STRING .)
    LT              reduce using rule 67 (name -> COLON STRING .)
    GTE             reduce using rule 67 (name -> COLON STRING .)
    LTE             reduce using rule 67 (name -> COLON STRING .)
    EQUALS          reduce using rule 67 (name -> COLON STRING .)
    NE              reduce using rule 67 (name -> COLON STRING .)
    COMMA           reduce using rule 67 (name -> COLON STRING .)
    RPAR            reduce using rule 67 (name -> COLON STRING .)
    COLON           reduce using rule 67 (name -> COLON STRING .)


state 80

    (66) word -> QUOTE STRING .

    SETXY           reduce using rule 66 (word -> QUOTE STRING .)
    FORWARD         reduce using rule 66 (word -> QUOTE STRING .)
    BACK            reduce using rule 66 (word -> QUOTE STRING .)
    RIGHT           reduce using rule 66 (word -> QUOTE STRING .)
    LEFT            reduce using rule 66 (word -> QUOTE STRING .)
    SETX            reduce using rule 66 (word -> QUOTE STRING .)
    SETY            reduce using rule 66 (word -> QUOTE STRING .)
    SETH            reduce using rule 66 (word -> QUOTE STRING .)
    SPEED           reduce using rule 66 (word -> QUOTE STRING .)
    SETPS           reduce using rule 66 (word -> QUOTE STRING .)
    SETPC           reduce using rule 66 (word -> QUOTE STRING .)
    SETBC           reduce using rule 66 (word -> QUOTE STRING .)
    PENUP           reduce using rule 66 (word -> QUOTE STRING .)
    PENDOWN         reduce using rule 66 (word -> QUOTE STRING .)
    SHOW            reduce using rule 66 (word -> QUOTE STRING .)
    HIDE            reduce using rule 66 (word -> QUOTE STRING .)
    HOME            reduce using rule 66 (word -> QUOTE STRING .)
    CLEAN           reduce using rule 66 (word -> QUOTE STRING .)
    RESET           reduce using rule 66 (word -> QUOTE STRING .)
    REPEAT          reduce using rule 66 (word -> QUOTE STRING .)
    IF              reduce using rule 66 (word -> QUOTE STRING .)
    IFELSE          reduce using rule 66 (word -> QUOTE STRING .)
    MAKE            reduce using rule 66 (word -> QUOTE STRING .)
    TO              reduce using rule 66 (word -> QUOTE STRING .)
    STRING          reduce using rule 66 (word -> QUOTE STRING .)
    PRINT           reduce using rule 66 (word -> QUOTE STRING .)
    $end            reduce using rule 66 (word -> QUOTE STRING .)
    RBR             reduce using rule 66 (word -> QUOTE STRING .)
    END             reduce using rule 66 (word -> QUOTE STRING .)
    INT             reduce using rule 66 (word -> QUOTE STRING .)
    FLOAT           reduce using rule 66 (word -> QUOTE STRING .)
    REPCOUNT        reduce using rule 66 (word -> QUOTE STRING .)
    LPAR            reduce using rule 66 (word -> QUOTE STRING .)
    MINUS           reduce using rule 66 (word -> QUOTE STRING .)
    RANDOM          reduce using rule 66 (word -> QUOTE STRING .)
    COLON           reduce using rule 66 (word -> QUOTE STRING .)


state 81

    (30) repeat_statement -> REPEAT expression LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement_list                 shift and go to state 106
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 82

    (31) if_statement -> IF condition LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement_list                 shift and go to state 107
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 83

    (60) condition -> expression GT . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 108
    name                           shift and go to state 42

state 84

    (61) condition -> expression LT . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 109
    name                           shift and go to state 42

state 85

    (62) condition -> expression GTE . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 110
    name                           shift and go to state 42

state 86

    (63) condition -> expression LTE . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 111
    name                           shift and go to state 42

state 87

    (64) condition -> expression EQUALS . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 112
    name                           shift and go to state 42

state 88

    (65) condition -> expression NE . expression
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 113
    name                           shift and go to state 42

state 89

    (32) ifelse_statement -> IFELSE condition LBR . statement_list RBR LBR statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement_list                 shift and go to state 114
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 90

    (33) variable_declaration -> MAKE word expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    SETXY           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    FORWARD         reduce using rule 33 (variable_declaration -> MAKE word expression .)
    BACK            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    RIGHT           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    LEFT            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    SETX            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    SETY            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    SETH            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    SPEED           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    SETPS           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    SETPC           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    SETBC           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    PENUP           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    PENDOWN         reduce using rule 33 (variable_declaration -> MAKE word expression .)
    SHOW            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    HIDE            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    HOME            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    CLEAN           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    RESET           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    REPEAT          reduce using rule 33 (variable_declaration -> MAKE word expression .)
    IF              reduce using rule 33 (variable_declaration -> MAKE word expression .)
    IFELSE          reduce using rule 33 (variable_declaration -> MAKE word expression .)
    MAKE            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    TO              reduce using rule 33 (variable_declaration -> MAKE word expression .)
    STRING          reduce using rule 33 (variable_declaration -> MAKE word expression .)
    PRINT           reduce using rule 33 (variable_declaration -> MAKE word expression .)
    $end            reduce using rule 33 (variable_declaration -> MAKE word expression .)
    RBR             reduce using rule 33 (variable_declaration -> MAKE word expression .)
    END             reduce using rule 33 (variable_declaration -> MAKE word expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 91

    (34) procedure_definition -> TO STRING parameter_list . statement_list END
    (35) parameter_list -> parameter_list . parameter
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (37) parameter -> . name
    (38) parameter -> . empty
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (67) name -> . COLON STRING
    (68) empty -> .
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for SETXY resolved as shift
  ! shift/reduce conflict for FORWARD resolved as shift
  ! shift/reduce conflict for BACK resolved as shift
  ! shift/reduce conflict for RIGHT resolved as shift
  ! shift/reduce conflict for LEFT resolved as shift
  ! shift/reduce conflict for SETX resolved as shift
  ! shift/reduce conflict for SETY resolved as shift
  ! shift/reduce conflict for SETH resolved as shift
  ! shift/reduce conflict for SPEED resolved as shift
  ! shift/reduce conflict for SETPS resolved as shift
  ! shift/reduce conflict for SETPC resolved as shift
  ! shift/reduce conflict for SETBC resolved as shift
  ! shift/reduce conflict for PENUP resolved as shift
  ! shift/reduce conflict for PENDOWN resolved as shift
  ! shift/reduce conflict for SHOW resolved as shift
  ! shift/reduce conflict for HIDE resolved as shift
  ! shift/reduce conflict for HOME resolved as shift
  ! shift/reduce conflict for CLEAN resolved as shift
  ! shift/reduce conflict for RESET resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for IFELSE resolved as shift
  ! shift/reduce conflict for MAKE resolved as shift
  ! shift/reduce conflict for TO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    COLON           shift and go to state 47
    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

  ! COLON           [ reduce using rule 68 (empty -> .) ]
  ! SETXY           [ reduce using rule 68 (empty -> .) ]
  ! FORWARD         [ reduce using rule 68 (empty -> .) ]
  ! BACK            [ reduce using rule 68 (empty -> .) ]
  ! RIGHT           [ reduce using rule 68 (empty -> .) ]
  ! LEFT            [ reduce using rule 68 (empty -> .) ]
  ! SETX            [ reduce using rule 68 (empty -> .) ]
  ! SETY            [ reduce using rule 68 (empty -> .) ]
  ! SETH            [ reduce using rule 68 (empty -> .) ]
  ! SPEED           [ reduce using rule 68 (empty -> .) ]
  ! SETPS           [ reduce using rule 68 (empty -> .) ]
  ! SETPC           [ reduce using rule 68 (empty -> .) ]
  ! SETBC           [ reduce using rule 68 (empty -> .) ]
  ! PENUP           [ reduce using rule 68 (empty -> .) ]
  ! PENDOWN         [ reduce using rule 68 (empty -> .) ]
  ! SHOW            [ reduce using rule 68 (empty -> .) ]
  ! HIDE            [ reduce using rule 68 (empty -> .) ]
  ! HOME            [ reduce using rule 68 (empty -> .) ]
  ! CLEAN           [ reduce using rule 68 (empty -> .) ]
  ! RESET           [ reduce using rule 68 (empty -> .) ]
  ! REPEAT          [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! IFELSE          [ reduce using rule 68 (empty -> .) ]
  ! MAKE            [ reduce using rule 68 (empty -> .) ]
  ! TO              [ reduce using rule 68 (empty -> .) ]
  ! STRING          [ reduce using rule 68 (empty -> .) ]
  ! PRINT           [ reduce using rule 68 (empty -> .) ]

    statement_list                 shift and go to state 115
    parameter                      shift and go to state 116
    statement                      shift and go to state 2
    name                           shift and go to state 93
    empty                          shift and go to state 94
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 92

    (36) parameter_list -> parameter .

    COLON           reduce using rule 36 (parameter_list -> parameter .)
    SETXY           reduce using rule 36 (parameter_list -> parameter .)
    FORWARD         reduce using rule 36 (parameter_list -> parameter .)
    BACK            reduce using rule 36 (parameter_list -> parameter .)
    RIGHT           reduce using rule 36 (parameter_list -> parameter .)
    LEFT            reduce using rule 36 (parameter_list -> parameter .)
    SETX            reduce using rule 36 (parameter_list -> parameter .)
    SETY            reduce using rule 36 (parameter_list -> parameter .)
    SETH            reduce using rule 36 (parameter_list -> parameter .)
    SPEED           reduce using rule 36 (parameter_list -> parameter .)
    SETPS           reduce using rule 36 (parameter_list -> parameter .)
    SETPC           reduce using rule 36 (parameter_list -> parameter .)
    SETBC           reduce using rule 36 (parameter_list -> parameter .)
    PENUP           reduce using rule 36 (parameter_list -> parameter .)
    PENDOWN         reduce using rule 36 (parameter_list -> parameter .)
    SHOW            reduce using rule 36 (parameter_list -> parameter .)
    HIDE            reduce using rule 36 (parameter_list -> parameter .)
    HOME            reduce using rule 36 (parameter_list -> parameter .)
    CLEAN           reduce using rule 36 (parameter_list -> parameter .)
    RESET           reduce using rule 36 (parameter_list -> parameter .)
    REPEAT          reduce using rule 36 (parameter_list -> parameter .)
    IF              reduce using rule 36 (parameter_list -> parameter .)
    IFELSE          reduce using rule 36 (parameter_list -> parameter .)
    MAKE            reduce using rule 36 (parameter_list -> parameter .)
    TO              reduce using rule 36 (parameter_list -> parameter .)
    STRING          reduce using rule 36 (parameter_list -> parameter .)
    PRINT           reduce using rule 36 (parameter_list -> parameter .)


state 93

    (37) parameter -> name .

    COLON           reduce using rule 37 (parameter -> name .)
    SETXY           reduce using rule 37 (parameter -> name .)
    FORWARD         reduce using rule 37 (parameter -> name .)
    BACK            reduce using rule 37 (parameter -> name .)
    RIGHT           reduce using rule 37 (parameter -> name .)
    LEFT            reduce using rule 37 (parameter -> name .)
    SETX            reduce using rule 37 (parameter -> name .)
    SETY            reduce using rule 37 (parameter -> name .)
    SETH            reduce using rule 37 (parameter -> name .)
    SPEED           reduce using rule 37 (parameter -> name .)
    SETPS           reduce using rule 37 (parameter -> name .)
    SETPC           reduce using rule 37 (parameter -> name .)
    SETBC           reduce using rule 37 (parameter -> name .)
    PENUP           reduce using rule 37 (parameter -> name .)
    PENDOWN         reduce using rule 37 (parameter -> name .)
    SHOW            reduce using rule 37 (parameter -> name .)
    HIDE            reduce using rule 37 (parameter -> name .)
    HOME            reduce using rule 37 (parameter -> name .)
    CLEAN           reduce using rule 37 (parameter -> name .)
    RESET           reduce using rule 37 (parameter -> name .)
    REPEAT          reduce using rule 37 (parameter -> name .)
    IF              reduce using rule 37 (parameter -> name .)
    IFELSE          reduce using rule 37 (parameter -> name .)
    MAKE            reduce using rule 37 (parameter -> name .)
    TO              reduce using rule 37 (parameter -> name .)
    STRING          reduce using rule 37 (parameter -> name .)
    PRINT           reduce using rule 37 (parameter -> name .)


state 94

    (38) parameter -> empty .

    COLON           reduce using rule 38 (parameter -> empty .)
    SETXY           reduce using rule 38 (parameter -> empty .)
    FORWARD         reduce using rule 38 (parameter -> empty .)
    BACK            reduce using rule 38 (parameter -> empty .)
    RIGHT           reduce using rule 38 (parameter -> empty .)
    LEFT            reduce using rule 38 (parameter -> empty .)
    SETX            reduce using rule 38 (parameter -> empty .)
    SETY            reduce using rule 38 (parameter -> empty .)
    SETH            reduce using rule 38 (parameter -> empty .)
    SPEED           reduce using rule 38 (parameter -> empty .)
    SETPS           reduce using rule 38 (parameter -> empty .)
    SETPC           reduce using rule 38 (parameter -> empty .)
    SETBC           reduce using rule 38 (parameter -> empty .)
    PENUP           reduce using rule 38 (parameter -> empty .)
    PENDOWN         reduce using rule 38 (parameter -> empty .)
    SHOW            reduce using rule 38 (parameter -> empty .)
    HIDE            reduce using rule 38 (parameter -> empty .)
    HOME            reduce using rule 38 (parameter -> empty .)
    CLEAN           reduce using rule 38 (parameter -> empty .)
    RESET           reduce using rule 38 (parameter -> empty .)
    REPEAT          reduce using rule 38 (parameter -> empty .)
    IF              reduce using rule 38 (parameter -> empty .)
    IFELSE          reduce using rule 38 (parameter -> empty .)
    MAKE            reduce using rule 38 (parameter -> empty .)
    TO              reduce using rule 38 (parameter -> empty .)
    STRING          reduce using rule 38 (parameter -> empty .)
    PRINT           reduce using rule 38 (parameter -> empty .)


state 95

    (39) procedure_call -> STRING LBR expression_list . RBR
    (40) expression_list -> expression_list . COMMA expression_elem

    RBR             shift and go to state 117
    COMMA           shift and go to state 118


state 96

    (41) expression_list -> expression_elem .

    RBR             reduce using rule 41 (expression_list -> expression_elem .)
    COMMA           reduce using rule 41 (expression_list -> expression_elem .)


state 97

    (42) expression_elem -> expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    RBR             reduce using rule 42 (expression_elem -> expression .)
    COMMA           reduce using rule 42 (expression_elem -> expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 98

    (43) expression_elem -> empty .

    RBR             reduce using rule 43 (expression_elem -> empty .)
    COMMA           reduce using rule 43 (expression_elem -> empty .)


state 99

    (11) turtle_instruction -> SETXY LBR expression COMMA . expression RBR
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    COLON           shift and go to state 47

    expression                     shift and go to state 119
    name                           shift and go to state 42

state 100

    (53) expression -> expression TIMES expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    TIMES           reduce using rule 53 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 53 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 53 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 53 (expression -> expression TIMES expression .)
    SETXY           reduce using rule 53 (expression -> expression TIMES expression .)
    FORWARD         reduce using rule 53 (expression -> expression TIMES expression .)
    BACK            reduce using rule 53 (expression -> expression TIMES expression .)
    RIGHT           reduce using rule 53 (expression -> expression TIMES expression .)
    LEFT            reduce using rule 53 (expression -> expression TIMES expression .)
    SETX            reduce using rule 53 (expression -> expression TIMES expression .)
    SETY            reduce using rule 53 (expression -> expression TIMES expression .)
    SETH            reduce using rule 53 (expression -> expression TIMES expression .)
    SPEED           reduce using rule 53 (expression -> expression TIMES expression .)
    SETPS           reduce using rule 53 (expression -> expression TIMES expression .)
    SETPC           reduce using rule 53 (expression -> expression TIMES expression .)
    SETBC           reduce using rule 53 (expression -> expression TIMES expression .)
    PENUP           reduce using rule 53 (expression -> expression TIMES expression .)
    PENDOWN         reduce using rule 53 (expression -> expression TIMES expression .)
    SHOW            reduce using rule 53 (expression -> expression TIMES expression .)
    HIDE            reduce using rule 53 (expression -> expression TIMES expression .)
    HOME            reduce using rule 53 (expression -> expression TIMES expression .)
    CLEAN           reduce using rule 53 (expression -> expression TIMES expression .)
    RESET           reduce using rule 53 (expression -> expression TIMES expression .)
    REPEAT          reduce using rule 53 (expression -> expression TIMES expression .)
    IF              reduce using rule 53 (expression -> expression TIMES expression .)
    IFELSE          reduce using rule 53 (expression -> expression TIMES expression .)
    MAKE            reduce using rule 53 (expression -> expression TIMES expression .)
    TO              reduce using rule 53 (expression -> expression TIMES expression .)
    STRING          reduce using rule 53 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 53 (expression -> expression TIMES expression .)
    $end            reduce using rule 53 (expression -> expression TIMES expression .)
    RBR             reduce using rule 53 (expression -> expression TIMES expression .)
    END             reduce using rule 53 (expression -> expression TIMES expression .)
    LBR             reduce using rule 53 (expression -> expression TIMES expression .)
    GT              reduce using rule 53 (expression -> expression TIMES expression .)
    LT              reduce using rule 53 (expression -> expression TIMES expression .)
    GTE             reduce using rule 53 (expression -> expression TIMES expression .)
    LTE             reduce using rule 53 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 53 (expression -> expression TIMES expression .)
    NE              reduce using rule 53 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 53 (expression -> expression TIMES expression .)
    RPAR            reduce using rule 53 (expression -> expression TIMES expression .)
    POWER           shift and go to state 75

  ! POWER           [ reduce using rule 53 (expression -> expression TIMES expression .) ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 72 ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 101

    (54) expression -> expression DIVIDE expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    TIMES           reduce using rule 54 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 54 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 54 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 54 (expression -> expression DIVIDE expression .)
    SETXY           reduce using rule 54 (expression -> expression DIVIDE expression .)
    FORWARD         reduce using rule 54 (expression -> expression DIVIDE expression .)
    BACK            reduce using rule 54 (expression -> expression DIVIDE expression .)
    RIGHT           reduce using rule 54 (expression -> expression DIVIDE expression .)
    LEFT            reduce using rule 54 (expression -> expression DIVIDE expression .)
    SETX            reduce using rule 54 (expression -> expression DIVIDE expression .)
    SETY            reduce using rule 54 (expression -> expression DIVIDE expression .)
    SETH            reduce using rule 54 (expression -> expression DIVIDE expression .)
    SPEED           reduce using rule 54 (expression -> expression DIVIDE expression .)
    SETPS           reduce using rule 54 (expression -> expression DIVIDE expression .)
    SETPC           reduce using rule 54 (expression -> expression DIVIDE expression .)
    SETBC           reduce using rule 54 (expression -> expression DIVIDE expression .)
    PENUP           reduce using rule 54 (expression -> expression DIVIDE expression .)
    PENDOWN         reduce using rule 54 (expression -> expression DIVIDE expression .)
    SHOW            reduce using rule 54 (expression -> expression DIVIDE expression .)
    HIDE            reduce using rule 54 (expression -> expression DIVIDE expression .)
    HOME            reduce using rule 54 (expression -> expression DIVIDE expression .)
    CLEAN           reduce using rule 54 (expression -> expression DIVIDE expression .)
    RESET           reduce using rule 54 (expression -> expression DIVIDE expression .)
    REPEAT          reduce using rule 54 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 54 (expression -> expression DIVIDE expression .)
    IFELSE          reduce using rule 54 (expression -> expression DIVIDE expression .)
    MAKE            reduce using rule 54 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 54 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 54 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 54 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 54 (expression -> expression DIVIDE expression .)
    RBR             reduce using rule 54 (expression -> expression DIVIDE expression .)
    END             reduce using rule 54 (expression -> expression DIVIDE expression .)
    LBR             reduce using rule 54 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 54 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 54 (expression -> expression DIVIDE expression .)
    GTE             reduce using rule 54 (expression -> expression DIVIDE expression .)
    LTE             reduce using rule 54 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 54 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 54 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 54 (expression -> expression DIVIDE expression .)
    RPAR            reduce using rule 54 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 75

  ! POWER           [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 72 ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 102

    (55) expression -> expression PLUS expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    PLUS            reduce using rule 55 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 55 (expression -> expression PLUS expression .)
    SETXY           reduce using rule 55 (expression -> expression PLUS expression .)
    FORWARD         reduce using rule 55 (expression -> expression PLUS expression .)
    BACK            reduce using rule 55 (expression -> expression PLUS expression .)
    RIGHT           reduce using rule 55 (expression -> expression PLUS expression .)
    LEFT            reduce using rule 55 (expression -> expression PLUS expression .)
    SETX            reduce using rule 55 (expression -> expression PLUS expression .)
    SETY            reduce using rule 55 (expression -> expression PLUS expression .)
    SETH            reduce using rule 55 (expression -> expression PLUS expression .)
    SPEED           reduce using rule 55 (expression -> expression PLUS expression .)
    SETPS           reduce using rule 55 (expression -> expression PLUS expression .)
    SETPC           reduce using rule 55 (expression -> expression PLUS expression .)
    SETBC           reduce using rule 55 (expression -> expression PLUS expression .)
    PENUP           reduce using rule 55 (expression -> expression PLUS expression .)
    PENDOWN         reduce using rule 55 (expression -> expression PLUS expression .)
    SHOW            reduce using rule 55 (expression -> expression PLUS expression .)
    HIDE            reduce using rule 55 (expression -> expression PLUS expression .)
    HOME            reduce using rule 55 (expression -> expression PLUS expression .)
    CLEAN           reduce using rule 55 (expression -> expression PLUS expression .)
    RESET           reduce using rule 55 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 55 (expression -> expression PLUS expression .)
    IF              reduce using rule 55 (expression -> expression PLUS expression .)
    IFELSE          reduce using rule 55 (expression -> expression PLUS expression .)
    MAKE            reduce using rule 55 (expression -> expression PLUS expression .)
    TO              reduce using rule 55 (expression -> expression PLUS expression .)
    STRING          reduce using rule 55 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 55 (expression -> expression PLUS expression .)
    $end            reduce using rule 55 (expression -> expression PLUS expression .)
    RBR             reduce using rule 55 (expression -> expression PLUS expression .)
    END             reduce using rule 55 (expression -> expression PLUS expression .)
    LBR             reduce using rule 55 (expression -> expression PLUS expression .)
    GT              reduce using rule 55 (expression -> expression PLUS expression .)
    LT              reduce using rule 55 (expression -> expression PLUS expression .)
    GTE             reduce using rule 55 (expression -> expression PLUS expression .)
    LTE             reduce using rule 55 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 55 (expression -> expression PLUS expression .)
    NE              reduce using rule 55 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 55 (expression -> expression PLUS expression .)
    RPAR            reduce using rule 55 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    POWER           shift and go to state 75

  ! TIMES           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 103

    (56) expression -> expression MINUS expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    PLUS            reduce using rule 56 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 56 (expression -> expression MINUS expression .)
    SETXY           reduce using rule 56 (expression -> expression MINUS expression .)
    FORWARD         reduce using rule 56 (expression -> expression MINUS expression .)
    BACK            reduce using rule 56 (expression -> expression MINUS expression .)
    RIGHT           reduce using rule 56 (expression -> expression MINUS expression .)
    LEFT            reduce using rule 56 (expression -> expression MINUS expression .)
    SETX            reduce using rule 56 (expression -> expression MINUS expression .)
    SETY            reduce using rule 56 (expression -> expression MINUS expression .)
    SETH            reduce using rule 56 (expression -> expression MINUS expression .)
    SPEED           reduce using rule 56 (expression -> expression MINUS expression .)
    SETPS           reduce using rule 56 (expression -> expression MINUS expression .)
    SETPC           reduce using rule 56 (expression -> expression MINUS expression .)
    SETBC           reduce using rule 56 (expression -> expression MINUS expression .)
    PENUP           reduce using rule 56 (expression -> expression MINUS expression .)
    PENDOWN         reduce using rule 56 (expression -> expression MINUS expression .)
    SHOW            reduce using rule 56 (expression -> expression MINUS expression .)
    HIDE            reduce using rule 56 (expression -> expression MINUS expression .)
    HOME            reduce using rule 56 (expression -> expression MINUS expression .)
    CLEAN           reduce using rule 56 (expression -> expression MINUS expression .)
    RESET           reduce using rule 56 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 56 (expression -> expression MINUS expression .)
    IF              reduce using rule 56 (expression -> expression MINUS expression .)
    IFELSE          reduce using rule 56 (expression -> expression MINUS expression .)
    MAKE            reduce using rule 56 (expression -> expression MINUS expression .)
    TO              reduce using rule 56 (expression -> expression MINUS expression .)
    STRING          reduce using rule 56 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 56 (expression -> expression MINUS expression .)
    $end            reduce using rule 56 (expression -> expression MINUS expression .)
    RBR             reduce using rule 56 (expression -> expression MINUS expression .)
    END             reduce using rule 56 (expression -> expression MINUS expression .)
    LBR             reduce using rule 56 (expression -> expression MINUS expression .)
    GT              reduce using rule 56 (expression -> expression MINUS expression .)
    LT              reduce using rule 56 (expression -> expression MINUS expression .)
    GTE             reduce using rule 56 (expression -> expression MINUS expression .)
    LTE             reduce using rule 56 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 56 (expression -> expression MINUS expression .)
    NE              reduce using rule 56 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 56 (expression -> expression MINUS expression .)
    RPAR            reduce using rule 56 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    POWER           shift and go to state 75

  ! TIMES           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 104

    (57) expression -> expression POWER expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    TIMES           reduce using rule 57 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 57 (expression -> expression POWER expression .)
    PLUS            reduce using rule 57 (expression -> expression POWER expression .)
    MINUS           reduce using rule 57 (expression -> expression POWER expression .)
    POWER           reduce using rule 57 (expression -> expression POWER expression .)
    SETXY           reduce using rule 57 (expression -> expression POWER expression .)
    FORWARD         reduce using rule 57 (expression -> expression POWER expression .)
    BACK            reduce using rule 57 (expression -> expression POWER expression .)
    RIGHT           reduce using rule 57 (expression -> expression POWER expression .)
    LEFT            reduce using rule 57 (expression -> expression POWER expression .)
    SETX            reduce using rule 57 (expression -> expression POWER expression .)
    SETY            reduce using rule 57 (expression -> expression POWER expression .)
    SETH            reduce using rule 57 (expression -> expression POWER expression .)
    SPEED           reduce using rule 57 (expression -> expression POWER expression .)
    SETPS           reduce using rule 57 (expression -> expression POWER expression .)
    SETPC           reduce using rule 57 (expression -> expression POWER expression .)
    SETBC           reduce using rule 57 (expression -> expression POWER expression .)
    PENUP           reduce using rule 57 (expression -> expression POWER expression .)
    PENDOWN         reduce using rule 57 (expression -> expression POWER expression .)
    SHOW            reduce using rule 57 (expression -> expression POWER expression .)
    HIDE            reduce using rule 57 (expression -> expression POWER expression .)
    HOME            reduce using rule 57 (expression -> expression POWER expression .)
    CLEAN           reduce using rule 57 (expression -> expression POWER expression .)
    RESET           reduce using rule 57 (expression -> expression POWER expression .)
    REPEAT          reduce using rule 57 (expression -> expression POWER expression .)
    IF              reduce using rule 57 (expression -> expression POWER expression .)
    IFELSE          reduce using rule 57 (expression -> expression POWER expression .)
    MAKE            reduce using rule 57 (expression -> expression POWER expression .)
    TO              reduce using rule 57 (expression -> expression POWER expression .)
    STRING          reduce using rule 57 (expression -> expression POWER expression .)
    PRINT           reduce using rule 57 (expression -> expression POWER expression .)
    $end            reduce using rule 57 (expression -> expression POWER expression .)
    RBR             reduce using rule 57 (expression -> expression POWER expression .)
    END             reduce using rule 57 (expression -> expression POWER expression .)
    LBR             reduce using rule 57 (expression -> expression POWER expression .)
    GT              reduce using rule 57 (expression -> expression POWER expression .)
    LT              reduce using rule 57 (expression -> expression POWER expression .)
    GTE             reduce using rule 57 (expression -> expression POWER expression .)
    LTE             reduce using rule 57 (expression -> expression POWER expression .)
    EQUALS          reduce using rule 57 (expression -> expression POWER expression .)
    NE              reduce using rule 57 (expression -> expression POWER expression .)
    COMMA           reduce using rule 57 (expression -> expression POWER expression .)
    RPAR            reduce using rule 57 (expression -> expression POWER expression .)

  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 72 ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! POWER           [ shift and go to state 75 ]


state 105

    (50) expression -> LPAR expression RPAR .

    TIMES           reduce using rule 50 (expression -> LPAR expression RPAR .)
    DIVIDE          reduce using rule 50 (expression -> LPAR expression RPAR .)
    PLUS            reduce using rule 50 (expression -> LPAR expression RPAR .)
    MINUS           reduce using rule 50 (expression -> LPAR expression RPAR .)
    POWER           reduce using rule 50 (expression -> LPAR expression RPAR .)
    SETXY           reduce using rule 50 (expression -> LPAR expression RPAR .)
    FORWARD         reduce using rule 50 (expression -> LPAR expression RPAR .)
    BACK            reduce using rule 50 (expression -> LPAR expression RPAR .)
    RIGHT           reduce using rule 50 (expression -> LPAR expression RPAR .)
    LEFT            reduce using rule 50 (expression -> LPAR expression RPAR .)
    SETX            reduce using rule 50 (expression -> LPAR expression RPAR .)
    SETY            reduce using rule 50 (expression -> LPAR expression RPAR .)
    SETH            reduce using rule 50 (expression -> LPAR expression RPAR .)
    SPEED           reduce using rule 50 (expression -> LPAR expression RPAR .)
    SETPS           reduce using rule 50 (expression -> LPAR expression RPAR .)
    SETPC           reduce using rule 50 (expression -> LPAR expression RPAR .)
    SETBC           reduce using rule 50 (expression -> LPAR expression RPAR .)
    PENUP           reduce using rule 50 (expression -> LPAR expression RPAR .)
    PENDOWN         reduce using rule 50 (expression -> LPAR expression RPAR .)
    SHOW            reduce using rule 50 (expression -> LPAR expression RPAR .)
    HIDE            reduce using rule 50 (expression -> LPAR expression RPAR .)
    HOME            reduce using rule 50 (expression -> LPAR expression RPAR .)
    CLEAN           reduce using rule 50 (expression -> LPAR expression RPAR .)
    RESET           reduce using rule 50 (expression -> LPAR expression RPAR .)
    REPEAT          reduce using rule 50 (expression -> LPAR expression RPAR .)
    IF              reduce using rule 50 (expression -> LPAR expression RPAR .)
    IFELSE          reduce using rule 50 (expression -> LPAR expression RPAR .)
    MAKE            reduce using rule 50 (expression -> LPAR expression RPAR .)
    TO              reduce using rule 50 (expression -> LPAR expression RPAR .)
    STRING          reduce using rule 50 (expression -> LPAR expression RPAR .)
    PRINT           reduce using rule 50 (expression -> LPAR expression RPAR .)
    $end            reduce using rule 50 (expression -> LPAR expression RPAR .)
    RBR             reduce using rule 50 (expression -> LPAR expression RPAR .)
    END             reduce using rule 50 (expression -> LPAR expression RPAR .)
    LBR             reduce using rule 50 (expression -> LPAR expression RPAR .)
    GT              reduce using rule 50 (expression -> LPAR expression RPAR .)
    LT              reduce using rule 50 (expression -> LPAR expression RPAR .)
    GTE             reduce using rule 50 (expression -> LPAR expression RPAR .)
    LTE             reduce using rule 50 (expression -> LPAR expression RPAR .)
    EQUALS          reduce using rule 50 (expression -> LPAR expression RPAR .)
    NE              reduce using rule 50 (expression -> LPAR expression RPAR .)
    COMMA           reduce using rule 50 (expression -> LPAR expression RPAR .)
    RPAR            reduce using rule 50 (expression -> LPAR expression RPAR .)


state 106

    (30) repeat_statement -> REPEAT expression LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    RBR             shift and go to state 120
    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement                      shift and go to state 37
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 107

    (31) if_statement -> IF condition LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    RBR             shift and go to state 121
    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement                      shift and go to state 37
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 108

    (60) condition -> expression GT expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    LBR             reduce using rule 60 (condition -> expression GT expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 109

    (61) condition -> expression LT expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    LBR             reduce using rule 61 (condition -> expression LT expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 110

    (62) condition -> expression GTE expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    LBR             reduce using rule 62 (condition -> expression GTE expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 111

    (63) condition -> expression LTE expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    LBR             reduce using rule 63 (condition -> expression LTE expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 112

    (64) condition -> expression EQUALS expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    LBR             reduce using rule 64 (condition -> expression EQUALS expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 113

    (65) condition -> expression NE expression .
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    LBR             reduce using rule 65 (condition -> expression NE expression .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 114

    (32) ifelse_statement -> IFELSE condition LBR statement_list . RBR LBR statement_list RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    RBR             shift and go to state 122
    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement                      shift and go to state 37
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 115

    (34) procedure_definition -> TO STRING parameter_list statement_list . END
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    END             shift and go to state 123
    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement                      shift and go to state 37
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 116

    (35) parameter_list -> parameter_list parameter .

    COLON           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SETXY           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    FORWARD         reduce using rule 35 (parameter_list -> parameter_list parameter .)
    BACK            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    RIGHT           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    LEFT            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SETX            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SETY            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SETH            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SPEED           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SETPS           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SETPC           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SETBC           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    PENUP           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    PENDOWN         reduce using rule 35 (parameter_list -> parameter_list parameter .)
    SHOW            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    HIDE            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    HOME            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    CLEAN           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    RESET           reduce using rule 35 (parameter_list -> parameter_list parameter .)
    REPEAT          reduce using rule 35 (parameter_list -> parameter_list parameter .)
    IF              reduce using rule 35 (parameter_list -> parameter_list parameter .)
    IFELSE          reduce using rule 35 (parameter_list -> parameter_list parameter .)
    MAKE            reduce using rule 35 (parameter_list -> parameter_list parameter .)
    TO              reduce using rule 35 (parameter_list -> parameter_list parameter .)
    STRING          reduce using rule 35 (parameter_list -> parameter_list parameter .)
    PRINT           reduce using rule 35 (parameter_list -> parameter_list parameter .)


state 117

    (39) procedure_call -> STRING LBR expression_list RBR .

    SETXY           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    FORWARD         reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    BACK            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    RIGHT           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    LEFT            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    SETX            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    SETY            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    SETH            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    SPEED           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    SETPS           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    SETPC           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    SETBC           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    PENUP           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    PENDOWN         reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    SHOW            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    HIDE            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    HOME            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    CLEAN           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    RESET           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    REPEAT          reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    IF              reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    IFELSE          reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    MAKE            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    TO              reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    STRING          reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    PRINT           reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    $end            reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    RBR             reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)
    END             reduce using rule 39 (procedure_call -> STRING LBR expression_list RBR .)


state 118

    (40) expression_list -> expression_list COMMA . expression_elem
    (42) expression_elem -> . expression
    (43) expression_elem -> . empty
    (46) expression -> . INT
    (47) expression -> . FLOAT
    (48) expression -> . name
    (49) expression -> . REPCOUNT
    (50) expression -> . LPAR expression RPAR
    (51) expression -> . MINUS expression
    (52) expression -> . RANDOM expression
    (53) expression -> . expression TIMES expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression POWER expression
    (68) empty -> .
    (67) name -> . COLON STRING

    INT             shift and go to state 40
    FLOAT           shift and go to state 41
    REPCOUNT        shift and go to state 43
    LPAR            shift and go to state 44
    MINUS           shift and go to state 45
    RANDOM          shift and go to state 46
    RBR             reduce using rule 68 (empty -> .)
    COMMA           reduce using rule 68 (empty -> .)
    COLON           shift and go to state 47

    expression_elem                shift and go to state 124
    expression                     shift and go to state 97
    empty                          shift and go to state 98
    name                           shift and go to state 42

state 119

    (11) turtle_instruction -> SETXY LBR expression COMMA expression . RBR
    (53) expression -> expression . TIMES expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . POWER expression

    RBR             shift and go to state 125
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    POWER           shift and go to state 75


state 120

    (30) repeat_statement -> REPEAT expression LBR statement_list RBR .

    SETXY           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    FORWARD         reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    BACK            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RIGHT           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    LEFT            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETX            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETY            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETH            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SPEED           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETPS           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETPC           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETBC           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PENUP           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PENDOWN         reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SHOW            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    HIDE            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    HOME            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    CLEAN           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RESET           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    REPEAT          reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    IF              reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    IFELSE          reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    MAKE            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    TO              reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    STRING          reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PRINT           reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    $end            reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RBR             reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    END             reduce using rule 30 (repeat_statement -> REPEAT expression LBR statement_list RBR .)


state 121

    (31) if_statement -> IF condition LBR statement_list RBR .

    SETXY           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    FORWARD         reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    BACK            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    RIGHT           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    LEFT            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    SETX            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    SETY            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    SETH            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    SPEED           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    SETPS           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    SETPC           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    SETBC           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    PENUP           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    PENDOWN         reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    SHOW            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    HIDE            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    HOME            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    CLEAN           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    RESET           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    REPEAT          reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    IF              reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    IFELSE          reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    MAKE            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    TO              reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    STRING          reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    PRINT           reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    $end            reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    RBR             reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)
    END             reduce using rule 31 (if_statement -> IF condition LBR statement_list RBR .)


state 122

    (32) ifelse_statement -> IFELSE condition LBR statement_list RBR . LBR statement_list RBR

    LBR             shift and go to state 126


state 123

    (34) procedure_definition -> TO STRING parameter_list statement_list END .

    SETXY           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    FORWARD         reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    BACK            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    RIGHT           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    LEFT            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    SETX            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    SETY            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    SETH            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    SPEED           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    SETPS           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    SETPC           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    SETBC           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    PENUP           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    PENDOWN         reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    SHOW            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    HIDE            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    HOME            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    CLEAN           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    RESET           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    REPEAT          reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    IF              reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    IFELSE          reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    MAKE            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    TO              reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    STRING          reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    PRINT           reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    $end            reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    RBR             reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)
    END             reduce using rule 34 (procedure_definition -> TO STRING parameter_list statement_list END .)


state 124

    (40) expression_list -> expression_list COMMA expression_elem .

    RBR             reduce using rule 40 (expression_list -> expression_list COMMA expression_elem .)
    COMMA           reduce using rule 40 (expression_list -> expression_list COMMA expression_elem .)


state 125

    (11) turtle_instruction -> SETXY LBR expression COMMA expression RBR .

    SETXY           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    FORWARD         reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    BACK            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    RIGHT           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    LEFT            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETX            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETY            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETH            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SPEED           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETPS           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETPC           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SETBC           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    PENUP           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    PENDOWN         reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    SHOW            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    HIDE            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    HOME            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    CLEAN           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    RESET           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    REPEAT          reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    IF              reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    IFELSE          reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    MAKE            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    TO              reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    STRING          reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    PRINT           reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    $end            reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    RBR             reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)
    END             reduce using rule 11 (turtle_instruction -> SETXY LBR expression COMMA expression RBR .)


state 126

    (32) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement_list                 shift and go to state 127
    statement                      shift and go to state 2
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 127

    (32) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . turtle_instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . variable_declaration
    (8) statement -> . procedure_definition
    (9) statement -> . procedure_call
    (10) statement -> . print_statement
    (11) turtle_instruction -> . SETXY LBR expression COMMA expression RBR
    (12) turtle_instruction -> . FORWARD expression
    (13) turtle_instruction -> . BACK expression
    (14) turtle_instruction -> . RIGHT expression
    (15) turtle_instruction -> . LEFT expression
    (16) turtle_instruction -> . SETX expression
    (17) turtle_instruction -> . SETY expression
    (18) turtle_instruction -> . SETH expression
    (19) turtle_instruction -> . SPEED expression
    (20) turtle_instruction -> . SETPS expression
    (21) turtle_instruction -> . SETPC word
    (22) turtle_instruction -> . SETBC word
    (23) turtle_instruction -> . PENUP
    (24) turtle_instruction -> . PENDOWN
    (25) turtle_instruction -> . SHOW
    (26) turtle_instruction -> . HIDE
    (27) turtle_instruction -> . HOME
    (28) turtle_instruction -> . CLEAN
    (29) turtle_instruction -> . RESET
    (30) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (31) if_statement -> . IF condition LBR statement_list RBR
    (32) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (33) variable_declaration -> . MAKE word expression
    (34) procedure_definition -> . TO STRING parameter_list statement_list END
    (39) procedure_call -> . STRING LBR expression_list RBR
    (44) print_statement -> . PRINT word
    (45) print_statement -> . PRINT expression

    RBR             shift and go to state 128
    SETXY           shift and go to state 11
    FORWARD         shift and go to state 12
    BACK            shift and go to state 13
    RIGHT           shift and go to state 14
    LEFT            shift and go to state 15
    SETX            shift and go to state 16
    SETY            shift and go to state 17
    SETH            shift and go to state 18
    SPEED           shift and go to state 19
    SETPS           shift and go to state 20
    SETPC           shift and go to state 21
    SETBC           shift and go to state 22
    PENUP           shift and go to state 23
    PENDOWN         shift and go to state 24
    SHOW            shift and go to state 25
    HIDE            shift and go to state 26
    HOME            shift and go to state 27
    CLEAN           shift and go to state 28
    RESET           shift and go to state 29
    REPEAT          shift and go to state 30
    IF              shift and go to state 31
    IFELSE          shift and go to state 32
    MAKE            shift and go to state 33
    TO              shift and go to state 34
    STRING          shift and go to state 35
    PRINT           shift and go to state 36

    statement                      shift and go to state 37
    turtle_instruction             shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    variable_declaration           shift and go to state 7
    procedure_definition           shift and go to state 8
    procedure_call                 shift and go to state 9
    print_statement                shift and go to state 10

state 128

    (32) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .

    SETXY           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    FORWARD         reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    BACK            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RIGHT           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    LEFT            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETX            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETY            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETH            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SPEED           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETPS           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETPC           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETBC           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PENUP           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PENDOWN         reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SHOW            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    HIDE            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    HOME            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    CLEAN           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RESET           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    REPEAT          reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    IF              reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    IFELSE          reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    MAKE            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    TO              reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    STRING          reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PRINT           reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    $end            reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RBR             reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    END             reduce using rule 32 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COLON in state 66 resolved as shift
WARNING: shift/reduce conflict for COLON in state 91 resolved as shift
WARNING: shift/reduce conflict for SETXY in state 91 resolved as shift
WARNING: shift/reduce conflict for FORWARD in state 91 resolved as shift
WARNING: shift/reduce conflict for BACK in state 91 resolved as shift
WARNING: shift/reduce conflict for RIGHT in state 91 resolved as shift
WARNING: shift/reduce conflict for LEFT in state 91 resolved as shift
WARNING: shift/reduce conflict for SETX in state 91 resolved as shift
WARNING: shift/reduce conflict for SETY in state 91 resolved as shift
WARNING: shift/reduce conflict for SETH in state 91 resolved as shift
WARNING: shift/reduce conflict for SPEED in state 91 resolved as shift
WARNING: shift/reduce conflict for SETPS in state 91 resolved as shift
WARNING: shift/reduce conflict for SETPC in state 91 resolved as shift
WARNING: shift/reduce conflict for SETBC in state 91 resolved as shift
WARNING: shift/reduce conflict for PENUP in state 91 resolved as shift
WARNING: shift/reduce conflict for PENDOWN in state 91 resolved as shift
WARNING: shift/reduce conflict for SHOW in state 91 resolved as shift
WARNING: shift/reduce conflict for HIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for HOME in state 91 resolved as shift
WARNING: shift/reduce conflict for CLEAN in state 91 resolved as shift
WARNING: shift/reduce conflict for RESET in state 91 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for IFELSE in state 91 resolved as shift
WARNING: shift/reduce conflict for MAKE in state 91 resolved as shift
WARNING: shift/reduce conflict for TO in state 91 resolved as shift
WARNING: shift/reduce conflict for STRING in state 91 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 91 resolved as shift
