
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSBACK COLON DIVIDE EQUALS FALSE FLOAT FORWARD GT GTE IF INT LBR LEFT LPAR LT LTE MAKE MINUS PENDOWN PENUP PLUS PRINT QUOTE RBR REPEAT RIGHT RPAR STRING TIMES TRUE\n    statement_list : statement_list statement\n                   | statement\n    \n    statement : turtle_instruction\n              | repeat_statement\n              | if_statement\n              | variable_declaration\n              | print_statement\n    \n    turtle_instruction : FORWARD expression\n                       | BACK expression\n                       | RIGHT expression\n                       | LEFT expression\n                       | PENUP\n                       | PENDOWN\n    \n    repeat_statement : REPEAT INT LBR statement_list RBR \n    \n    if_statement : IF condition LBR statement_list RBR\n    \n    variable_declaration : MAKE word expression\n    \n    print_statement : PRINT word\n    \n    print_statement : PRINT expression\n    \n    expression : INT\n               | FLOAT\n    \n    expression : name\n    \n    expression : LPAR expression RPAR\n    \n    expression : MINUS expression %prec UMINUS\n    \n    expression : expression TIMES expression\n               | expression DIVIDE expression\n               | expression PLUS expression\n               | expression MINUS expression\n    \n    condition : TRUE\n              | FALSE\n    \n    condition : expression GT expression\n              | expression LT expression\n              | expression GTE expression\n              | expression LTE expression\n              | expression EQUALS expression\n    \n    word : QUOTE STRING\n    \n    name : COLON STRING\n    '
    
_lr_action_items = {'FORWARD':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[8,8,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,8,8,-16,-35,-24,-25,-26,-27,-22,8,8,-14,-15,]),'BACK':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[9,9,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,9,9,-16,-35,-24,-25,-26,-27,-22,9,9,-14,-15,]),'RIGHT':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[10,10,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,10,10,-16,-35,-24,-25,-26,-27,-22,10,10,-14,-15,]),'LEFT':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[11,11,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,11,11,-16,-35,-24,-25,-26,-27,-22,11,11,-14,-15,]),'PENUP':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[12,12,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,12,12,-16,-35,-24,-25,-26,-27,-22,12,12,-14,-15,]),'PENDOWN':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[13,13,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,13,13,-16,-35,-24,-25,-26,-27,-22,13,13,-14,-15,]),'REPEAT':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[14,14,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,14,14,-16,-35,-24,-25,-26,-27,-22,14,14,-14,-15,]),'IF':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[15,15,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,15,15,-16,-35,-24,-25,-26,-27,-22,15,15,-14,-15,]),'MAKE':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[16,16,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,16,16,-16,-35,-24,-25,-26,-27,-22,16,16,-14,-15,]),'PRINT':([0,1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,45,46,52,53,54,55,56,57,58,59,60,66,67,],[17,17,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,17,17,-16,-35,-24,-25,-26,-27,-22,17,17,-14,-15,]),'$end':([1,2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,52,53,54,55,56,57,58,66,67,],[0,-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,-16,-35,-24,-25,-26,-27,-22,-14,-15,]),'RBR':([2,3,4,5,6,7,12,13,18,19,20,21,22,26,27,28,36,37,43,44,52,53,54,55,56,57,58,59,60,66,67,],[-2,-3,-4,-5,-6,-7,-12,-13,-1,-8,-19,-20,-21,-9,-10,-11,-17,-18,-23,-36,-16,-35,-24,-25,-26,-27,-22,66,67,-14,-15,]),'INT':([8,9,10,11,14,15,17,23,24,34,38,39,40,41,47,48,49,50,51,53,],[20,20,20,20,29,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-35,]),'FLOAT':([8,9,10,11,15,17,23,24,34,38,39,40,41,47,48,49,50,51,53,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-35,]),'LPAR':([8,9,10,11,15,17,23,24,34,38,39,40,41,47,48,49,50,51,53,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-35,]),'MINUS':([8,9,10,11,15,17,19,20,21,22,23,24,26,27,28,33,34,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,],[24,24,24,24,24,24,41,-19,-20,-21,24,24,41,41,41,41,24,41,24,24,24,24,41,-23,-36,24,24,24,24,24,41,-35,-24,-25,-26,-27,-22,41,41,41,41,41,]),'COLON':([8,9,10,11,15,17,23,24,34,38,39,40,41,47,48,49,50,51,53,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-35,]),'TRUE':([15,],[31,]),'FALSE':([15,],[32,]),'QUOTE':([16,17,],[35,35,]),'TIMES':([19,20,21,22,26,27,28,33,37,42,43,44,52,54,55,56,57,58,61,62,63,64,65,],[38,-19,-20,-21,38,38,38,38,38,38,-23,-36,38,-24,-25,38,38,-22,38,38,38,38,38,]),'DIVIDE':([19,20,21,22,26,27,28,33,37,42,43,44,52,54,55,56,57,58,61,62,63,64,65,],[39,-19,-20,-21,39,39,39,39,39,39,-23,-36,39,-24,-25,39,39,-22,39,39,39,39,39,]),'PLUS':([19,20,21,22,26,27,28,33,37,42,43,44,52,54,55,56,57,58,61,62,63,64,65,],[40,-19,-20,-21,40,40,40,40,40,40,-23,-36,40,-24,-25,-26,-27,-22,40,40,40,40,40,]),'GT':([20,21,22,33,43,44,54,55,56,57,58,],[-19,-20,-21,47,-23,-36,-24,-25,-26,-27,-22,]),'LT':([20,21,22,33,43,44,54,55,56,57,58,],[-19,-20,-21,48,-23,-36,-24,-25,-26,-27,-22,]),'GTE':([20,21,22,33,43,44,54,55,56,57,58,],[-19,-20,-21,49,-23,-36,-24,-25,-26,-27,-22,]),'LTE':([20,21,22,33,43,44,54,55,56,57,58,],[-19,-20,-21,50,-23,-36,-24,-25,-26,-27,-22,]),'EQUALS':([20,21,22,33,43,44,54,55,56,57,58,],[-19,-20,-21,51,-23,-36,-24,-25,-26,-27,-22,]),'RPAR':([20,21,22,42,43,44,54,55,56,57,58,],[-19,-20,-21,58,-23,-36,-24,-25,-26,-27,-22,]),'LBR':([20,21,22,29,30,31,32,43,44,54,55,56,57,58,61,62,63,64,65,],[-19,-20,-21,45,46,-28,-29,-23,-36,-24,-25,-26,-27,-22,-30,-31,-32,-33,-34,]),'STRING':([25,35,],[44,53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,45,46,],[1,59,60,]),'statement':([0,1,45,46,59,60,],[2,18,2,2,18,18,]),'turtle_instruction':([0,1,45,46,59,60,],[3,3,3,3,3,3,]),'repeat_statement':([0,1,45,46,59,60,],[4,4,4,4,4,4,]),'if_statement':([0,1,45,46,59,60,],[5,5,5,5,5,5,]),'variable_declaration':([0,1,45,46,59,60,],[6,6,6,6,6,6,]),'print_statement':([0,1,45,46,59,60,],[7,7,7,7,7,7,]),'expression':([8,9,10,11,15,17,23,24,34,38,39,40,41,47,48,49,50,51,],[19,26,27,28,33,37,42,43,52,54,55,56,57,61,62,63,64,65,]),'name':([8,9,10,11,15,17,23,24,34,38,39,40,41,47,48,49,50,51,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'condition':([15,],[30,]),'word':([16,17,],[34,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','grammar.py',88),
  ('statement_list -> statement','statement_list',1,'p_statement_list','grammar.py',89),
  ('statement -> turtle_instruction','statement',1,'p_statement','grammar.py',99),
  ('statement -> repeat_statement','statement',1,'p_statement','grammar.py',100),
  ('statement -> if_statement','statement',1,'p_statement','grammar.py',101),
  ('statement -> variable_declaration','statement',1,'p_statement','grammar.py',102),
  ('statement -> print_statement','statement',1,'p_statement','grammar.py',103),
  ('turtle_instruction -> FORWARD expression','turtle_instruction',2,'p_turtle_instruction','grammar.py',109),
  ('turtle_instruction -> BACK expression','turtle_instruction',2,'p_turtle_instruction','grammar.py',110),
  ('turtle_instruction -> RIGHT expression','turtle_instruction',2,'p_turtle_instruction','grammar.py',111),
  ('turtle_instruction -> LEFT expression','turtle_instruction',2,'p_turtle_instruction','grammar.py',112),
  ('turtle_instruction -> PENUP','turtle_instruction',1,'p_turtle_instruction','grammar.py',113),
  ('turtle_instruction -> PENDOWN','turtle_instruction',1,'p_turtle_instruction','grammar.py',114),
  ('repeat_statement -> REPEAT INT LBR statement_list RBR','repeat_statement',5,'p_repeat_statement','grammar.py',123),
  ('if_statement -> IF condition LBR statement_list RBR','if_statement',5,'p_if_statement','grammar.py',129),
  ('variable_declaration -> MAKE word expression','variable_declaration',3,'p_variable_declaration','grammar.py',135),
  ('print_statement -> PRINT word','print_statement',2,'p_print_statement_word','grammar.py',141),
  ('print_statement -> PRINT expression','print_statement',2,'p_print_statement_expression','grammar.py',147),
  ('expression -> INT','expression',1,'p_expression_int_float','grammar.py',153),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','grammar.py',154),
  ('expression -> name','expression',1,'p_expression_var','grammar.py',160),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_group','grammar.py',166),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','grammar.py',172),
  ('expression -> expression TIMES expression','expression',3,'p_expression','grammar.py',178),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','grammar.py',179),
  ('expression -> expression PLUS expression','expression',3,'p_expression','grammar.py',180),
  ('expression -> expression MINUS expression','expression',3,'p_expression','grammar.py',181),
  ('condition -> TRUE','condition',1,'p_condition_true_false','grammar.py',187),
  ('condition -> FALSE','condition',1,'p_condition_true_false','grammar.py',188),
  ('condition -> expression GT expression','condition',3,'p_condition','grammar.py',195),
  ('condition -> expression LT expression','condition',3,'p_condition','grammar.py',196),
  ('condition -> expression GTE expression','condition',3,'p_condition','grammar.py',197),
  ('condition -> expression LTE expression','condition',3,'p_condition','grammar.py',198),
  ('condition -> expression EQUALS expression','condition',3,'p_condition','grammar.py',199),
  ('word -> QUOTE STRING','word',2,'p_word','grammar.py',205),
  ('name -> COLON STRING','name',2,'p_name','grammar.py',211),
]
